-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Server version:               6.0.10-alpha-community - MySQL Community Server (GPL)
-- Server OS:                    Win32
-- HeidiSQL Version:             9.4.0.5125
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- Dumping database structure for information_schema
CREATE DATABASE IF NOT EXISTS `information_schema` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `information_schema`;

-- Dumping structure for table information_schema.CHARACTER_SETS
CREATE TEMPORARY TABLE IF NOT EXISTS `CHARACTER_SETS` (
  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',
  `DEFAULT_COLLATE_NAME` varchar(32) NOT NULL DEFAULT '',
  `DESCRIPTION` varchar(60) NOT NULL DEFAULT '',
  `MAXLEN` bigint(3) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.CHARACTER_SETS: -1 rows
/*!40000 ALTER TABLE `CHARACTER_SETS` DISABLE KEYS */;
INSERT INTO `CHARACTER_SETS` (`CHARACTER_SET_NAME`, `DEFAULT_COLLATE_NAME`, `DESCRIPTION`, `MAXLEN`) VALUES
	('big5', 'big5_chinese_ci', 'Big5 Traditional Chinese', 2),
	('dec8', 'dec8_swedish_ci', 'DEC West European', 1),
	('cp850', 'cp850_general_ci', 'DOS West European', 1),
	('hp8', 'hp8_english_ci', 'HP West European', 1),
	('koi8r', 'koi8r_general_ci', 'KOI8-R Relcom Russian', 1),
	('latin1', 'latin1_swedish_ci', 'cp1252 West European', 1),
	('latin2', 'latin2_general_ci', 'ISO 8859-2 Central European', 1),
	('swe7', 'swe7_swedish_ci', '7bit Swedish', 1),
	('ascii', 'ascii_general_ci', 'US ASCII', 1),
	('ujis', 'ujis_japanese_ci', 'EUC-JP Japanese', 3),
	('sjis', 'sjis_japanese_ci', 'Shift-JIS Japanese', 2),
	('hebrew', 'hebrew_general_ci', 'ISO 8859-8 Hebrew', 1),
	('tis620', 'tis620_thai_ci', 'TIS620 Thai', 1),
	('euckr', 'euckr_korean_ci', 'EUC-KR Korean', 2),
	('koi8u', 'koi8u_general_ci', 'KOI8-U Ukrainian', 1),
	('gb2312', 'gb2312_chinese_ci', 'GB2312 Simplified Chinese', 2),
	('greek', 'greek_general_ci', 'ISO 8859-7 Greek', 1),
	('cp1250', 'cp1250_general_ci', 'Windows Central European', 1),
	('gbk', 'gbk_chinese_ci', 'GBK Simplified Chinese', 2),
	('latin5', 'latin5_turkish_ci', 'ISO 8859-9 Turkish', 1),
	('armscii8', 'armscii8_general_ci', 'ARMSCII-8 Armenian', 1),
	('utf8mb3', 'utf8mb3_general_ci', 'UTF-8 Unicode', 3),
	('ucs2', 'ucs2_general_ci', 'UCS-2 Unicode', 2),
	('cp866', 'cp866_general_ci', 'DOS Russian', 1),
	('keybcs2', 'keybcs2_general_ci', 'DOS Kamenicky Czech-Slovak', 1),
	('macce', 'macce_general_ci', 'Mac Central European', 1),
	('macroman', 'macroman_general_ci', 'Mac West European', 1),
	('cp852', 'cp852_general_ci', 'DOS Central European', 1),
	('latin7', 'latin7_general_ci', 'ISO 8859-13 Baltic', 1),
	('utf8', 'utf8_general_ci', 'UTF-8 Unicode', 4),
	('cp1251', 'cp1251_general_ci', 'Windows Cyrillic', 1),
	('utf16', 'utf16_general_ci', 'UTF-16 Unicode', 4),
	('cp1256', 'cp1256_general_ci', 'Windows Arabic', 1),
	('cp1257', 'cp1257_general_ci', 'Windows Baltic', 1),
	('utf32', 'utf32_general_ci', 'UTF-32 Unicode', 4),
	('binary', 'binary', 'Binary pseudo charset', 1),
	('geostd8', 'geostd8_general_ci', 'GEOSTD8 Georgian', 1),
	('cp932', 'cp932_japanese_ci', 'SJIS for Windows Japanese', 2),
	('eucjpms', 'eucjpms_japanese_ci', 'UJIS for Windows Japanese', 3);
/*!40000 ALTER TABLE `CHARACTER_SETS` ENABLE KEYS */;

-- Dumping structure for table information_schema.COLLATIONS
CREATE TEMPORARY TABLE IF NOT EXISTS `COLLATIONS` (
  `COLLATION_NAME` varchar(32) NOT NULL DEFAULT '',
  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',
  `ID` bigint(11) NOT NULL DEFAULT '0',
  `IS_DEFAULT` varchar(3) NOT NULL DEFAULT '',
  `IS_COMPILED` varchar(3) NOT NULL DEFAULT '',
  `SORTLEN` bigint(3) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.COLLATIONS: -1 rows
/*!40000 ALTER TABLE `COLLATIONS` DISABLE KEYS */;
INSERT INTO `COLLATIONS` (`COLLATION_NAME`, `CHARACTER_SET_NAME`, `ID`, `IS_DEFAULT`, `IS_COMPILED`, `SORTLEN`) VALUES
	('big5_chinese_ci', 'big5', 1, 'Yes', 'Yes', 1),
	('big5_bin', 'big5', 84, '', 'Yes', 1),
	('dec8_swedish_ci', 'dec8', 3, 'Yes', 'Yes', 1),
	('dec8_bin', 'dec8', 69, '', 'Yes', 1),
	('cp850_general_ci', 'cp850', 4, 'Yes', 'Yes', 1),
	('cp850_bin', 'cp850', 80, '', 'Yes', 1),
	('hp8_english_ci', 'hp8', 6, 'Yes', 'Yes', 1),
	('hp8_bin', 'hp8', 72, '', 'Yes', 1),
	('koi8r_general_ci', 'koi8r', 7, 'Yes', 'Yes', 1),
	('koi8r_bin', 'koi8r', 74, '', 'Yes', 1),
	('latin1_german1_ci', 'latin1', 5, '', 'Yes', 1),
	('latin1_swedish_ci', 'latin1', 8, 'Yes', 'Yes', 1),
	('latin1_danish_ci', 'latin1', 15, '', 'Yes', 1),
	('latin1_german2_ci', 'latin1', 31, '', 'Yes', 2),
	('latin1_bin', 'latin1', 47, '', 'Yes', 1),
	('latin1_general_ci', 'latin1', 48, '', 'Yes', 1),
	('latin1_general_cs', 'latin1', 49, '', 'Yes', 1),
	('latin1_spanish_ci', 'latin1', 94, '', 'Yes', 1),
	('latin2_czech_cs', 'latin2', 2, '', 'Yes', 4),
	('latin2_general_ci', 'latin2', 9, 'Yes', 'Yes', 1),
	('latin2_hungarian_ci', 'latin2', 21, '', 'Yes', 1),
	('latin2_croatian_ci', 'latin2', 27, '', 'Yes', 1),
	('latin2_bin', 'latin2', 77, '', 'Yes', 1),
	('swe7_swedish_ci', 'swe7', 10, 'Yes', 'Yes', 1),
	('swe7_bin', 'swe7', 82, '', 'Yes', 1),
	('ascii_general_ci', 'ascii', 11, 'Yes', 'Yes', 1),
	('ascii_bin', 'ascii', 65, '', 'Yes', 1),
	('ujis_japanese_ci', 'ujis', 12, 'Yes', 'Yes', 1),
	('ujis_bin', 'ujis', 91, '', 'Yes', 1),
	('sjis_japanese_ci', 'sjis', 13, 'Yes', 'Yes', 1),
	('sjis_bin', 'sjis', 88, '', 'Yes', 1),
	('hebrew_general_ci', 'hebrew', 16, 'Yes', 'Yes', 1),
	('hebrew_bin', 'hebrew', 71, '', 'Yes', 1),
	('tis620_thai_ci', 'tis620', 18, 'Yes', 'Yes', 4),
	('tis620_bin', 'tis620', 89, '', 'Yes', 1),
	('euckr_korean_ci', 'euckr', 19, 'Yes', 'Yes', 1),
	('euckr_bin', 'euckr', 85, '', 'Yes', 1),
	('koi8u_general_ci', 'koi8u', 22, 'Yes', 'Yes', 1),
	('koi8u_bin', 'koi8u', 75, '', 'Yes', 1),
	('gb2312_chinese_ci', 'gb2312', 24, 'Yes', 'Yes', 1),
	('gb2312_bin', 'gb2312', 86, '', 'Yes', 1),
	('greek_general_ci', 'greek', 25, 'Yes', 'Yes', 1),
	('greek_bin', 'greek', 70, '', 'Yes', 1),
	('cp1250_general_ci', 'cp1250', 26, 'Yes', 'Yes', 1),
	('cp1250_czech_cs', 'cp1250', 34, '', 'Yes', 2),
	('cp1250_croatian_ci', 'cp1250', 44, '', 'Yes', 1),
	('cp1250_bin', 'cp1250', 66, '', 'Yes', 1),
	('cp1250_polish_ci', 'cp1250', 99, '', 'Yes', 1),
	('gbk_chinese_ci', 'gbk', 28, 'Yes', 'Yes', 1),
	('gbk_bin', 'gbk', 87, '', 'Yes', 1),
	('latin5_turkish_ci', 'latin5', 30, 'Yes', 'Yes', 1),
	('latin5_bin', 'latin5', 78, '', 'Yes', 1),
	('armscii8_general_ci', 'armscii8', 32, 'Yes', 'Yes', 1),
	('armscii8_bin', 'armscii8', 64, '', 'Yes', 1),
	('utf8mb3_general_ci', 'utf8mb3', 33, 'Yes', 'Yes', 1),
	('utf8mb3_bin', 'utf8mb3', 83, '', 'Yes', 1),
	('utf8mb3_unicode_ci', 'utf8mb3', 192, '', 'Yes', 8),
	('utf8mb3_icelandic_ci', 'utf8mb3', 193, '', 'Yes', 8),
	('utf8mb3_latvian_ci', 'utf8mb3', 194, '', 'Yes', 8),
	('utf8mb3_romanian_ci', 'utf8mb3', 195, '', 'Yes', 8),
	('utf8mb3_slovenian_ci', 'utf8mb3', 196, '', 'Yes', 8),
	('utf8mb3_polish_ci', 'utf8mb3', 197, '', 'Yes', 8),
	('utf8mb3_estonian_ci', 'utf8mb3', 198, '', 'Yes', 8),
	('utf8mb3_spanish_ci', 'utf8mb3', 199, '', 'Yes', 8),
	('utf8mb3_swedish_ci', 'utf8mb3', 200, '', 'Yes', 8),
	('utf8mb3_turkish_ci', 'utf8mb3', 201, '', 'Yes', 8),
	('utf8mb3_czech_ci', 'utf8mb3', 202, '', 'Yes', 8),
	('utf8mb3_danish_ci', 'utf8mb3', 203, '', 'Yes', 8),
	('utf8mb3_lithuanian_ci', 'utf8mb3', 204, '', 'Yes', 8),
	('utf8mb3_slovak_ci', 'utf8mb3', 205, '', 'Yes', 8),
	('utf8mb3_spanish2_ci', 'utf8mb3', 206, '', 'Yes', 8),
	('utf8mb3_roman_ci', 'utf8mb3', 207, '', 'Yes', 8),
	('utf8mb3_persian_ci', 'utf8mb3', 208, '', 'Yes', 8),
	('utf8mb3_esperanto_ci', 'utf8mb3', 209, '', 'Yes', 8),
	('utf8mb3_hungarian_ci', 'utf8mb3', 210, '', 'Yes', 8),
	('utf8mb3_sinhala_ci', 'utf8mb3', 211, '', 'Yes', 8),
	('ucs2_general_ci', 'ucs2', 35, 'Yes', 'Yes', 1),
	('ucs2_bin', 'ucs2', 90, '', 'Yes', 1),
	('ucs2_unicode_ci', 'ucs2', 128, '', 'Yes', 8),
	('ucs2_icelandic_ci', 'ucs2', 129, '', 'Yes', 8),
	('ucs2_latvian_ci', 'ucs2', 130, '', 'Yes', 8),
	('ucs2_romanian_ci', 'ucs2', 131, '', 'Yes', 8),
	('ucs2_slovenian_ci', 'ucs2', 132, '', 'Yes', 8),
	('ucs2_polish_ci', 'ucs2', 133, '', 'Yes', 8),
	('ucs2_estonian_ci', 'ucs2', 134, '', 'Yes', 8),
	('ucs2_spanish_ci', 'ucs2', 135, '', 'Yes', 8),
	('ucs2_swedish_ci', 'ucs2', 136, '', 'Yes', 8),
	('ucs2_turkish_ci', 'ucs2', 137, '', 'Yes', 8),
	('ucs2_czech_ci', 'ucs2', 138, '', 'Yes', 8),
	('ucs2_danish_ci', 'ucs2', 139, '', 'Yes', 8),
	('ucs2_lithuanian_ci', 'ucs2', 140, '', 'Yes', 8),
	('ucs2_slovak_ci', 'ucs2', 141, '', 'Yes', 8),
	('ucs2_spanish2_ci', 'ucs2', 142, '', 'Yes', 8),
	('ucs2_roman_ci', 'ucs2', 143, '', 'Yes', 8),
	('ucs2_persian_ci', 'ucs2', 144, '', 'Yes', 8),
	('ucs2_esperanto_ci', 'ucs2', 145, '', 'Yes', 8),
	('ucs2_hungarian_ci', 'ucs2', 146, '', 'Yes', 8),
	('ucs2_sinhala_ci', 'ucs2', 147, '', 'Yes', 8),
	('cp866_general_ci', 'cp866', 36, 'Yes', 'Yes', 1),
	('cp866_bin', 'cp866', 68, '', 'Yes', 1),
	('keybcs2_general_ci', 'keybcs2', 37, 'Yes', 'Yes', 1),
	('keybcs2_bin', 'keybcs2', 73, '', 'Yes', 1),
	('macce_general_ci', 'macce', 38, 'Yes', 'Yes', 1),
	('macce_bin', 'macce', 43, '', 'Yes', 1),
	('macroman_general_ci', 'macroman', 39, 'Yes', 'Yes', 1),
	('macroman_bin', 'macroman', 53, '', 'Yes', 1),
	('cp852_general_ci', 'cp852', 40, 'Yes', 'Yes', 1),
	('cp852_bin', 'cp852', 81, '', 'Yes', 1),
	('latin7_estonian_cs', 'latin7', 20, '', 'Yes', 1),
	('latin7_general_ci', 'latin7', 41, 'Yes', 'Yes', 1),
	('latin7_general_cs', 'latin7', 42, '', 'Yes', 1),
	('latin7_bin', 'latin7', 79, '', 'Yes', 1),
	('utf8_general_ci', 'utf8', 45, 'Yes', 'Yes', 1),
	('utf8_bin', 'utf8', 46, '', 'Yes', 1),
	('utf8_unicode_ci', 'utf8', 224, '', 'Yes', 8),
	('utf8_icelandic_ci', 'utf8', 225, '', 'Yes', 8),
	('utf8_latvian_ci', 'utf8', 226, '', 'Yes', 8),
	('utf8_romanian_ci', 'utf8', 227, '', 'Yes', 8),
	('utf8_slovenian_ci', 'utf8', 228, '', 'Yes', 8),
	('utf8_polish_ci', 'utf8', 229, '', 'Yes', 8),
	('utf8_estonian_ci', 'utf8', 230, '', 'Yes', 8),
	('utf8_spanish_ci', 'utf8', 231, '', 'Yes', 8),
	('utf8_swedish_ci', 'utf8', 232, '', 'Yes', 8),
	('utf8_turkish_ci', 'utf8', 233, '', 'Yes', 8),
	('utf8_czech_ci', 'utf8', 234, '', 'Yes', 8),
	('utf8_danish_ci', 'utf8', 235, '', 'Yes', 8),
	('utf8_lithuanian_ci', 'utf8', 236, '', 'Yes', 8),
	('utf8_slovak_ci', 'utf8', 237, '', 'Yes', 8),
	('utf8_spanish2_ci', 'utf8', 238, '', 'Yes', 8),
	('utf8_roman_ci', 'utf8', 239, '', 'Yes', 8),
	('utf8_persian_ci', 'utf8', 240, '', 'Yes', 8),
	('utf8_esperanto_ci', 'utf8', 241, '', 'Yes', 8),
	('utf8_hungarian_ci', 'utf8', 242, '', 'Yes', 8),
	('utf8_sinhala_ci', 'utf8', 243, '', 'Yes', 8),
	('cp1251_bulgarian_ci', 'cp1251', 14, '', 'Yes', 1),
	('cp1251_ukrainian_ci', 'cp1251', 23, '', 'Yes', 1),
	('cp1251_bin', 'cp1251', 50, '', 'Yes', 1),
	('cp1251_general_ci', 'cp1251', 51, 'Yes', 'Yes', 1),
	('cp1251_general_cs', 'cp1251', 52, '', 'Yes', 1),
	('utf16_general_ci', 'utf16', 54, 'Yes', 'Yes', 1),
	('utf16_bin', 'utf16', 55, '', 'Yes', 1),
	('utf16_unicode_ci', 'utf16', 101, '', 'Yes', 8),
	('utf16_icelandic_ci', 'utf16', 102, '', 'Yes', 8),
	('utf16_latvian_ci', 'utf16', 103, '', 'Yes', 8),
	('utf16_romanian_ci', 'utf16', 104, '', 'Yes', 8),
	('utf16_slovenian_ci', 'utf16', 105, '', 'Yes', 8),
	('utf16_polish_ci', 'utf16', 106, '', 'Yes', 8),
	('utf16_estonian_ci', 'utf16', 107, '', 'Yes', 8),
	('utf16_spanish_ci', 'utf16', 108, '', 'Yes', 8),
	('utf16_swedish_ci', 'utf16', 109, '', 'Yes', 8),
	('utf16_turkish_ci', 'utf16', 110, '', 'Yes', 8),
	('utf16_czech_ci', 'utf16', 111, '', 'Yes', 8),
	('utf16_danish_ci', 'utf16', 112, '', 'Yes', 8),
	('utf16_lithuanian_ci', 'utf16', 113, '', 'Yes', 8),
	('utf16_slovak_ci', 'utf16', 114, '', 'Yes', 8),
	('utf16_spanish2_ci', 'utf16', 115, '', 'Yes', 8),
	('utf16_roman_ci', 'utf16', 116, '', 'Yes', 8),
	('utf16_persian_ci', 'utf16', 117, '', 'Yes', 8),
	('utf16_esperanto_ci', 'utf16', 118, '', 'Yes', 8),
	('utf16_hungarian_ci', 'utf16', 119, '', 'Yes', 8),
	('utf16_sinhala_ci', 'utf16', 120, '', 'Yes', 8),
	('cp1256_general_ci', 'cp1256', 57, 'Yes', 'Yes', 1),
	('cp1256_bin', 'cp1256', 67, '', 'Yes', 1),
	('cp1257_lithuanian_ci', 'cp1257', 29, '', 'Yes', 1),
	('cp1257_bin', 'cp1257', 58, '', 'Yes', 1),
	('cp1257_general_ci', 'cp1257', 59, 'Yes', 'Yes', 1),
	('utf32_general_ci', 'utf32', 60, 'Yes', 'Yes', 1),
	('utf32_bin', 'utf32', 61, '', 'Yes', 1),
	('utf32_unicode_ci', 'utf32', 160, '', 'Yes', 8),
	('utf32_icelandic_ci', 'utf32', 161, '', 'Yes', 8),
	('utf32_latvian_ci', 'utf32', 162, '', 'Yes', 8),
	('utf32_romanian_ci', 'utf32', 163, '', 'Yes', 8),
	('utf32_slovenian_ci', 'utf32', 164, '', 'Yes', 8),
	('utf32_polish_ci', 'utf32', 165, '', 'Yes', 8),
	('utf32_estonian_ci', 'utf32', 166, '', 'Yes', 8),
	('utf32_spanish_ci', 'utf32', 167, '', 'Yes', 8),
	('utf32_swedish_ci', 'utf32', 168, '', 'Yes', 8),
	('utf32_turkish_ci', 'utf32', 169, '', 'Yes', 8),
	('utf32_czech_ci', 'utf32', 170, '', 'Yes', 8),
	('utf32_danish_ci', 'utf32', 171, '', 'Yes', 8),
	('utf32_lithuanian_ci', 'utf32', 172, '', 'Yes', 8),
	('utf32_slovak_ci', 'utf32', 173, '', 'Yes', 8),
	('utf32_spanish2_ci', 'utf32', 174, '', 'Yes', 8),
	('utf32_roman_ci', 'utf32', 175, '', 'Yes', 8),
	('utf32_persian_ci', 'utf32', 176, '', 'Yes', 8),
	('utf32_esperanto_ci', 'utf32', 177, '', 'Yes', 8),
	('utf32_hungarian_ci', 'utf32', 178, '', 'Yes', 8),
	('utf32_sinhala_ci', 'utf32', 179, '', 'Yes', 8),
	('binary', 'binary', 63, 'Yes', 'Yes', 1),
	('geostd8_general_ci', 'geostd8', 92, 'Yes', 'Yes', 1),
	('geostd8_bin', 'geostd8', 93, '', 'Yes', 1),
	('cp932_japanese_ci', 'cp932', 95, 'Yes', 'Yes', 1),
	('cp932_bin', 'cp932', 96, '', 'Yes', 1),
	('eucjpms_japanese_ci', 'eucjpms', 97, 'Yes', 'Yes', 1),
	('eucjpms_bin', 'eucjpms', 98, '', 'Yes', 1);
/*!40000 ALTER TABLE `COLLATIONS` ENABLE KEYS */;

-- Dumping structure for table information_schema.COLLATION_CHARACTER_SET_APPLICABILITY
CREATE TEMPORARY TABLE IF NOT EXISTS `COLLATION_CHARACTER_SET_APPLICABILITY` (
  `COLLATION_NAME` varchar(32) NOT NULL DEFAULT '',
  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.COLLATION_CHARACTER_SET_APPLICABILITY: -1 rows
/*!40000 ALTER TABLE `COLLATION_CHARACTER_SET_APPLICABILITY` DISABLE KEYS */;
INSERT INTO `COLLATION_CHARACTER_SET_APPLICABILITY` (`COLLATION_NAME`, `CHARACTER_SET_NAME`) VALUES
	('big5_chinese_ci', 'big5'),
	('big5_bin', 'big5'),
	('dec8_swedish_ci', 'dec8'),
	('dec8_bin', 'dec8'),
	('cp850_general_ci', 'cp850'),
	('cp850_bin', 'cp850'),
	('hp8_english_ci', 'hp8'),
	('hp8_bin', 'hp8'),
	('koi8r_general_ci', 'koi8r'),
	('koi8r_bin', 'koi8r'),
	('latin1_german1_ci', 'latin1'),
	('latin1_swedish_ci', 'latin1'),
	('latin1_danish_ci', 'latin1'),
	('latin1_german2_ci', 'latin1'),
	('latin1_bin', 'latin1'),
	('latin1_general_ci', 'latin1'),
	('latin1_general_cs', 'latin1'),
	('latin1_spanish_ci', 'latin1'),
	('latin2_czech_cs', 'latin2'),
	('latin2_general_ci', 'latin2'),
	('latin2_hungarian_ci', 'latin2'),
	('latin2_croatian_ci', 'latin2'),
	('latin2_bin', 'latin2'),
	('swe7_swedish_ci', 'swe7'),
	('swe7_bin', 'swe7'),
	('ascii_general_ci', 'ascii'),
	('ascii_bin', 'ascii'),
	('ujis_japanese_ci', 'ujis'),
	('ujis_bin', 'ujis'),
	('sjis_japanese_ci', 'sjis'),
	('sjis_bin', 'sjis'),
	('hebrew_general_ci', 'hebrew'),
	('hebrew_bin', 'hebrew'),
	('tis620_thai_ci', 'tis620'),
	('tis620_bin', 'tis620'),
	('euckr_korean_ci', 'euckr'),
	('euckr_bin', 'euckr'),
	('koi8u_general_ci', 'koi8u'),
	('koi8u_bin', 'koi8u'),
	('gb2312_chinese_ci', 'gb2312'),
	('gb2312_bin', 'gb2312'),
	('greek_general_ci', 'greek'),
	('greek_bin', 'greek'),
	('cp1250_general_ci', 'cp1250'),
	('cp1250_czech_cs', 'cp1250'),
	('cp1250_croatian_ci', 'cp1250'),
	('cp1250_bin', 'cp1250'),
	('cp1250_polish_ci', 'cp1250'),
	('gbk_chinese_ci', 'gbk'),
	('gbk_bin', 'gbk'),
	('latin5_turkish_ci', 'latin5'),
	('latin5_bin', 'latin5'),
	('armscii8_general_ci', 'armscii8'),
	('armscii8_bin', 'armscii8'),
	('utf8mb3_general_ci', 'utf8mb3'),
	('utf8mb3_bin', 'utf8mb3'),
	('utf8mb3_unicode_ci', 'utf8mb3'),
	('utf8mb3_icelandic_ci', 'utf8mb3'),
	('utf8mb3_latvian_ci', 'utf8mb3'),
	('utf8mb3_romanian_ci', 'utf8mb3'),
	('utf8mb3_slovenian_ci', 'utf8mb3'),
	('utf8mb3_polish_ci', 'utf8mb3'),
	('utf8mb3_estonian_ci', 'utf8mb3'),
	('utf8mb3_spanish_ci', 'utf8mb3'),
	('utf8mb3_swedish_ci', 'utf8mb3'),
	('utf8mb3_turkish_ci', 'utf8mb3'),
	('utf8mb3_czech_ci', 'utf8mb3'),
	('utf8mb3_danish_ci', 'utf8mb3'),
	('utf8mb3_lithuanian_ci', 'utf8mb3'),
	('utf8mb3_slovak_ci', 'utf8mb3'),
	('utf8mb3_spanish2_ci', 'utf8mb3'),
	('utf8mb3_roman_ci', 'utf8mb3'),
	('utf8mb3_persian_ci', 'utf8mb3'),
	('utf8mb3_esperanto_ci', 'utf8mb3'),
	('utf8mb3_hungarian_ci', 'utf8mb3'),
	('utf8mb3_sinhala_ci', 'utf8mb3'),
	('ucs2_general_ci', 'ucs2'),
	('ucs2_bin', 'ucs2'),
	('ucs2_unicode_ci', 'ucs2'),
	('ucs2_icelandic_ci', 'ucs2'),
	('ucs2_latvian_ci', 'ucs2'),
	('ucs2_romanian_ci', 'ucs2'),
	('ucs2_slovenian_ci', 'ucs2'),
	('ucs2_polish_ci', 'ucs2'),
	('ucs2_estonian_ci', 'ucs2'),
	('ucs2_spanish_ci', 'ucs2'),
	('ucs2_swedish_ci', 'ucs2'),
	('ucs2_turkish_ci', 'ucs2'),
	('ucs2_czech_ci', 'ucs2'),
	('ucs2_danish_ci', 'ucs2'),
	('ucs2_lithuanian_ci', 'ucs2'),
	('ucs2_slovak_ci', 'ucs2'),
	('ucs2_spanish2_ci', 'ucs2'),
	('ucs2_roman_ci', 'ucs2'),
	('ucs2_persian_ci', 'ucs2'),
	('ucs2_esperanto_ci', 'ucs2'),
	('ucs2_hungarian_ci', 'ucs2'),
	('ucs2_sinhala_ci', 'ucs2'),
	('cp866_general_ci', 'cp866'),
	('cp866_bin', 'cp866'),
	('keybcs2_general_ci', 'keybcs2'),
	('keybcs2_bin', 'keybcs2'),
	('macce_general_ci', 'macce'),
	('macce_bin', 'macce'),
	('macroman_general_ci', 'macroman'),
	('macroman_bin', 'macroman'),
	('cp852_general_ci', 'cp852'),
	('cp852_bin', 'cp852'),
	('latin7_estonian_cs', 'latin7'),
	('latin7_general_ci', 'latin7'),
	('latin7_general_cs', 'latin7'),
	('latin7_bin', 'latin7'),
	('utf8_general_ci', 'utf8'),
	('utf8_bin', 'utf8'),
	('utf8_unicode_ci', 'utf8'),
	('utf8_icelandic_ci', 'utf8'),
	('utf8_latvian_ci', 'utf8'),
	('utf8_romanian_ci', 'utf8'),
	('utf8_slovenian_ci', 'utf8'),
	('utf8_polish_ci', 'utf8'),
	('utf8_estonian_ci', 'utf8'),
	('utf8_spanish_ci', 'utf8'),
	('utf8_swedish_ci', 'utf8'),
	('utf8_turkish_ci', 'utf8'),
	('utf8_czech_ci', 'utf8'),
	('utf8_danish_ci', 'utf8'),
	('utf8_lithuanian_ci', 'utf8'),
	('utf8_slovak_ci', 'utf8'),
	('utf8_spanish2_ci', 'utf8'),
	('utf8_roman_ci', 'utf8'),
	('utf8_persian_ci', 'utf8'),
	('utf8_esperanto_ci', 'utf8'),
	('utf8_hungarian_ci', 'utf8'),
	('utf8_sinhala_ci', 'utf8'),
	('cp1251_bulgarian_ci', 'cp1251'),
	('cp1251_ukrainian_ci', 'cp1251'),
	('cp1251_bin', 'cp1251'),
	('cp1251_general_ci', 'cp1251'),
	('cp1251_general_cs', 'cp1251'),
	('utf16_general_ci', 'utf16'),
	('utf16_bin', 'utf16'),
	('utf16_unicode_ci', 'utf16'),
	('utf16_icelandic_ci', 'utf16'),
	('utf16_latvian_ci', 'utf16'),
	('utf16_romanian_ci', 'utf16'),
	('utf16_slovenian_ci', 'utf16'),
	('utf16_polish_ci', 'utf16'),
	('utf16_estonian_ci', 'utf16'),
	('utf16_spanish_ci', 'utf16'),
	('utf16_swedish_ci', 'utf16'),
	('utf16_turkish_ci', 'utf16'),
	('utf16_czech_ci', 'utf16'),
	('utf16_danish_ci', 'utf16'),
	('utf16_lithuanian_ci', 'utf16'),
	('utf16_slovak_ci', 'utf16'),
	('utf16_spanish2_ci', 'utf16'),
	('utf16_roman_ci', 'utf16'),
	('utf16_persian_ci', 'utf16'),
	('utf16_esperanto_ci', 'utf16'),
	('utf16_hungarian_ci', 'utf16'),
	('utf16_sinhala_ci', 'utf16'),
	('cp1256_general_ci', 'cp1256'),
	('cp1256_bin', 'cp1256'),
	('cp1257_lithuanian_ci', 'cp1257'),
	('cp1257_bin', 'cp1257'),
	('cp1257_general_ci', 'cp1257'),
	('utf32_general_ci', 'utf32'),
	('utf32_bin', 'utf32'),
	('utf32_unicode_ci', 'utf32'),
	('utf32_icelandic_ci', 'utf32'),
	('utf32_latvian_ci', 'utf32'),
	('utf32_romanian_ci', 'utf32'),
	('utf32_slovenian_ci', 'utf32'),
	('utf32_polish_ci', 'utf32'),
	('utf32_estonian_ci', 'utf32'),
	('utf32_spanish_ci', 'utf32'),
	('utf32_swedish_ci', 'utf32'),
	('utf32_turkish_ci', 'utf32'),
	('utf32_czech_ci', 'utf32'),
	('utf32_danish_ci', 'utf32'),
	('utf32_lithuanian_ci', 'utf32'),
	('utf32_slovak_ci', 'utf32'),
	('utf32_spanish2_ci', 'utf32'),
	('utf32_roman_ci', 'utf32'),
	('utf32_persian_ci', 'utf32'),
	('utf32_esperanto_ci', 'utf32'),
	('utf32_hungarian_ci', 'utf32'),
	('utf32_sinhala_ci', 'utf32'),
	('binary', 'binary'),
	('geostd8_general_ci', 'geostd8'),
	('geostd8_bin', 'geostd8'),
	('cp932_japanese_ci', 'cp932'),
	('cp932_bin', 'cp932'),
	('eucjpms_japanese_ci', 'eucjpms'),
	('eucjpms_bin', 'eucjpms');
/*!40000 ALTER TABLE `COLLATION_CHARACTER_SET_APPLICABILITY` ENABLE KEYS */;

-- Dumping structure for table information_schema.COLUMNS
CREATE TEMPORARY TABLE IF NOT EXISTS `COLUMNS` (
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',
  `ORDINAL_POSITION` bigint(21) unsigned NOT NULL DEFAULT '0',
  `COLUMN_DEFAULT` longtext,
  `IS_NULLABLE` varchar(3) NOT NULL DEFAULT '',
  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',
  `CHARACTER_MAXIMUM_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `CHARACTER_OCTET_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `NUMERIC_PRECISION` bigint(21) unsigned DEFAULT NULL,
  `NUMERIC_SCALE` bigint(21) unsigned DEFAULT NULL,
  `CHARACTER_SET_NAME` varchar(32) DEFAULT NULL,
  `COLLATION_NAME` varchar(32) DEFAULT NULL,
  `COLUMN_TYPE` longtext NOT NULL,
  `COLUMN_KEY` varchar(3) NOT NULL DEFAULT '',
  `EXTRA` varchar(27) NOT NULL DEFAULT '',
  `PRIVILEGES` varchar(80) NOT NULL DEFAULT '',
  `COLUMN_COMMENT` varchar(1024) NOT NULL DEFAULT '',
  `STORAGE` varchar(8) NOT NULL DEFAULT '',
  `FORMAT` varchar(8) NOT NULL DEFAULT ''
) ENGINE=MARIA DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- Dumping data for table information_schema.COLUMNS: -1 rows
/*!40000 ALTER TABLE `COLUMNS` DISABLE KEYS */;
INSERT INTO `COLUMNS` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `COLUMN_NAME`, `ORDINAL_POSITION`, `COLUMN_DEFAULT`, `IS_NULLABLE`, `DATA_TYPE`, `CHARACTER_MAXIMUM_LENGTH`, `CHARACTER_OCTET_LENGTH`, `NUMERIC_PRECISION`, `NUMERIC_SCALE`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `COLUMN_TYPE`, `COLUMN_KEY`, `EXTRA`, `PRIVILEGES`, `COLUMN_COMMENT`, `STORAGE`, `FORMAT`) VALUES
	('def', 'information_schema', 'CHARACTER_SETS', 'CHARACTER_SET_NAME', 1, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'CHARACTER_SETS', 'DEFAULT_COLLATE_NAME', 2, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'CHARACTER_SETS', 'DESCRIPTION', 3, '', 'NO', 'varchar', 60, 240, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(60)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'CHARACTER_SETS', 'MAXLEN', 4, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLLATIONS', 'COLLATION_NAME', 1, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLLATIONS', 'CHARACTER_SET_NAME', 2, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLLATIONS', 'ID', 3, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(11)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLLATIONS', 'IS_DEFAULT', 4, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLLATIONS', 'IS_COMPILED', 5, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLLATIONS', 'SORTLEN', 6, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', 'COLLATION_NAME', 1, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', 'CHARACTER_SET_NAME', 2, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'TABLE_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'COLUMN_NAME', 4, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'ORDINAL_POSITION', 5, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'COLUMN_DEFAULT', 6, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'IS_NULLABLE', 7, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'DATA_TYPE', 8, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'CHARACTER_MAXIMUM_LENGTH', 9, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'CHARACTER_OCTET_LENGTH', 10, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'NUMERIC_PRECISION', 11, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'NUMERIC_SCALE', 12, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'CHARACTER_SET_NAME', 13, NULL, 'YES', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'COLLATION_NAME', 14, NULL, 'YES', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'COLUMN_TYPE', 15, NULL, 'NO', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'COLUMN_KEY', 16, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'EXTRA', 17, '', 'NO', 'varchar', 27, 108, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(27)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'PRIVILEGES', 18, '', 'NO', 'varchar', 80, 320, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'COLUMN_COMMENT', 19, '', 'NO', 'varchar', 1024, 4096, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'STORAGE', 20, '', 'NO', 'varchar', 8, 32, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMNS', 'FORMAT', 21, '', 'NO', 'varchar', 8, 32, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMN_PRIVILEGES', 'GRANTEE', 1, '', 'NO', 'varchar', 81, 324, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(81)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMN_PRIVILEGES', 'TABLE_CATALOG', 2, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMN_PRIVILEGES', 'TABLE_SCHEMA', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMN_PRIVILEGES', 'TABLE_NAME', 4, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMN_PRIVILEGES', 'COLUMN_NAME', 5, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMN_PRIVILEGES', 'PRIVILEGE_TYPE', 6, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'COLUMN_PRIVILEGES', 'IS_GRANTABLE', 7, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ENGINES', 'ENGINE', 1, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ENGINES', 'SUPPORT', 2, '', 'NO', 'varchar', 8, 32, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ENGINES', 'COMMENT', 3, '', 'NO', 'varchar', 80, 320, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ENGINES', 'TRANSACTIONS', 4, NULL, 'YES', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ENGINES', 'XA', 5, NULL, 'YES', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ENGINES', 'SAVEPOINTS', 6, NULL, 'YES', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'EVENT_CATALOG', 1, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'EVENT_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'EVENT_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'DEFINER', 4, '', 'NO', 'varchar', 77, 308, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(77)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'TIME_ZONE', 5, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'EVENT_BODY', 6, '', 'NO', 'varchar', 8, 32, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'EVENT_DEFINITION', 7, NULL, 'NO', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'EVENT_TYPE', 8, '', 'NO', 'varchar', 9, 36, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(9)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'EXECUTE_AT', 9, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'INTERVAL_VALUE', 10, NULL, 'YES', 'varchar', 256, 1024, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(256)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'INTERVAL_FIELD', 11, NULL, 'YES', 'varchar', 18, 72, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(18)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'SQL_MODE', 12, '', 'NO', 'varchar', 8192, 32768, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8192)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'STARTS', 13, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'ENDS', 14, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'STATUS', 15, '', 'NO', 'varchar', 18, 72, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(18)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'ON_COMPLETION', 16, '', 'NO', 'varchar', 12, 48, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(12)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'CREATED', 17, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'LAST_ALTERED', 18, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'LAST_EXECUTED', 19, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'EVENT_COMMENT', 20, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'ORIGINATOR', 21, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(10)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'CHARACTER_SET_CLIENT', 22, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'COLLATION_CONNECTION', 23, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'EVENTS', 'DATABASE_COLLATION', 24, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'FILE_ID', 1, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'FILE_NAME', 2, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'FILE_TYPE', 3, '', 'NO', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'TABLESPACE_NAME', 4, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'TABLE_CATALOG', 5, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'TABLE_SCHEMA', 6, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'TABLE_NAME', 7, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'LOGFILE_GROUP_NAME', 8, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'LOGFILE_GROUP_NUMBER', 9, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'ENGINE', 10, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'FULLTEXT_KEYS', 11, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'DELETED_ROWS', 12, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'UPDATE_COUNT', 13, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'FREE_EXTENTS', 14, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'TOTAL_EXTENTS', 15, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'EXTENT_SIZE', 16, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'INITIAL_SIZE', 17, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'MAXIMUM_SIZE', 18, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'AUTOEXTEND_SIZE', 19, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'CREATION_TIME', 20, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'LAST_UPDATE_TIME', 21, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'LAST_ACCESS_TIME', 22, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'RECOVER_TIME', 23, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'TRANSACTION_COUNTER', 24, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'VERSION', 25, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'ROW_FORMAT', 26, NULL, 'YES', 'varchar', 10, 40, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(10)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'TABLE_ROWS', 27, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'AVG_ROW_LENGTH', 28, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'DATA_LENGTH', 29, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'MAX_DATA_LENGTH', 30, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'INDEX_LENGTH', 31, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'DATA_FREE', 32, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'CREATE_TIME', 33, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'UPDATE_TIME', 34, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'CHECK_TIME', 35, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'CHECKSUM', 36, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'STATUS', 37, '', 'NO', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FILES', 'EXTRA', 38, NULL, 'YES', 'varchar', 255, 1020, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(255)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'GLOBAL_STATUS', 'VARIABLE_NAME', 1, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'GLOBAL_STATUS', 'VARIABLE_VALUE', 2, NULL, 'YES', 'varchar', 1024, 4096, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'GLOBAL_VARIABLES', 'VARIABLE_NAME', 1, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'GLOBAL_VARIABLES', 'VARIABLE_VALUE', 2, NULL, 'YES', 'varchar', 1024, 4096, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'CONSTRAINT_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'CONSTRAINT_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'CONSTRAINT_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'TABLE_CATALOG', 4, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'TABLE_SCHEMA', 5, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'TABLE_NAME', 6, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'COLUMN_NAME', 7, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'ORDINAL_POSITION', 8, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(10)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'POSITION_IN_UNIQUE_CONSTRAINT', 9, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(10)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'REFERENCED_TABLE_SCHEMA', 10, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'REFERENCED_TABLE_NAME', 11, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'REFERENCED_COLUMN_NAME', 12, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'SPECIFIC_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'SPECIFIC_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'SPECIFIC_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'ORDINAL_POSITION', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'PARAMETER_MODE', 5, NULL, 'YES', 'varchar', 5, 20, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(5)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'PARAMETER_NAME', 6, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'DATA_TYPE', 7, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'CHARACTER_MAXIMUM_LENGTH', 8, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'CHARACTER_OCTET_LENGTH', 9, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'NUMERIC_PRECISION', 10, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'NUMERIC_SCALE', 11, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'CHARACTER_SET_NAME', 12, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'COLLATION_NAME', 13, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'DTD_IDENTIFIER', 14, NULL, 'NO', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARAMETERS', 'ROUTINE_TYPE', 15, '', 'NO', 'varchar', 9, 36, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(9)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'TABLE_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'PARTITION_NAME', 4, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'SUBPARTITION_NAME', 5, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'PARTITION_ORDINAL_POSITION', 6, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'SUBPARTITION_ORDINAL_POSITION', 7, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'PARTITION_METHOD', 8, NULL, 'YES', 'varchar', 12, 48, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(12)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'SUBPARTITION_METHOD', 9, NULL, 'YES', 'varchar', 12, 48, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(12)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'PARTITION_EXPRESSION', 10, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'SUBPARTITION_EXPRESSION', 11, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'PARTITION_DESCRIPTION', 12, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'TABLE_ROWS', 13, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'AVG_ROW_LENGTH', 14, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'DATA_LENGTH', 15, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'MAX_DATA_LENGTH', 16, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'INDEX_LENGTH', 17, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'DATA_FREE', 18, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'CREATE_TIME', 19, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'UPDATE_TIME', 20, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'CHECK_TIME', 21, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'CHECKSUM', 22, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'PARTITION_COMMENT', 23, '', 'NO', 'varchar', 80, 320, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'NODEGROUP', 24, '', 'NO', 'varchar', 12, 48, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(12)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PARTITIONS', 'TABLESPACE_NAME', 25, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_NAME', 1, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_VERSION', 2, '', 'NO', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_STATUS', 3, '', 'NO', 'varchar', 10, 40, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(10)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_TYPE', 4, '', 'NO', 'varchar', 80, 320, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_TYPE_VERSION', 5, '', 'NO', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_LIBRARY', 6, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_LIBRARY_VERSION', 7, NULL, 'YES', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_AUTHOR', 8, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_DESCRIPTION', 9, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PLUGINS', 'PLUGIN_LICENSE', 10, NULL, 'YES', 'varchar', 80, 320, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROCESSLIST', 'ID', 1, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROCESSLIST', 'USER', 2, '', 'NO', 'varchar', 16, 64, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(16)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROCESSLIST', 'HOST', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROCESSLIST', 'DB', 4, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROCESSLIST', 'COMMAND', 5, '', 'NO', 'varchar', 16, 64, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(16)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROCESSLIST', 'TIME', 6, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(7)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROCESSLIST', 'STATE', 7, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROCESSLIST', 'INFO', 8, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'QUERY_ID', 1, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'SEQ', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'STATE', 3, '', 'NO', 'varchar', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'DURATION', 4, '0.000000', 'NO', 'decimal', NULL, NULL, 9, 6, NULL, NULL, 'decimal(9,6)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'CPU_USER', 5, NULL, 'YES', 'decimal', NULL, NULL, 9, 6, NULL, NULL, 'decimal(9,6)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'CPU_SYSTEM', 6, NULL, 'YES', 'decimal', NULL, NULL, 9, 6, NULL, NULL, 'decimal(9,6)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'CONTEXT_VOLUNTARY', 7, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'CONTEXT_INVOLUNTARY', 8, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'BLOCK_OPS_IN', 9, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'BLOCK_OPS_OUT', 10, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'MESSAGES_SENT', 11, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'MESSAGES_RECEIVED', 12, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'PAGE_FAULTS_MAJOR', 13, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'PAGE_FAULTS_MINOR', 14, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'SWAPS', 15, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'SOURCE_FUNCTION', 16, NULL, 'YES', 'varchar', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'SOURCE_FILE', 17, NULL, 'YES', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'PROFILING', 'SOURCE_LINE', 18, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(20)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'CONSTRAINT_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'CONSTRAINT_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'CONSTRAINT_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'UNIQUE_CONSTRAINT_CATALOG', 4, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'UNIQUE_CONSTRAINT_SCHEMA', 5, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'UNIQUE_CONSTRAINT_NAME', 6, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'MATCH_OPTION', 7, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'UPDATE_RULE', 8, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'DELETE_RULE', 9, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'TABLE_NAME', 10, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'REFERENCED_TABLE_NAME', 11, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'SPECIFIC_NAME', 1, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'ROUTINE_CATALOG', 2, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'ROUTINE_SCHEMA', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'ROUTINE_NAME', 4, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'ROUTINE_TYPE', 5, '', 'NO', 'varchar', 9, 36, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(9)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'DATA_TYPE', 6, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'CHARACTER_MAXIMUM_LENGTH', 7, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'CHARACTER_OCTET_LENGTH', 8, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'NUMERIC_PRECISION', 9, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'NUMERIC_SCALE', 10, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'CHARACTER_SET_NAME', 11, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'COLLATION_NAME', 12, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'DTD_IDENTIFIER', 13, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'ROUTINE_BODY', 14, '', 'NO', 'varchar', 8, 32, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'ROUTINE_DEFINITION', 15, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'EXTERNAL_NAME', 16, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'EXTERNAL_LANGUAGE', 17, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'PARAMETER_STYLE', 18, '', 'NO', 'varchar', 8, 32, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'IS_DETERMINISTIC', 19, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'SQL_DATA_ACCESS', 20, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'SQL_PATH', 21, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'SECURITY_TYPE', 22, '', 'NO', 'varchar', 7, 28, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(7)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'CREATED', 23, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'LAST_ALTERED', 24, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'SQL_MODE', 25, '', 'NO', 'varchar', 8192, 32768, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8192)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'ROUTINE_COMMENT', 26, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'DEFINER', 27, '', 'NO', 'varchar', 77, 308, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(77)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'CHARACTER_SET_CLIENT', 28, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'COLLATION_CONNECTION', 29, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'ROUTINES', 'DATABASE_COLLATION', 30, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMATA', 'CATALOG_NAME', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMATA', 'SCHEMA_NAME', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMATA', 'DEFAULT_CHARACTER_SET_NAME', 3, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMATA', 'DEFAULT_COLLATION_NAME', 4, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMATA', 'SQL_PATH', 5, NULL, 'YES', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMA_PRIVILEGES', 'GRANTEE', 1, '', 'NO', 'varchar', 81, 324, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(81)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMA_PRIVILEGES', 'TABLE_CATALOG', 2, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMA_PRIVILEGES', 'TABLE_SCHEMA', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMA_PRIVILEGES', 'PRIVILEGE_TYPE', 4, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SCHEMA_PRIVILEGES', 'IS_GRANTABLE', 5, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SESSION_STATUS', 'VARIABLE_NAME', 1, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SESSION_STATUS', 'VARIABLE_VALUE', 2, NULL, 'YES', 'varchar', 1024, 4096, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SESSION_VARIABLES', 'VARIABLE_NAME', 1, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'SESSION_VARIABLES', 'VARIABLE_VALUE', 2, NULL, 'YES', 'varchar', 1024, 4096, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'TABLE_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'NON_UNIQUE', 4, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(1)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'INDEX_SCHEMA', 5, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'INDEX_NAME', 6, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'SEQ_IN_INDEX', 7, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(2)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'COLUMN_NAME', 8, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'COLLATION', 9, NULL, 'YES', 'varchar', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'CARDINALITY', 10, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'SUB_PART', 11, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'PACKED', 12, NULL, 'YES', 'varchar', 10, 40, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(10)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'NULLABLE', 13, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'INDEX_TYPE', 14, '', 'NO', 'varchar', 16, 64, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(16)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'COMMENT', 15, NULL, 'YES', 'varchar', 16, 64, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(16)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'STATISTICS', 'INDEX_COMMENT', 16, '', 'NO', 'varchar', 1024, 4096, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'TABLE_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'TABLE_TYPE', 4, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'ENGINE', 5, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'VERSION', 6, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'ROW_FORMAT', 7, NULL, 'YES', 'varchar', 10, 40, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(10)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'TABLE_ROWS', 8, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'AVG_ROW_LENGTH', 9, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'DATA_LENGTH', 10, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'MAX_DATA_LENGTH', 11, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'INDEX_LENGTH', 12, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'DATA_FREE', 13, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'AUTO_INCREMENT', 14, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'CREATE_TIME', 15, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'UPDATE_TIME', 16, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'CHECK_TIME', 17, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'TABLE_COLLATION', 18, NULL, 'YES', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'CHECKSUM', 19, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'CREATE_OPTIONS', 20, NULL, 'YES', 'varchar', 255, 1020, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(255)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'TABLE_COMMENT', 21, '', 'NO', 'varchar', 2048, 8192, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(2048)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLES', 'TABLESPACE_NAME', 22, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLESPACES', 'TABLESPACE_NAME', 1, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLESPACES', 'ENGINE', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLESPACES', 'TABLESPACE_TYPE', 3, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLESPACES', 'LOGFILE_GROUP_NAME', 4, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLESPACES', 'EXTENT_SIZE', 5, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLESPACES', 'AUTOEXTEND_SIZE', 6, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLESPACES', 'MAXIMUM_SIZE', 7, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLESPACES', 'NODEGROUP_ID', 8, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLESPACES', 'TABLESPACE_COMMENT', 9, NULL, 'YES', 'varchar', 2048, 8192, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(2048)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_CONSTRAINTS', 'CONSTRAINT_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_CONSTRAINTS', 'CONSTRAINT_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_CONSTRAINTS', 'CONSTRAINT_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_CONSTRAINTS', 'TABLE_SCHEMA', 4, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_CONSTRAINTS', 'TABLE_NAME', 5, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_CONSTRAINTS', 'CONSTRAINT_TYPE', 6, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_PRIVILEGES', 'GRANTEE', 1, '', 'NO', 'varchar', 81, 324, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(81)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_PRIVILEGES', 'TABLE_CATALOG', 2, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_PRIVILEGES', 'TABLE_SCHEMA', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_PRIVILEGES', 'TABLE_NAME', 4, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_PRIVILEGES', 'PRIVILEGE_TYPE', 5, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TABLE_PRIVILEGES', 'IS_GRANTABLE', 6, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'TRIGGER_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'TRIGGER_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'TRIGGER_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'EVENT_MANIPULATION', 4, '', 'NO', 'varchar', 6, 24, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(6)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'EVENT_OBJECT_CATALOG', 5, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'EVENT_OBJECT_SCHEMA', 6, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'EVENT_OBJECT_TABLE', 7, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'ACTION_ORDER', 8, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'ACTION_CONDITION', 9, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'ACTION_STATEMENT', 10, NULL, 'NO', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'ACTION_ORIENTATION', 11, '', 'NO', 'varchar', 9, 36, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(9)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'ACTION_TIMING', 12, '', 'NO', 'varchar', 6, 24, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(6)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'ACTION_REFERENCE_OLD_TABLE', 13, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'ACTION_REFERENCE_NEW_TABLE', 14, NULL, 'YES', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'ACTION_REFERENCE_OLD_ROW', 15, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'ACTION_REFERENCE_NEW_ROW', 16, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'CREATED', 17, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'SQL_MODE', 18, '', 'NO', 'varchar', 8192, 32768, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8192)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'DEFINER', 19, '', 'NO', 'varchar', 77, 308, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(77)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'CHARACTER_SET_CLIENT', 20, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'COLLATION_CONNECTION', 21, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'TRIGGERS', 'DATABASE_COLLATION', 22, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'USER_PRIVILEGES', 'GRANTEE', 1, '', 'NO', 'varchar', 81, 324, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(81)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'USER_PRIVILEGES', 'TABLE_CATALOG', 2, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'USER_PRIVILEGES', 'PRIVILEGE_TYPE', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'USER_PRIVILEGES', 'IS_GRANTABLE', 4, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'TABLE_CATALOG', 1, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'VIEW_DEFINITION', 4, NULL, 'NO', 'longtext', 4294967295, 4294967295, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'CHECK_OPTION', 5, '', 'NO', 'varchar', 8, 32, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'IS_UPDATABLE', 6, '', 'NO', 'varchar', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'DEFINER', 7, '', 'NO', 'varchar', 77, 308, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(77)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'SECURITY_TYPE', 8, '', 'NO', 'varchar', 7, 28, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(7)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'CHARACTER_SET_CLIENT', 9, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'VIEWS', 'COLLATION_CONNECTION', 10, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_SUMMARY', 'TOTAL_SPACE', 1, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_SUMMARY', 'FREE_SPACE', 2, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_SUMMARY', 'FREE_SEGMENTS', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_SUMMARY', 'BIG_HUNKS', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_SUMMARY', 'SMALL_HUNKS', 5, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_SUMMARY', 'UNIQUE_SIZES', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_DETAIL', 'FILE', 1, '', 'NO', 'varchar', 120, 480, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(120)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_DETAIL', 'LINE', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_DETAIL', 'OBJECTS_IN_USE', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_DETAIL', 'SPACE_IN_USE', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_DETAIL', 'OBJECTS_DELETED', 5, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_DETAIL', 'SPACE_DELETED', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TABLESPACE_IO', 'TABLESPACE', 1, '', 'NO', 'varchar', 120, 480, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(120)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TABLESPACE_IO', 'PAGE_SIZE', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TABLESPACE_IO', 'BUFFERS', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TABLESPACE_IO', 'PHYSICAL_READS', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TABLESPACE_IO', 'WRITES', 5, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TABLESPACE_IO', 'LOGICAL_READS', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TABLESPACE_IO', 'FAKES', 7, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_SUMMARY', 'TOTAL_SPACE', 1, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_SUMMARY', 'FREE_SPACE', 2, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_SUMMARY', 'FREE_SEGMENTS', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_SUMMARY', 'BIG_HUNKS', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_SUMMARY', 'SMALL_HUNKS', 5, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_SUMMARY', 'UNIQUE_SIZES', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_VERSION', 'Version', 1, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_VERSION', 'Date', 2, '', 'NO', 'varchar', 32, 128, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTION_SUMMARY', 'COMMITTED', 1, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTION_SUMMARY', 'ROLLED_BACK', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTION_SUMMARY', 'ACTIVE', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTION_SUMMARY', 'PENDING_COMMIT', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTION_SUMMARY', 'PENDING_COMPLETION', 5, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SERIAL_LOG_INFO', 'TRANSACTIONS', 1, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SERIAL_LOG_INFO', 'BLOCKS', 2, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(8)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SERIAL_LOG_INFO', 'WINDOWS', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SERIAL_LOG_INFO', 'BUFFERS', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYNCOBJECTS', 'CALLER', 1, '', 'NO', 'varchar', 120, 480, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(120)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYNCOBJECTS', 'SHARED', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYNCOBJECTS', 'EXCLUSIVE', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYNCOBJECTS', 'WAITS', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_SYNCOBJECTS', 'QUEUE_LENGTH', 5, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'STATE', 1, '', 'NO', 'varchar', 120, 480, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(120)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'THREAD_ID', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'ID', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'UPDATES', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'PENDING', 5, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'DEP', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'OLDEST', 7, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'RECORDS', 8, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'WAITING_FOR', 9, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'STATEMENT', 10, '', 'NO', 'varchar', 120, 480, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(120)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_DETAIL', 'FILE', 1, '', 'NO', 'varchar', 120, 480, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(120)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_DETAIL', 'LINE', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_DETAIL', 'OBJECTS_IN_USE', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_DETAIL', 'SPACE_IN_USE', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_DETAIL', 'OBJECTS_DELETED', 5, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_DETAIL', 'SPACE_DELETED', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select', '', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'backup_id', 1, NULL, 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', 'Surrogate key for (near) duplicate entries', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'process_id', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', 'The process id that operation ran as', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'binlog_pos', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', 'The recorded binlog position of backup/restore', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'binlog_file', 4, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', 'The recorded binlog filename at time of backup/restore', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'backup_state', 5, NULL, 'NO', 'enum', 14, 56, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'complete\',\'starting\',\'validity point\',\'running\',\'error\',\'cancel\')', '', '', 'select,insert,update,references', 'Status of current operation', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'operation', 6, NULL, 'NO', 'enum', 7, 28, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'backup\',\'restore\')', '', '', 'select,insert,update,references', 'Type of operation', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'error_num', 7, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', 'The error from this run 0 == none', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'num_objects', 8, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', 'The number of objects in the backup', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'total_bytes', 9, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', 'The size of the backup repository in bytes', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'validity_point_time', 10, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', 'The time of the validity point.', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'start_time', 11, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', 'The date/time of start of operation', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'stop_time', 12, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', 'The date/time of end of operation', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'host_or_server_name', 13, '', 'NO', 'char', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(30)', '', '', 'select,insert,update,references', 'The server name where operation ran', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'username', 14, '', 'NO', 'char', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(30)', '', '', 'select,insert,update,references', 'The user name who ran the operation', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'backup_file', 15, '', 'NO', 'char', 100, 400, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(100)', '', '', 'select,insert,update,references', 'The name of the file', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'backup_file_path', 16, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select,insert,update,references', 'The full path to the backup image file', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'user_comment', 17, '', 'NO', 'varchar', 200, 800, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(200)', '', '', 'select,insert,update,references', 'The comment from user entered at command line', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'command', 18, '', 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select,insert,update,references', 'The command used to issue operation', 'Default', 'Default'),
	('def', 'mysql', 'backup_history', 'drivers', 19, '', 'NO', 'varchar', 100, 400, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(100)', '', '', 'select,insert,update,references', 'The name of the storage engines used in the operation', 'Default', 'Default'),
	('def', 'mysql', 'backup_progress', 'backup_id', 1, NULL, 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', 'Key for backup_history table entries', 'Default', 'Default'),
	('def', 'mysql', 'backup_progress', 'object', 2, '', 'NO', 'char', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(30)', '', '', 'select,insert,update,references', 'The object being operated on', 'Default', 'Default'),
	('def', 'mysql', 'backup_progress', 'start_time', 3, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', 'The date/time of start of operation', 'Default', 'Default'),
	('def', 'mysql', 'backup_progress', 'stop_time', 4, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', 'The date/time of end of operation', 'Default', 'Default'),
	('def', 'mysql', 'backup_progress', 'total_bytes', 5, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20)', '', '', 'select,insert,update,references', 'The size of the object in bytes', 'Default', 'Default'),
	('def', 'mysql', 'backup_progress', 'progress', 6, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', 'The number of bytes processed', 'Default', 'Default'),
	('def', 'mysql', 'backup_progress', 'error_num', 7, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', 'The error from this run 0 == none', 'Default', 'Default'),
	('def', 'mysql', 'backup_progress', 'notes', 8, '', 'NO', 'char', 100, 400, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(100)', '', '', 'select,insert,update,references', 'Commentary from the backup engine', 'Default', 'Default'),
	('def', 'mysql', 'columns_priv', 'Host', 1, '', 'NO', 'char', 60, 240, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'columns_priv', 'Db', 2, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'columns_priv', 'User', 3, '', 'NO', 'char', 16, 64, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'columns_priv', 'Table_name', 4, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'columns_priv', 'Column_name', 5, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'columns_priv', 'Timestamp', 6, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'columns_priv', 'Column_priv', 7, '', 'NO', 'set', 31, 124, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(\'Select\',\'Insert\',\'Update\',\'References\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Host', 1, '', 'NO', 'char', 60, 240, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Db', 2, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'User', 3, '', 'NO', 'char', 16, 64, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Select_priv', 4, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Insert_priv', 5, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Update_priv', 6, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Delete_priv', 7, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Create_priv', 8, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Drop_priv', 9, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Grant_priv', 10, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'References_priv', 11, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Index_priv', 12, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Alter_priv', 13, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Create_tmp_table_priv', 14, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Lock_tables_priv', 15, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Create_view_priv', 16, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Show_view_priv', 17, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Create_routine_priv', 18, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Alter_routine_priv', 19, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Execute_priv', 20, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Event_priv', 21, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'db', 'Trigger_priv', 22, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'db', 1, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'name', 2, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'body', 3, NULL, 'NO', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'definer', 4, '', 'NO', 'char', 77, 308, NULL, NULL, 'utf8', 'utf8_bin', 'char(77)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'execute_at', 5, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'interval_value', 6, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'interval_field', 7, NULL, 'YES', 'enum', 18, 72, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'YEAR\',\'QUARTER\',\'MONTH\',\'DAY\',\'HOUR\',\'MINUTE\',\'WEEK\',\'SECOND\',\'MICROSECOND\',\'YEAR_MONTH\',\'DAY_HOUR\',\'DAY_MINUTE\',\'DAY_SECOND\',\'HOUR_MINUTE\',\'HOUR_SECOND\',\'MINUTE_SECOND\',\'DAY_MICROSECOND\',\'HOUR_MICROSECOND\',\'MINUTE_MICROSECOND\',\'SECOND_MICROSECOND\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'created', 8, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'modified', 9, '0000-00-00 00:00:00', 'NO', 'timestamp', NULL, NULL, NULL, NULL, NULL, NULL, 'timestamp', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'last_executed', 10, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'starts', 11, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'ends', 12, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'status', 13, 'ENABLED', 'NO', 'enum', 18, 72, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'ENABLED\',\'DISABLED\',\'SLAVESIDE_DISABLED\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'on_completion', 14, 'DROP', 'NO', 'enum', 8, 32, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'DROP\',\'PRESERVE\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'sql_mode', 15, '', 'NO', 'set', 478, 1912, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(\'REAL_AS_FLOAT\',\'PIPES_AS_CONCAT\',\'ANSI_QUOTES\',\'IGNORE_SPACE\',\'NOT_USED\',\'ONLY_FULL_GROUP_BY\',\'NO_UNSIGNED_SUBTRACTION\',\'NO_DIR_IN_CREATE\',\'POSTGRESQL\',\'ORACLE\',\'MSSQL\',\'DB2\',\'MAXDB\',\'NO_KEY_OPTIONS\',\'NO_TABLE_OPTIONS\',\'NO_FIELD_OPTIONS\',\'MYSQL323\',\'MYSQL40\',\'ANSI\',\'NO_AUTO_VALUE_ON_ZERO\',\'NO_BACKSLASH_ESCAPES\',\'STRICT_TRANS_TABLES\',\'STRICT_ALL_TABLES\',\'NO_ZERO_IN_DATE\',\'NO_ZERO_DATE\',\'INVALID_DATES\',\'ERROR_FOR_DIVISION_BY_ZERO\',\'TRADITIONAL\',\'NO_AUTO_CREATE_USER\',\'HIGH_NOT_PRECEDENCE\',\'NO_ENGINE_SUBSTITUTION\',\'PAD_CHAR_TO_FULL_LENGTH\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'comment', 16, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'originator', 17, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'time_zone', 18, 'SYSTEM', 'NO', 'char', 64, 64, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'character_set_client', 19, NULL, 'YES', 'char', 32, 128, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'collation_connection', 20, NULL, 'YES', 'char', 32, 128, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'db_collation', 21, NULL, 'YES', 'char', 32, 128, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'event', 'body_utf8', 22, NULL, 'YES', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'func', 'name', 1, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'func', 'ret', 2, '0', 'NO', 'tinyint', NULL, NULL, 3, 0, NULL, NULL, 'tinyint(1)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'func', 'dl', 3, '', 'NO', 'char', 128, 512, NULL, NULL, 'utf8', 'utf8_bin', 'char(128)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'func', 'type', 4, NULL, 'NO', 'enum', 9, 36, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'function\',\'aggregate\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'general_log', 'event_time', 1, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'general_log', 'user_host', 2, NULL, 'NO', 'mediumtext', 16777215, 16777215, NULL, NULL, 'utf8', 'utf8_general_ci', 'mediumtext', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'general_log', 'thread_id', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'general_log', 'server_id', 4, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'general_log', 'command_type', 5, NULL, 'NO', 'varchar', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'general_log', 'argument', 6, NULL, 'NO', 'mediumtext', 16777215, 16777215, NULL, NULL, 'utf8', 'utf8_general_ci', 'mediumtext', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_category', 'help_category_id', 1, NULL, 'NO', 'smallint', NULL, NULL, 5, 0, NULL, NULL, 'smallint(5) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_category', 'name', 2, NULL, 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'UNI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_category', 'parent_category_id', 3, NULL, 'YES', 'smallint', NULL, NULL, 5, 0, NULL, NULL, 'smallint(5) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_category', 'url', 4, NULL, 'NO', 'char', 128, 512, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(128)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_keyword', 'help_keyword_id', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_keyword', 'name', 2, NULL, 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'UNI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_relation', 'help_topic_id', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_relation', 'help_keyword_id', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_topic', 'help_topic_id', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_topic', 'name', 2, NULL, 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'UNI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_topic', 'help_category_id', 3, NULL, 'NO', 'smallint', NULL, NULL, 5, 0, NULL, NULL, 'smallint(5) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_topic', 'description', 4, NULL, 'NO', 'text', 65535, 65535, NULL, NULL, 'utf8', 'utf8_general_ci', 'text', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_topic', 'example', 5, NULL, 'NO', 'text', 65535, 65535, NULL, NULL, 'utf8', 'utf8_general_ci', 'text', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'help_topic', 'url', 6, NULL, 'NO', 'char', 128, 512, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(128)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Host', 1, '', 'NO', 'char', 60, 240, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Db', 2, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Select_priv', 3, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Insert_priv', 4, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Update_priv', 5, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Delete_priv', 6, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Create_priv', 7, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Drop_priv', 8, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Grant_priv', 9, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'References_priv', 10, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Index_priv', 11, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Alter_priv', 12, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Create_tmp_table_priv', 13, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Lock_tables_priv', 14, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Create_view_priv', 15, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Show_view_priv', 16, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Create_routine_priv', 17, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Alter_routine_priv', 18, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Execute_priv', 19, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'host', 'Trigger_priv', 20, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'Position', 1, NULL, 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'File', 2, NULL, 'NO', 'varchar', 255, 255, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(255)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'epoch', 3, NULL, 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'inserts', 4, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'updates', 5, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'deletes', 6, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'schemaops', 7, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'orig_server_id', 8, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'orig_epoch', 9, NULL, 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'ndb_binlog_index', 'gci', 10, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'plugin', 'name', 1, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'plugin', 'dl', 2, '', 'NO', 'char', 128, 512, NULL, NULL, 'utf8', 'utf8_bin', 'char(128)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'db', 1, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'name', 2, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'type', 3, NULL, 'NO', 'enum', 9, 36, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'FUNCTION\',\'PROCEDURE\')', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'specific_name', 4, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'language', 5, 'SQL', 'NO', 'enum', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'SQL\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'sql_data_access', 6, 'CONTAINS_SQL', 'NO', 'enum', 17, 68, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'CONTAINS_SQL\',\'NO_SQL\',\'READS_SQL_DATA\',\'MODIFIES_SQL_DATA\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'is_deterministic', 7, 'NO', 'NO', 'enum', 3, 12, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'YES\',\'NO\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'security_type', 8, 'DEFINER', 'NO', 'enum', 7, 28, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'INVOKER\',\'DEFINER\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'param_list', 9, NULL, 'NO', 'blob', 65535, 65535, NULL, NULL, NULL, NULL, 'blob', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'returns', 10, NULL, 'NO', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'body', 11, NULL, 'NO', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'definer', 12, '', 'NO', 'char', 77, 308, NULL, NULL, 'utf8', 'utf8_bin', 'char(77)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'created', 13, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'modified', 14, '0000-00-00 00:00:00', 'NO', 'timestamp', NULL, NULL, NULL, NULL, NULL, NULL, 'timestamp', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'sql_mode', 15, '', 'NO', 'set', 478, 1912, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(\'REAL_AS_FLOAT\',\'PIPES_AS_CONCAT\',\'ANSI_QUOTES\',\'IGNORE_SPACE\',\'NOT_USED\',\'ONLY_FULL_GROUP_BY\',\'NO_UNSIGNED_SUBTRACTION\',\'NO_DIR_IN_CREATE\',\'POSTGRESQL\',\'ORACLE\',\'MSSQL\',\'DB2\',\'MAXDB\',\'NO_KEY_OPTIONS\',\'NO_TABLE_OPTIONS\',\'NO_FIELD_OPTIONS\',\'MYSQL323\',\'MYSQL40\',\'ANSI\',\'NO_AUTO_VALUE_ON_ZERO\',\'NO_BACKSLASH_ESCAPES\',\'STRICT_TRANS_TABLES\',\'STRICT_ALL_TABLES\',\'NO_ZERO_IN_DATE\',\'NO_ZERO_DATE\',\'INVALID_DATES\',\'ERROR_FOR_DIVISION_BY_ZERO\',\'TRADITIONAL\',\'NO_AUTO_CREATE_USER\',\'HIGH_NOT_PRECEDENCE\',\'NO_ENGINE_SUBSTITUTION\',\'PAD_CHAR_TO_FULL_LENGTH\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'comment', 16, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'character_set_client', 17, NULL, 'YES', 'char', 32, 128, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'collation_connection', 18, NULL, 'YES', 'char', 32, 128, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'db_collation', 19, NULL, 'YES', 'char', 32, 128, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'proc', 'body_utf8', 20, NULL, 'YES', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'procs_priv', 'Host', 1, '', 'NO', 'char', 60, 240, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'procs_priv', 'Db', 2, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'procs_priv', 'User', 3, '', 'NO', 'char', 16, 64, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'procs_priv', 'Routine_name', 4, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'procs_priv', 'Routine_type', 5, NULL, 'NO', 'enum', 9, 36, NULL, NULL, 'utf8', 'utf8_bin', 'enum(\'FUNCTION\',\'PROCEDURE\')', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'procs_priv', 'Grantor', 6, '', 'NO', 'char', 77, 308, NULL, NULL, 'utf8', 'utf8_bin', 'char(77)', 'MUL', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'procs_priv', 'Proc_priv', 7, '', 'NO', 'set', 27, 108, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(\'Execute\',\'Alter Routine\',\'Grant\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'procs_priv', 'Timestamp', 8, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'servers', 'Server_name', 1, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'servers', 'Host', 2, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'servers', 'Db', 3, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'servers', 'Username', 4, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'servers', 'Password', 5, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'servers', 'Port', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(4)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'servers', 'Socket', 7, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'servers', 'Wrapper', 8, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'servers', 'Owner', 9, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'start_time', 1, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'user_host', 2, NULL, 'NO', 'mediumtext', 16777215, 16777215, NULL, NULL, 'utf8', 'utf8_general_ci', 'mediumtext', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'query_time', 3, NULL, 'NO', 'time', NULL, NULL, NULL, NULL, NULL, NULL, 'time', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'lock_time', 4, NULL, 'NO', 'time', NULL, NULL, NULL, NULL, NULL, NULL, 'time', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'rows_sent', 5, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'rows_examined', 6, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'db', 7, NULL, 'NO', 'varchar', 512, 2048, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'last_insert_id', 8, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'insert_id', 9, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'server_id', 10, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'slow_log', 'sql_text', 11, NULL, 'NO', 'mediumtext', 16777215, 16777215, NULL, NULL, 'utf8', 'utf8_general_ci', 'mediumtext', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'tables_priv', 'Host', 1, '', 'NO', 'char', 60, 240, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'tables_priv', 'Db', 2, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'tables_priv', 'User', 3, '', 'NO', 'char', 16, 64, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'tables_priv', 'Table_name', 4, '', 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'tables_priv', 'Grantor', 5, '', 'NO', 'char', 77, 308, NULL, NULL, 'utf8', 'utf8_bin', 'char(77)', 'MUL', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'tables_priv', 'Timestamp', 6, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'tables_priv', 'Table_priv', 7, '', 'NO', 'set', 98, 392, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(\'Select\',\'Insert\',\'Update\',\'Delete\',\'Create\',\'Drop\',\'Grant\',\'References\',\'Index\',\'Alter\',\'Create View\',\'Show view\',\'Trigger\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'tables_priv', 'Column_priv', 8, '', 'NO', 'set', 31, 124, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(\'Select\',\'Insert\',\'Update\',\'References\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone', 'Time_zone_id', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone', 'Use_leap_seconds', 2, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'Y\',\'N\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_leap_second', 'Transition_time', 1, NULL, 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_leap_second', 'Correction', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_name', 'Name', 1, NULL, 'NO', 'char', 64, 256, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_name', 'Time_zone_id', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_transition', 'Time_zone_id', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_transition', 'Transition_time', 2, NULL, 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, 'bigint(20)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_transition', 'Transition_type_id', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_transition_type', 'Time_zone_id', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_transition_type', 'Transition_type_id', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_transition_type', 'Offset', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_transition_type', 'Is_DST', 4, '0', 'NO', 'tinyint', NULL, NULL, 3, 0, NULL, NULL, 'tinyint(3) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'time_zone_transition_type', 'Abbreviation', 5, '', 'NO', 'char', 8, 32, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(8)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Host', 1, '', 'NO', 'char', 60, 240, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'User', 2, '', 'NO', 'char', 16, 64, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Password', 3, '', 'NO', 'char', 41, 41, NULL, NULL, 'latin1', 'latin1_bin', 'char(41)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Select_priv', 4, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Insert_priv', 5, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Update_priv', 6, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Delete_priv', 7, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Create_priv', 8, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Drop_priv', 9, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Reload_priv', 10, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Shutdown_priv', 11, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Process_priv', 12, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'File_priv', 13, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Grant_priv', 14, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'References_priv', 15, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Index_priv', 16, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Alter_priv', 17, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Show_db_priv', 18, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Super_priv', 19, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Create_tmp_table_priv', 20, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Lock_tables_priv', 21, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Execute_priv', 22, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Repl_slave_priv', 23, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Repl_client_priv', 24, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Create_view_priv', 25, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Show_view_priv', 26, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Create_routine_priv', 27, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Alter_routine_priv', 28, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Create_user_priv', 29, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Event_priv', 30, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Trigger_priv', 31, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'Create_tablespace_priv', 32, 'N', 'NO', 'enum', 1, 4, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'N\',\'Y\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'ssl_type', 33, '', 'NO', 'enum', 9, 36, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(\'\',\'ANY\',\'X509\',\'SPECIFIED\')', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'ssl_cipher', 34, NULL, 'NO', 'blob', 65535, 65535, NULL, NULL, NULL, NULL, 'blob', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'x509_issuer', 35, NULL, 'NO', 'blob', 65535, 65535, NULL, NULL, NULL, NULL, 'blob', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'x509_subject', 36, NULL, 'NO', 'blob', 65535, 65535, NULL, NULL, NULL, NULL, 'blob', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'max_questions', 37, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'max_updates', 38, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'max_connections', 39, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'mysql', 'user', 'max_user_connections', 40, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11) unsigned', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'etapas', 'Id_Etapas', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'etapas', 'Nom_Etapas', 2, NULL, 'NO', 'char', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'evaluacion', 'Id_Eval', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'evaluacion', 'Nom_Eval', 2, NULL, 'NO', 'char', 15, 60, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(15)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'issue', 'Id_Issue', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'issue', 'Tipo_Issue', 2, NULL, 'NO', 'char', 15, 60, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(15)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'lote', 'Id_Lote', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'lote', 'Num_Lote', 2, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'lote', 'Ubicacion', 3, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'lote', 'S_Lote', 4, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_etapa', 'Id_PEtapa', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_etapa', 'Num_Serie', 2, '0', 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_etapa', 'Etapa', 3, '0', 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_etapa', 'F_Etapa', 4, NULL, 'NO', 'date', NULL, NULL, NULL, NULL, NULL, NULL, 'date', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_etapa', 'Issue_E', 5, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_etapa', 'S_Etapa', 6, NULL, 'NO', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_eval', 'Id_ProdEval', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_eval', 'Id_Prod', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_eval', 'Id_Res', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_eval', 'Id_Issue', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_eval', 'F_EvalProd', 5, NULL, 'NO', 'date', NULL, NULL, NULL, NULL, NULL, NULL, 'date', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_eval', 'S_ProdEval', 6, NULL, 'NO', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'Id_ProdLote', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'Id_Prod', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'Id_Etapa', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'S_Etapa', 4, '0', 'NO', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'F_Etapa', 5, NULL, 'NO', 'date', NULL, NULL, NULL, NULL, NULL, NULL, 'date', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'Id_ProdEval', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'S_EvalProd', 7, '0', 'NO', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'F_EvalProd', 8, NULL, 'NO', 'date', NULL, NULL, NULL, NULL, NULL, NULL, 'date', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'Id_Issue', 9, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(6)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'prod_lote', 'S_Lote', 10, '0', 'NO', 'varchar', 20, 80, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'producto', 'Id_Prod', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'producto', 'Num_Serie', 2, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'producto', 'MAC_Address', 3, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'producto', 'Num_Lote', 4, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'producto', 'Disponibilidad', 5, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'Id_Reposicion', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'SerieS', 2, '0', 'YES', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'MACs', 3, '0', 'YES', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'LoteS', 4, '0', 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'SerieE', 5, '0', 'YES', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'MACe', 6, '0', 'YES', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'LoteE', 7, '0', 'YES', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'Canal', 8, '0', 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'Cliente', 9, '0', 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'CiudadO', 10, '0', 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'F_Salida', 11, '0', 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'Motivo', 12, '0', 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'Prestamo', 13, '0', 'YES', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'reposiciones', 'Autorizo', 14, '0', 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'result', 'Id_Result', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'result', 'Nom_Result', 2, '0', 'NO', 'char', 15, 60, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(15)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'usuario', 'Id', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'usuario', 'Nombre', 2, '0', 'NO', 'varchar', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'usuario', 'Apellido', 3, '0', 'NO', 'varchar', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'usuario', 'User', 4, '0', 'NO', 'varchar', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'usuario', 'Password', 5, '0', 'NO', 'varchar', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'usuario', 'Area', 6, '0', 'NO', 'varchar', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'usuario', 'Puesto', 7, '0', 'NO', 'varchar', 30, 120, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'produccion', 'usuario', 'Rol', 8, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'lote', 'Id_Lote', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'lote', 'Num_Lote', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'lote', 'Ubicacion', 3, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'lote', 'S_Lote', 4, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'producto', 'Id_Prod', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'producto', 'Num_Serie', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'producto', 'MAC_Address', 3, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'producto', 'Id_Lote', 4, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'usuario', 'User_Id', 1, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PRI', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'usuario', 'Contraseña', 2, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default'),
	('def', 'prueba', 'usuario', 'Area', 3, NULL, 'NO', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', '', '', 'select,insert,update,references', '', 'Default', 'Default');
/*!40000 ALTER TABLE `COLUMNS` ENABLE KEYS */;

-- Dumping structure for table information_schema.COLUMN_PRIVILEGES
CREATE TEMPORARY TABLE IF NOT EXISTS `COLUMN_PRIVILEGES` (
  `GRANTEE` varchar(81) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',
  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.COLUMN_PRIVILEGES: -1 rows
/*!40000 ALTER TABLE `COLUMN_PRIVILEGES` DISABLE KEYS */;
/*!40000 ALTER TABLE `COLUMN_PRIVILEGES` ENABLE KEYS */;

-- Dumping structure for table information_schema.ENGINES
CREATE TEMPORARY TABLE IF NOT EXISTS `ENGINES` (
  `ENGINE` varchar(64) NOT NULL DEFAULT '',
  `SUPPORT` varchar(8) NOT NULL DEFAULT '',
  `COMMENT` varchar(80) NOT NULL DEFAULT '',
  `TRANSACTIONS` varchar(3) DEFAULT NULL,
  `XA` varchar(3) DEFAULT NULL,
  `SAVEPOINTS` varchar(3) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.ENGINES: -1 rows
/*!40000 ALTER TABLE `ENGINES` DISABLE KEYS */;
INSERT INTO `ENGINES` (`ENGINE`, `SUPPORT`, `COMMENT`, `TRANSACTIONS`, `XA`, `SAVEPOINTS`) VALUES
	('MEMORY', 'YES', 'Hash based, stored in memory, useful for temporary tables', 'NO', 'NO', 'NO'),
	('CSV', 'YES', 'CSV storage engine', 'NO', 'NO', 'NO'),
	('MyISAM', 'YES', 'Default engine as of MySQL 3.23 with great performance', 'NO', 'NO', 'NO'),
	('MARIA', 'YES', 'Crash-safe tables with MyISAM heritage', 'YES', 'NO', 'NO'),
	('MRG_MYISAM', 'YES', 'Collection of identical MyISAM tables', 'NO', 'NO', 'NO'),
	('BLACKHOLE', 'YES', '/dev/null storage engine (anything you write to it disappears)', 'NO', 'NO', 'NO'),
	('ARCHIVE', 'YES', 'Archive storage engine', 'NO', 'NO', 'NO'),
	('InnoDB', 'DEFAULT', 'Supports transactions, row-level locking, and foreign keys', 'YES', 'YES', 'YES'),
	('FEDERATED', 'NO', 'Federated MySQL storage engine', NULL, NULL, NULL),
	('Falcon', 'YES', 'Falcon storage engine', 'YES', 'NO', 'YES');
/*!40000 ALTER TABLE `ENGINES` ENABLE KEYS */;

-- Dumping structure for table information_schema.EVENTS
CREATE TEMPORARY TABLE IF NOT EXISTS `EVENTS` (
  `EVENT_CATALOG` varchar(64) NOT NULL DEFAULT '',
  `EVENT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `EVENT_NAME` varchar(64) NOT NULL DEFAULT '',
  `DEFINER` varchar(77) NOT NULL DEFAULT '',
  `TIME_ZONE` varchar(64) NOT NULL DEFAULT '',
  `EVENT_BODY` varchar(8) NOT NULL DEFAULT '',
  `EVENT_DEFINITION` longtext NOT NULL,
  `EVENT_TYPE` varchar(9) NOT NULL DEFAULT '',
  `EXECUTE_AT` datetime DEFAULT NULL,
  `INTERVAL_VALUE` varchar(256) DEFAULT NULL,
  `INTERVAL_FIELD` varchar(18) DEFAULT NULL,
  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',
  `STARTS` datetime DEFAULT NULL,
  `ENDS` datetime DEFAULT NULL,
  `STATUS` varchar(18) NOT NULL DEFAULT '',
  `ON_COMPLETION` varchar(12) NOT NULL DEFAULT '',
  `CREATED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `LAST_ALTERED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `LAST_EXECUTED` datetime DEFAULT NULL,
  `EVENT_COMMENT` varchar(64) NOT NULL DEFAULT '',
  `ORIGINATOR` bigint(10) NOT NULL DEFAULT '0',
  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',
  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',
  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''
) ENGINE=MARIA DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- Dumping data for table information_schema.EVENTS: -1 rows
/*!40000 ALTER TABLE `EVENTS` DISABLE KEYS */;
/*!40000 ALTER TABLE `EVENTS` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_RECORD_CACHE_DETAIL
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_RECORD_CACHE_DETAIL` (
  `FILE` varchar(120) NOT NULL DEFAULT '',
  `LINE` int(4) NOT NULL DEFAULT '0',
  `OBJECTS_IN_USE` int(4) NOT NULL DEFAULT '0',
  `SPACE_IN_USE` int(4) NOT NULL DEFAULT '0',
  `OBJECTS_DELETED` int(4) NOT NULL DEFAULT '0',
  `SPACE_DELETED` int(4) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_RECORD_CACHE_DETAIL: -1 rows
/*!40000 ALTER TABLE `FALCON_RECORD_CACHE_DETAIL` DISABLE KEYS */;
INSERT INTO `FALCON_RECORD_CACHE_DETAIL` (`FILE`, `LINE`, `OBJECTS_IN_USE`, `SPACE_IN_USE`, `OBJECTS_DELETED`, `SPACE_DELETED`) VALUES
	('*unknown*', 0, 468, 34704, 0, 0);
/*!40000 ALTER TABLE `FALCON_RECORD_CACHE_DETAIL` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_RECORD_CACHE_SUMMARY
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_RECORD_CACHE_SUMMARY` (
  `TOTAL_SPACE` bigint(4) NOT NULL DEFAULT '0',
  `FREE_SPACE` bigint(4) NOT NULL DEFAULT '0',
  `FREE_SEGMENTS` int(4) NOT NULL DEFAULT '0',
  `BIG_HUNKS` int(4) NOT NULL DEFAULT '0',
  `SMALL_HUNKS` int(4) NOT NULL DEFAULT '0',
  `UNIQUE_SIZES` int(4) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_RECORD_CACHE_SUMMARY: -1 rows
/*!40000 ALTER TABLE `FALCON_RECORD_CACHE_SUMMARY` DISABLE KEYS */;
INSERT INTO `FALCON_RECORD_CACHE_SUMMARY` (`TOTAL_SPACE`, `FREE_SPACE`, `FREE_SEGMENTS`, `BIG_HUNKS`, `SMALL_HUNKS`, `UNIQUE_SIZES`) VALUES
	(2097156, 2058680, 1, 1, 0, 1);
/*!40000 ALTER TABLE `FALCON_RECORD_CACHE_SUMMARY` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_SERIAL_LOG_INFO
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_SERIAL_LOG_INFO` (
  `TRANSACTIONS` int(4) NOT NULL DEFAULT '0',
  `BLOCKS` bigint(8) NOT NULL DEFAULT '0',
  `WINDOWS` int(4) NOT NULL DEFAULT '0',
  `BUFFERS` int(4) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_SERIAL_LOG_INFO: -1 rows
/*!40000 ALTER TABLE `FALCON_SERIAL_LOG_INFO` DISABLE KEYS */;
INSERT INTO `FALCON_SERIAL_LOG_INFO` (`TRANSACTIONS`, `BLOCKS`, `WINDOWS`, `BUFFERS`) VALUES
	(0, 0, 1, 1);
/*!40000 ALTER TABLE `FALCON_SERIAL_LOG_INFO` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_SYNCOBJECTS
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_SYNCOBJECTS` (
  `CALLER` varchar(120) NOT NULL DEFAULT '',
  `SHARED` int(4) NOT NULL DEFAULT '0',
  `EXCLUSIVE` int(4) NOT NULL DEFAULT '0',
  `WAITS` int(4) NOT NULL DEFAULT '0',
  `QUEUE_LENGTH` int(4) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_SYNCOBJECTS: -1 rows
/*!40000 ALTER TABLE `FALCON_SYNCOBJECTS` DISABLE KEYS */;
INSERT INTO `FALCON_SYNCOBJECTS` (`CALLER`, `SHARED`, `EXCLUSIVE`, `WAITS`, `QUEUE_LENGTH`) VALUES
	('Connection::getDatabase', 0, 1, 0, 0),
	('CollationManager::find', 0, 0, 0, 0),
	('StorageHandler::initialize', 0, 1, 0, 0),
	('StorageHandler::getSerialLogInfo', 0, 1, 0, 0),
	('StorageDatabase::load', 0, 1, 0, 0),
	('Threads::start', 0, 13, 0, 0),
	('Database::pruneRecords(tables)', 0, 27, 0, 0),
	('Database::scavenge', 0, 92, 0, 0),
	('Database::compileStatement(3)', 0, 16, 0, 0),
	('ResultSet::clearConnection', 0, 0, 0, 0),
	('Statement::clearConnection', 0, 0, 0, 0),
	('Database::scavengeRecords(Scavenge)', 0, 170, 0, 0),
	('Database::commitSystemTransaction', 0, 32, 0, 0),
	('Threads::enter', 0, 13, 0, 0),
	('Cache::fetchPage', 0, 871, 0, 0),
	('Cache::ioThread(2)', 0, 8, 1, 0),
	('Cache::flush(2)', 0, 2, 0, 0),
	('Cache::ioThread(1)', 0, 0, 0, 0),
	('Cache::writePage(1)', 0, 1, 0, 0),
	('SymbolManager::getSymbol(1)', 0, 94, 0, 0),
	('Role::getPrivilege', 0, 7, 0, 0),
	('Connection::deleteStatement', 0, 172, 0, 0),
	('Connection::deleteResultSet', 0, 170, 0, 0),
	('TableSpaceManager::reportStatistics', 0, 2, 0, 0),
	('SerialLog::getSerialLogInfo(1)', 0, 16, 0, 0),
	('Gopher::gopherThread(1)', 0, 0, 0, 0),
	('SerialLog::getSerialLogInfo(1)', 0, 7, 0, 0),
	('SymbolManager::getString', 0, 13, 0, 0),
	('Table::retireRecords', 0, 14, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('Table::retireRecords', 0, 16, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('Table::retireRecords', 0, 12, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('Table::retireRecords', 0, 10, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('Table::retireRecords', 0, 10, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('Table::retireRecords', 0, 14, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('Table::reformat', 0, 8, 0, 0),
	('Scheduler::schedule', 0, 1, 0, 0),
	('Scheduler::schedule', 0, 524, 0, 0),
	('Database::reportStatistics', 0, 1, 0, 0),
	('Transaction::purgeTransactions', 0, 85, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Transaction::commitNoUpdates(3)', 0, 4, 0, 0),
	('Transaction::releaseSavepoints', 0, 172, 0, 0),
	('Transaction::commitNoUpdates(3)', 0, 3, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Transaction::initialize(1)', 0, 1, 0, 0),
	('Section::getSectionPage', 0, 1, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('Section::getSectionPage', 0, 1, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('Table::findField', 0, 0, 0, 0),
	('Section::getSectionPage', 0, 1, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('Section::getSectionPage', 0, 1, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('Table::findField', 0, 0, 0, 0),
	('Table::findField', 0, 0, 0, 0),
	('Table::retireRecords', 0, 3, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('Table::findField', 0, 0, 0, 0),
	('Table::fetchNext', 0, 0, 0, 0),
	('Table::findField', 0, 0, 0, 0),
	('Table::findField', 0, 0, 0, 0),
	('Table::retireRecords', 0, 3, 0, 0),
	('RecordScavenge::inventoryRecord', 0, 0, 0, 0),
	('Section::getSectionPage', 0, 1, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('Section::getSectionPage', 0, 1, 0, 0),
	('RecordLeaf::pruneRecords(syncObject)', 0, 0, 0, 0),
	('Role::getPrivilege', 0, 1, 0, 0),
	('Table::findField', 0, 2, 0, 0),
	('Connection::deleteStatement', 0, 4, 0, 0),
	('Connection::deleteResultSet', 0, 2, 0, 0);
/*!40000 ALTER TABLE `FALCON_SYNCOBJECTS` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_SYSTEM_MEMORY_DETAIL
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_SYSTEM_MEMORY_DETAIL` (
  `FILE` varchar(120) NOT NULL DEFAULT '',
  `LINE` int(4) NOT NULL DEFAULT '0',
  `OBJECTS_IN_USE` int(4) NOT NULL DEFAULT '0',
  `SPACE_IN_USE` int(4) NOT NULL DEFAULT '0',
  `OBJECTS_DELETED` int(4) NOT NULL DEFAULT '0',
  `SPACE_DELETED` int(4) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_SYSTEM_MEMORY_DETAIL: -1 rows
/*!40000 ALTER TABLE `FALCON_SYSTEM_MEMORY_DETAIL` DISABLE KEYS */;
INSERT INTO `FALCON_SYSTEM_MEMORY_DETAIL` (`FILE`, `LINE`, `OBJECTS_IN_USE`, `SPACE_IN_USE`, `OBJECTS_DELETED`, `SPACE_DELETED`) VALUES
	('*unknown*', 0, 36, 302944736, 1122, 117824);
/*!40000 ALTER TABLE `FALCON_SYSTEM_MEMORY_DETAIL` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_SYSTEM_MEMORY_SUMMARY
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_SYSTEM_MEMORY_SUMMARY` (
  `TOTAL_SPACE` bigint(4) NOT NULL DEFAULT '0',
  `FREE_SPACE` bigint(4) NOT NULL DEFAULT '0',
  `FREE_SEGMENTS` int(4) NOT NULL DEFAULT '0',
  `BIG_HUNKS` int(4) NOT NULL DEFAULT '0',
  `SMALL_HUNKS` int(4) NOT NULL DEFAULT '0',
  `UNIQUE_SIZES` int(4) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_SYSTEM_MEMORY_SUMMARY: -1 rows
/*!40000 ALTER TABLE `FALCON_SYSTEM_MEMORY_SUMMARY` DISABLE KEYS */;
INSERT INTO `FALCON_SYSTEM_MEMORY_SUMMARY` (`TOTAL_SPACE`, `FREE_SPACE`, `FREE_SEGMENTS`, `BIG_HUNKS`, `SMALL_HUNKS`, `UNIQUE_SIZES`) VALUES
	(306824396, 1781584, 3, 6, 1, 3);
/*!40000 ALTER TABLE `FALCON_SYSTEM_MEMORY_SUMMARY` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_TABLESPACE_IO
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_TABLESPACE_IO` (
  `TABLESPACE` varchar(120) NOT NULL DEFAULT '',
  `PAGE_SIZE` int(4) NOT NULL DEFAULT '0',
  `BUFFERS` int(4) NOT NULL DEFAULT '0',
  `PHYSICAL_READS` int(4) NOT NULL DEFAULT '0',
  `WRITES` int(4) NOT NULL DEFAULT '0',
  `LOGICAL_READS` int(4) NOT NULL DEFAULT '0',
  `FAKES` int(4) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_TABLESPACE_IO: -1 rows
/*!40000 ALTER TABLE `FALCON_TABLESPACE_IO` DISABLE KEYS */;
INSERT INTO `FALCON_TABLESPACE_IO` (`TABLESPACE`, `PAGE_SIZE`, `BUFFERS`, `PHYSICAL_READS`, `WRITES`, `LOGICAL_READS`, `FAKES`) VALUES
	('FALCON_MASTER', 4096, 64000, 43, 0, 828, 0),
	('FALCON_TEMPORARY', 4096, 64000, 0, 0, 0, 0),
	('FALCON_USER', 4096, 64000, 0, 0, 0, 0);
/*!40000 ALTER TABLE `FALCON_TABLESPACE_IO` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_TRANSACTIONS
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_TRANSACTIONS` (
  `STATE` varchar(120) NOT NULL DEFAULT '',
  `THREAD_ID` int(4) NOT NULL DEFAULT '0',
  `ID` int(4) NOT NULL DEFAULT '0',
  `UPDATES` int(4) NOT NULL DEFAULT '0',
  `PENDING` int(4) NOT NULL DEFAULT '0',
  `DEP` int(4) NOT NULL DEFAULT '0',
  `OLDEST` int(4) NOT NULL DEFAULT '0',
  `RECORDS` int(4) NOT NULL DEFAULT '0',
  `WAITING_FOR` int(4) NOT NULL DEFAULT '0',
  `STATEMENT` varchar(120) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_TRANSACTIONS: -1 rows
/*!40000 ALTER TABLE `FALCON_TRANSACTIONS` DISABLE KEYS */;
/*!40000 ALTER TABLE `FALCON_TRANSACTIONS` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_TRANSACTION_SUMMARY
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_TRANSACTION_SUMMARY` (
  `COMMITTED` int(4) NOT NULL DEFAULT '0',
  `ROLLED_BACK` int(4) NOT NULL DEFAULT '0',
  `ACTIVE` int(4) NOT NULL DEFAULT '0',
  `PENDING_COMMIT` int(4) NOT NULL DEFAULT '0',
  `PENDING_COMPLETION` int(4) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_TRANSACTION_SUMMARY: -1 rows
/*!40000 ALTER TABLE `FALCON_TRANSACTION_SUMMARY` DISABLE KEYS */;
INSERT INTO `FALCON_TRANSACTION_SUMMARY` (`COMMITTED`, `ROLLED_BACK`, `ACTIVE`, `PENDING_COMMIT`, `PENDING_COMPLETION`) VALUES
	(3, 0, 0, 0, 0);
/*!40000 ALTER TABLE `FALCON_TRANSACTION_SUMMARY` ENABLE KEYS */;

-- Dumping structure for table information_schema.FALCON_VERSION
CREATE TEMPORARY TABLE IF NOT EXISTS `FALCON_VERSION` (
  `Version` varchar(32) NOT NULL DEFAULT '',
  `Date` varchar(32) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FALCON_VERSION: -1 rows
/*!40000 ALTER TABLE `FALCON_VERSION` DISABLE KEYS */;
INSERT INTO `FALCON_VERSION` (`Version`, `Date`) VALUES
	('T1.4-7', '10 February, 2009');
/*!40000 ALTER TABLE `FALCON_VERSION` ENABLE KEYS */;

-- Dumping structure for table information_schema.FILES
CREATE TEMPORARY TABLE IF NOT EXISTS `FILES` (
  `FILE_ID` bigint(4) NOT NULL DEFAULT '0',
  `FILE_NAME` varchar(64) DEFAULT NULL,
  `FILE_TYPE` varchar(20) NOT NULL DEFAULT '',
  `TABLESPACE_NAME` varchar(64) DEFAULT NULL,
  `TABLE_CATALOG` varchar(64) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) DEFAULT NULL,
  `TABLE_NAME` varchar(64) DEFAULT NULL,
  `LOGFILE_GROUP_NAME` varchar(64) DEFAULT NULL,
  `LOGFILE_GROUP_NUMBER` bigint(4) DEFAULT NULL,
  `ENGINE` varchar(64) NOT NULL DEFAULT '',
  `FULLTEXT_KEYS` varchar(64) DEFAULT NULL,
  `DELETED_ROWS` bigint(4) DEFAULT NULL,
  `UPDATE_COUNT` bigint(4) DEFAULT NULL,
  `FREE_EXTENTS` bigint(4) DEFAULT NULL,
  `TOTAL_EXTENTS` bigint(4) DEFAULT NULL,
  `EXTENT_SIZE` bigint(4) NOT NULL DEFAULT '0',
  `INITIAL_SIZE` bigint(21) unsigned DEFAULT NULL,
  `MAXIMUM_SIZE` bigint(21) unsigned DEFAULT NULL,
  `AUTOEXTEND_SIZE` bigint(21) unsigned DEFAULT NULL,
  `CREATION_TIME` datetime DEFAULT NULL,
  `LAST_UPDATE_TIME` datetime DEFAULT NULL,
  `LAST_ACCESS_TIME` datetime DEFAULT NULL,
  `RECOVER_TIME` bigint(4) DEFAULT NULL,
  `TRANSACTION_COUNTER` bigint(4) DEFAULT NULL,
  `VERSION` bigint(21) unsigned DEFAULT NULL,
  `ROW_FORMAT` varchar(10) DEFAULT NULL,
  `TABLE_ROWS` bigint(21) unsigned DEFAULT NULL,
  `AVG_ROW_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `INDEX_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `DATA_FREE` bigint(21) unsigned DEFAULT NULL,
  `CREATE_TIME` datetime DEFAULT NULL,
  `UPDATE_TIME` datetime DEFAULT NULL,
  `CHECK_TIME` datetime DEFAULT NULL,
  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,
  `STATUS` varchar(20) NOT NULL DEFAULT '',
  `EXTRA` varchar(255) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.FILES: -1 rows
/*!40000 ALTER TABLE `FILES` DISABLE KEYS */;
INSERT INTO `FILES` (`FILE_ID`, `FILE_NAME`, `FILE_TYPE`, `TABLESPACE_NAME`, `TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `LOGFILE_GROUP_NAME`, `LOGFILE_GROUP_NUMBER`, `ENGINE`, `FULLTEXT_KEYS`, `DELETED_ROWS`, `UPDATE_COUNT`, `FREE_EXTENTS`, `TOTAL_EXTENTS`, `EXTENT_SIZE`, `INITIAL_SIZE`, `MAXIMUM_SIZE`, `AUTOEXTEND_SIZE`, `CREATION_TIME`, `LAST_UPDATE_TIME`, `LAST_ACCESS_TIME`, `RECOVER_TIME`, `TRANSACTION_COUNTER`, `VERSION`, `ROW_FORMAT`, `TABLE_ROWS`, `AVG_ROW_LENGTH`, `DATA_LENGTH`, `MAX_DATA_LENGTH`, `INDEX_LENGTH`, `DATA_FREE`, `CREATE_TIME`, `UPDATE_TIME`, `CHECK_TIME`, `CHECKSUM`, `STATUS`, `EXTRA`) VALUES
	(0, 'falcon_user.fts', 'SYSTEM DATAFILE', 'FALCON_USER', 'def', NULL, NULL, NULL, NULL, 'Falcon', NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'NORMAL', NULL),
	(0, 'falcon_temporary.fts', 'SYSTEM DATAFILE', 'FALCON_TEMPORARY', 'def', NULL, NULL, NULL, NULL, 'Falcon', NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'NORMAL', NULL);
/*!40000 ALTER TABLE `FILES` ENABLE KEYS */;

-- Dumping structure for table information_schema.GLOBAL_STATUS
CREATE TEMPORARY TABLE IF NOT EXISTS `GLOBAL_STATUS` (
  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.GLOBAL_STATUS: -1 rows
/*!40000 ALTER TABLE `GLOBAL_STATUS` DISABLE KEYS */;
INSERT INTO `GLOBAL_STATUS` (`VARIABLE_NAME`, `VARIABLE_VALUE`) VALUES
	('ABORTED_CLIENTS', '0'),
	('ABORTED_CONNECTS', '1'),
	('BINLOG_CACHE_DISK_USE', '0'),
	('BINLOG_CACHE_USE', '0'),
	('BYTES_RECEIVED', '9031'),
	('BYTES_SENT', '271761'),
	('COM_ADMIN_COMMANDS', '143'),
	('COM_ASSIGN_TO_KEYCACHE', '0'),
	('COM_ALTER_DB', '0'),
	('COM_ALTER_DB_UPGRADE', '0'),
	('COM_ALTER_EVENT', '0'),
	('COM_ALTER_FUNCTION', '0'),
	('COM_ALTER_PROCEDURE', '0'),
	('COM_ALTER_SERVER', '0'),
	('COM_ALTER_TABLE', '0'),
	('COM_ALTER_TABLESPACE', '0'),
	('COM_ANALYZE', '0'),
	('COM_BEGIN', '0'),
	('COM_BACKUP', '0'),
	('COM_BINLOG', '0'),
	('COM_CALL_PROCEDURE', '0'),
	('COM_CHANGE_DB', '1'),
	('COM_CHANGE_MASTER', '0'),
	('COM_CHECK', '0'),
	('COM_CHECKSUM', '0'),
	('COM_COMMIT', '0'),
	('COM_CREATE_DB', '0'),
	('COM_CREATE_EVENT', '0'),
	('COM_CREATE_FUNCTION', '0'),
	('COM_CREATE_INDEX', '0'),
	('COM_CREATE_PROCEDURE', '0'),
	('COM_CREATE_SERVER', '0'),
	('COM_CREATE_TABLE', '0'),
	('COM_CREATE_TRIGGER', '0'),
	('COM_CREATE_UDF', '0'),
	('COM_CREATE_USER', '0'),
	('COM_CREATE_VIEW', '0'),
	('COM_DEALLOC_SQL', '0'),
	('COM_DELETE', '0'),
	('COM_DELETE_MULTI', '0'),
	('COM_DO', '0'),
	('COM_DROP_DB', '0'),
	('COM_DROP_EVENT', '0'),
	('COM_DROP_FUNCTION', '0'),
	('COM_DROP_INDEX', '0'),
	('COM_DROP_PROCEDURE', '0'),
	('COM_DROP_SERVER', '0'),
	('COM_DROP_TABLE', '0'),
	('COM_DROP_TRIGGER', '0'),
	('COM_DROP_USER', '0'),
	('COM_DROP_VIEW', '0'),
	('COM_EMPTY_QUERY', '0'),
	('COM_EXECUTE_SQL', '0'),
	('COM_FLUSH', '0'),
	('COM_GRANT', '0'),
	('COM_HA_CLOSE', '0'),
	('COM_HA_OPEN', '0'),
	('COM_HA_READ', '0'),
	('COM_HELP', '0'),
	('COM_INSERT', '0'),
	('COM_INSERT_SELECT', '0'),
	('COM_INSTALL_PLUGIN', '0'),
	('COM_KILL', '0'),
	('COM_LOAD', '0'),
	('COM_LOCK_TABLES', '0'),
	('COM_OPTIMIZE', '0'),
	('COM_PRELOAD_KEYS', '0'),
	('COM_PREPARE_SQL', '0'),
	('COM_PURGE', '0'),
	('COM_PURGE_BEFORE_DATE', '0'),
	('COM_PURGE_BUP_LOG', '0'),
	('COM_RELEASE_SAVEPOINT', '0'),
	('COM_RENAME_TABLE', '0'),
	('COM_RENAME_USER', '0'),
	('COM_REPAIR', '0'),
	('COM_REPLACE', '0'),
	('COM_REPLACE_SELECT', '0'),
	('COM_RESET', '0'),
	('COM_RESTORE', '0'),
	('COM_REVOKE', '0'),
	('COM_REVOKE_ALL', '0'),
	('COM_ROLLBACK', '0'),
	('COM_ROLLBACK_TO_SAVEPOINT', '0'),
	('COM_SAVEPOINT', '0'),
	('COM_SELECT', '50'),
	('COM_SET_OPTION', '3'),
	('COM_SHOW_AUTHORS', '0'),
	('COM_SHOW_BINLOG_EVENTS', '0'),
	('COM_SHOW_BINLOGS', '0'),
	('COM_SHOW_CHARSETS', '1'),
	('COM_SHOW_COLLATIONS', '1'),
	('COM_SHOW_CONTRIBUTORS', '0'),
	('COM_SHOW_CREATE_DB', '19'),
	('COM_SHOW_CREATE_EVENT', '0'),
	('COM_SHOW_CREATE_FUNC', '0'),
	('COM_SHOW_CREATE_PROC', '0'),
	('COM_SHOW_CREATE_TABLE', '20'),
	('COM_SHOW_CREATE_TRIGGER', '0'),
	('COM_SHOW_DATABASES', '2'),
	('COM_SHOW_ENGINE_LOGS', '0'),
	('COM_SHOW_ENGINE_MUTEX', '0'),
	('COM_SHOW_ENGINE_STATUS', '0'),
	('COM_SHOW_EVENTS', '1'),
	('COM_SHOW_ERRORS', '0'),
	('COM_SHOW_FIELDS', '0'),
	('COM_SHOW_FUNCTION_STATUS', '5'),
	('COM_SHOW_GRANTS', '0'),
	('COM_SHOW_KEYS', '0'),
	('COM_SHOW_MASTER_STATUS', '0'),
	('COM_SHOW_NEW_MASTER', '0'),
	('COM_SHOW_OPEN_TABLES', '0'),
	('COM_SHOW_PLUGINS', '0'),
	('COM_SHOW_PRIVILEGES', '0'),
	('COM_SHOW_PROCEDURE_STATUS', '5'),
	('COM_SHOW_PROCESSLIST', '0'),
	('COM_SHOW_PROFILE', '0'),
	('COM_SHOW_PROFILES', '0'),
	('COM_SHOW_SLAVE_HOSTS', '0'),
	('COM_SHOW_SLAVE_STATUS', '0'),
	('COM_SHOW_STATUS', '4'),
	('COM_SHOW_STORAGE_ENGINES', '1'),
	('COM_SHOW_TABLE_STATUS', '5'),
	('COM_SHOW_TABLES', '0'),
	('COM_SHOW_TRIGGERS', '5'),
	('COM_SHOW_VARIABLES', '4'),
	('COM_SHOW_WARNINGS', '0'),
	('COM_SLAVE_START', '0'),
	('COM_SLAVE_STOP', '0'),
	('COM_STMT_CLOSE', '0'),
	('COM_STMT_EXECUTE', '0'),
	('COM_STMT_FETCH', '0'),
	('COM_STMT_PREPARE', '0'),
	('COM_STMT_REPREPARE', '0'),
	('COM_STMT_RESET', '0'),
	('COM_STMT_SEND_LONG_DATA', '0'),
	('COM_TRUNCATE', '0'),
	('COM_UNINSTALL_PLUGIN', '0'),
	('COM_UNLOCK_TABLES', '0'),
	('COM_UPDATE', '0'),
	('COM_UPDATE_MULTI', '0'),
	('COM_XA_COMMIT', '0'),
	('COM_XA_END', '0'),
	('COM_XA_PREPARE', '0'),
	('COM_XA_RECOVER', '0'),
	('COM_XA_ROLLBACK', '0'),
	('COM_XA_START', '0'),
	('COMPRESSION', 'OFF'),
	('CONNECTIONS', '4'),
	('CREATED_TMP_DISK_TABLES', '53'),
	('CREATED_TMP_FILES', '5'),
	('CREATED_TMP_TABLES', '202'),
	('DELAYED_ERRORS', '0'),
	('DELAYED_INSERT_THREADS', '0'),
	('DELAYED_WRITES', '0'),
	('FLUSH_COMMANDS', '1'),
	('HANDLER_COMMIT', '0'),
	('HANDLER_DELETE', '0'),
	('HANDLER_DISCOVER', '0'),
	('HANDLER_MRR_INIT', '0'),
	('HANDLER_PREPARE', '0'),
	('HANDLER_READ_FIRST', '13'),
	('HANDLER_READ_KEY', '14'),
	('HANDLER_READ_NEXT', '90'),
	('HANDLER_READ_PREV', '0'),
	('HANDLER_READ_RND', '0'),
	('HANDLER_READ_RND_NEXT', '3913'),
	('HANDLER_ROLLBACK', '0'),
	('HANDLER_SAVEPOINT', '0'),
	('HANDLER_SAVEPOINT_ROLLBACK', '0'),
	('HANDLER_UPDATE', '0'),
	('HANDLER_WRITE', '3836'),
	('INNODB_BUFFER_POOL_PAGES_DATA', '35'),
	('INNODB_BUFFER_POOL_PAGES_DIRTY', '0'),
	('INNODB_BUFFER_POOL_PAGES_FLUSHED', '0'),
	('INNODB_BUFFER_POOL_PAGES_FREE', '477'),
	('INNODB_BUFFER_POOL_PAGES_MISC', '0'),
	('INNODB_BUFFER_POOL_PAGES_TOTAL', '512'),
	('INNODB_BUFFER_POOL_READ_AHEAD_RND', '2'),
	('INNODB_BUFFER_POOL_READ_AHEAD_SEQ', '0'),
	('INNODB_BUFFER_POOL_READ_REQUESTS', '1015'),
	('INNODB_BUFFER_POOL_READS', '19'),
	('INNODB_BUFFER_POOL_WAIT_FREE', '0'),
	('INNODB_BUFFER_POOL_WRITE_REQUESTS', '0'),
	('INNODB_DATA_FSYNCS', '3'),
	('INNODB_DATA_PENDING_FSYNCS', '0'),
	('INNODB_DATA_PENDING_READS', '0'),
	('INNODB_DATA_PENDING_WRITES', '0'),
	('INNODB_DATA_READ', '2756608'),
	('INNODB_DATA_READS', '45'),
	('INNODB_DATA_WRITES', '3'),
	('INNODB_DATA_WRITTEN', '1536'),
	('INNODB_DBLWR_PAGES_WRITTEN', '0'),
	('INNODB_DBLWR_WRITES', '0'),
	('INNODB_LOG_WAITS', '0'),
	('INNODB_LOG_WRITE_REQUESTS', '0'),
	('INNODB_LOG_WRITES', '1'),
	('INNODB_OS_LOG_FSYNCS', '3'),
	('INNODB_OS_LOG_PENDING_FSYNCS', '0'),
	('INNODB_OS_LOG_PENDING_WRITES', '0'),
	('INNODB_OS_LOG_WRITTEN', '512'),
	('INNODB_PAGE_SIZE', '16384'),
	('INNODB_PAGES_CREATED', '0'),
	('INNODB_PAGES_READ', '35'),
	('INNODB_PAGES_WRITTEN', '0'),
	('INNODB_ROW_LOCK_CURRENT_WAITS', '0'),
	('INNODB_ROW_LOCK_TIME', '0'),
	('INNODB_ROW_LOCK_TIME_AVG', '0'),
	('INNODB_ROW_LOCK_TIME_MAX', '0'),
	('INNODB_ROW_LOCK_WAITS', '0'),
	('INNODB_ROWS_DELETED', '0'),
	('INNODB_ROWS_INSERTED', '0'),
	('INNODB_ROWS_READ', '0'),
	('INNODB_ROWS_UPDATED', '0'),
	('KEY_BLOCKS_NOT_FLUSHED', '0'),
	('KEY_BLOCKS_UNUSED', '7170'),
	('KEY_BLOCKS_USED', '3'),
	('KEY_READ_REQUESTS', '60'),
	('KEY_READS', '6'),
	('KEY_WRITE_REQUESTS', '0'),
	('KEY_WRITES', '0'),
	('LAST_QUERY_COST', '0.000000'),
	('MARIA_PAGECACHE_BLOCKS_NOT_FLUSHED', '0'),
	('MARIA_PAGECACHE_BLOCKS_UNUSED', '997'),
	('MARIA_PAGECACHE_BLOCKS_USED', '17'),
	('MARIA_PAGECACHE_READ_REQUESTS', '799'),
	('MARIA_PAGECACHE_READS', '23'),
	('MARIA_PAGECACHE_WRITE_REQUESTS', '29'),
	('MARIA_PAGECACHE_WRITES', '0'),
	('MAX_USED_CONNECTIONS', '1'),
	('NOT_FLUSHED_DELAYED_ROWS', '0'),
	('OPEN_FILES', '54'),
	('OPEN_STREAMS', '0'),
	('OPEN_TABLE_DEFINITIONS', '39'),
	('OPEN_TABLES', '28'),
	('OPENED_FILES', '457'),
	('OPENED_TABLE_DEFINITIONS', '39'),
	('OPENED_TABLES', '55'),
	('PREPARED_STMT_COUNT', '0'),
	('QCACHE_FREE_BLOCKS', '0'),
	('QCACHE_FREE_MEMORY', '0'),
	('QCACHE_HITS', '0'),
	('QCACHE_INSERTS', '0'),
	('QCACHE_LOWMEM_PRUNES', '0'),
	('QCACHE_NOT_CACHED', '0'),
	('QCACHE_QUERIES_IN_CACHE', '0'),
	('QCACHE_TOTAL_BLOCKS', '0'),
	('QUERIES', '129'),
	('QUESTIONS', '129'),
	('RPL_STATUS', 'NULL'),
	('SELECT_FULL_JOIN', '0'),
	('SELECT_FULL_RANGE_JOIN', '0'),
	('SELECT_RANGE', '0'),
	('SELECT_RANGE_CHECK', '0'),
	('SELECT_SCAN', '62'),
	('SLAVE_HEARTBEAT_PERIOD', '0.000'),
	('SLAVE_OPEN_TEMP_TABLES', '0'),
	('SLAVE_RECEIVED_HEARTBEATS', '0'),
	('SLAVE_RETRIED_TRANSACTIONS', '0'),
	('SLAVE_RUNNING', 'OFF'),
	('SLOW_LAUNCH_THREADS', '0'),
	('SLOW_QUERIES', '47'),
	('SORT_MERGE_PASSES', '0'),
	('SORT_RANGE', '0'),
	('SORT_ROWS', '0'),
	('SORT_SCAN', '0'),
	('SSL_ACCEPT_RENEGOTIATES', '0'),
	('SSL_ACCEPTS', '0'),
	('SSL_CALLBACK_CACHE_HITS', '0'),
	('SSL_CIPHER', ''),
	('SSL_CIPHER_LIST', ''),
	('SSL_CLIENT_CONNECTS', '0'),
	('SSL_CONNECT_RENEGOTIATES', '0'),
	('SSL_CTX_VERIFY_DEPTH', '0'),
	('SSL_CTX_VERIFY_MODE', '0'),
	('SSL_DEFAULT_TIMEOUT', '0'),
	('SSL_FINISHED_ACCEPTS', '0'),
	('SSL_FINISHED_CONNECTS', '0'),
	('SSL_SESSION_CACHE_HITS', '0'),
	('SSL_SESSION_CACHE_MISSES', '0'),
	('SSL_SESSION_CACHE_MODE', 'NONE'),
	('SSL_SESSION_CACHE_OVERFLOWS', '0'),
	('SSL_SESSION_CACHE_SIZE', '0'),
	('SSL_SESSION_CACHE_TIMEOUTS', '0'),
	('SSL_SESSIONS_REUSED', '0'),
	('SSL_USED_SESSION_CACHE_ENTRIES', '0'),
	('SSL_VERIFY_DEPTH', '0'),
	('SSL_VERIFY_MODE', '0'),
	('SSL_VERSION', ''),
	('TABLE_LOCKS_IMMEDIATE', '34'),
	('TABLE_LOCKS_WAITED', '0'),
	('TC_LOG_MAX_PAGES_USED', '0'),
	('TC_LOG_PAGE_SIZE', '0'),
	('TC_LOG_PAGE_WAITS', '0'),
	('THREADS_CACHED', '0'),
	('THREADS_CONNECTED', '1'),
	('THREADS_CREATED', '1'),
	('THREADS_RUNNING', '1'),
	('UPTIME', '2529'),
	('UPTIME_SINCE_FLUSH_STATUS', '2529');
/*!40000 ALTER TABLE `GLOBAL_STATUS` ENABLE KEYS */;

-- Dumping structure for table information_schema.GLOBAL_VARIABLES
CREATE TEMPORARY TABLE IF NOT EXISTS `GLOBAL_VARIABLES` (
  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.GLOBAL_VARIABLES: -1 rows
/*!40000 ALTER TABLE `GLOBAL_VARIABLES` DISABLE KEYS */;
INSERT INTO `GLOBAL_VARIABLES` (`VARIABLE_NAME`, `VARIABLE_VALUE`) VALUES
	('MAX_PREPARED_STMT_COUNT', '16382'),
	('CHARACTER_SET_RESULTS', 'utf8'),
	('HAVE_CRYPT', 'NO'),
	('AUTO_INCREMENT_OFFSET', '1'),
	('MYISAM_REPAIR_THREADS', '1'),
	('AUTOMATIC_SP_PRIVILEGES', 'ON'),
	('FALCON_DEBUG_SERVER', 'OFF'),
	('BACK_LOG', '50'),
	('SYNC_RELAY_LOG', '0'),
	('PID_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\CPU0007.pid'),
	('TIMED_MUTEXES', 'OFF'),
	('SLOW_QUERY_LOG_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\CPU0007-slow.log'),
	('DELAYED_INSERT_TIMEOUT', '300'),
	('NET_WRITE_TIMEOUT', '60'),
	('QUERY_CACHE_WLOCK_INVALIDATE', 'OFF'),
	('AUTO_INCREMENT_INCREMENT', '1'),
	('OLD_PASSWORDS', 'OFF'),
	('CHARACTER_SETS_DIR', 'C:\\Program Files (x86)\\MySQL\\MySQL Server 6.0\\share\\charsets\\'),
	('FALCON_DEBUG_TRACE', '0'),
	('BINLOG_CACHE_SIZE', '32768'),
	('UPDATABLE_VIEWS_WITH_LIMIT', 'YES'),
	('LANGUAGE', 'C:\\Program Files (x86)\\MySQL\\MySQL Server 6.0\\share\\english\\'),
	('SLOW_LAUNCH_TIME', '2'),
	('CHARACTER_SET_SYSTEM', 'utf8'),
	('CHARACTER_SET_CLIENT', 'utf8'),
	('LOG_BACKUP_OUTPUT', 'TABLE'),
	('RELAY_LOG_INDEX', ''),
	('CHARACTER_SET_CONNECTION', 'utf8'),
	('SQL_QUOTE_SHOW_CREATE', 'ON'),
	('COMPLETION_TYPE', '0'),
	('SQL_LOG_UPDATE', 'ON'),
	('MAX_LENGTH_FOR_SORT_DATA', '1024'),
	('WAIT_TIMEOUT', '28800'),
	('EVENT_SCHEDULER', 'OFF'),
	('THREAD_HANDLING', 'one-thread-per-connection'),
	('COLLATION_DATABASE', 'utf8_general_ci'),
	('SSL_CAPATH', ''),
	('COLLATION_SERVER', 'utf8_general_ci'),
	('REPORT_HOST', ''),
	('DELAYED_INSERT_LIMIT', '100'),
	('MYISAM_SORT_BUFFER_SIZE', '188743680'),
	('DELAYED_QUEUE_SIZE', '1000'),
	('OPTIMIZER_PRUNE_LEVEL', '1'),
	('LARGE_PAGES', 'OFF'),
	('LARGE_FILES_SUPPORT', 'ON'),
	('FLUSH', 'OFF'),
	('FALCON_RECORD_SCAVENGE_FLOOR', '80'),
	('FT_QUERY_EXPANSION_LIMIT', '20'),
	('NET_BUFFER_LENGTH', '16384'),
	('INTERACTIVE_TIMEOUT', '28800'),
	('SKIP_SHOW_DATABASE', 'OFF'),
	('OPTIMIZER_USE_MRR', 'force'),
	('GROUP_CONCAT_MAX_LEN', '1024'),
	('CONCURRENT_INSERT', '1'),
	('RANGE_ALLOC_BLOCK_SIZE', '4096'),
	('KEY_CACHE_AGE_THRESHOLD', '300'),
	('SKIP_NETWORKING', 'OFF'),
	('MAX_CONNECT_ERRORS', '10'),
	('INNODB_LOG_FILE_SIZE', '10485760'),
	('DEADLOCK_TIMEOUT_SHORT', '10000'),
	('TRANSACTION_PREALLOC_SIZE', '4096'),
	('JOIN_BUFFER_SIZE', '131072'),
	('VERSION_COMPILE_OS', 'Win32'),
	('CONNECT_TIMEOUT', '10'),
	('FALCON_SERIAL_LOG_FILE_SIZE', '10485760'),
	('SQL_LOW_PRIORITY_UPDATES', 'OFF'),
	('LOW_PRIORITY_UPDATES', 'OFF'),
	('INIT_FILE', ''),
	('REPORT_PASSWORD', ''),
	('LARGE_PAGE_SIZE', '0'),
	('MAX_INSERT_DELAYED_THREADS', '20'),
	('INIT_SLAVE', ''),
	('MARIA_PAGE_CHECKSUM', 'ON'),
	('MAX_BINLOG_SIZE', '1073741824'),
	('TRANSACTION_ALLOC_BLOCK_SIZE', '8192'),
	('MAX_ERROR_COUNT', '64'),
	('FALCON_SERIAL_LOG_BUFFERS', '20'),
	('DEADLOCK_TIMEOUT_LONG', '50000000'),
	('INNODB_DOUBLEWRITE', 'ON'),
	('LOG_WARNINGS', '1'),
	('LOCAL_INFILE', 'ON'),
	('PSEUDO_THREAD_ID', '0'),
	('BACKUPDIR', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\'),
	('FT_MAX_WORD_LEN', '84'),
	('LOG_OUTPUT', 'NONE'),
	('LOWER_CASE_FILE_SYSTEM', 'ON'),
	('LOWER_CASE_TABLE_NAMES', '1'),
	('LOG_SLOW_QUERIES', 'OFF'),
	('FALCON_USE_DEFERRED_INDEX_HASH', 'OFF'),
	('FT_MIN_WORD_LEN', '4'),
	('HAVE_SYMLINK', 'YES'),
	('SHARED_MEMORY', 'OFF'),
	('TIME_ZONE', 'SYSTEM'),
	('DEADLOCK_SEARCH_DEPTH_SHORT', '4'),
	('INNODB_TABLE_LOCKS', 'ON'),
	('FT_BOOLEAN_SYNTAX', '+ -><()~*:""&|'),
	('MARIA_FORCE_START_AFTER_RECOVERY_FAILURES', '0'),
	('LOG_QUERIES_NOT_USING_INDEXES', 'OFF'),
	('MYISAM_DATA_POINTER_SIZE', '6'),
	('INNODB_ADDITIONAL_MEM_POOL_SIZE', '2097152'),
	('INNODB_THREAD_SLEEP_DELAY', '10000'),
	('FT_STOPWORD_FILE', '(built-in)'),
	('MARIA_RECOVER', 'OFF'),
	('DELAY_KEY_WRITE', 'ON'),
	('SLAVE_TRANSACTION_RETRIES', '10'),
	('SERVER_ID', '0'),
	('MARIA_REPAIR_THREADS', '1'),
	('SSL_CA', ''),
	('FALCON_IO_THREADS', '2'),
	('BULK_INSERT_BUFFER_SIZE', '8388608'),
	('SSL_CERT', ''),
	('SQL_MAX_JOIN_SIZE', '18446744073709551615'),
	('MARIA_STATS_METHOD', 'nulls_unequal'),
	('MYISAM_USE_MMAP', 'OFF'),
	('FALCON_DIRECT_IO', '1'),
	('QUERY_PREALLOC_SIZE', '8192'),
	('INNODB_ROLLBACK_ON_TIMEOUT', 'OFF'),
	('MIN_EXAMINED_ROW_LIMIT', '0'),
	('FALCON_USE_SECTORCACHE', 'OFF'),
	('CHARACTER_SET_FILESYSTEM', 'binary'),
	('FALCON_USE_SUPERNODES', 'ON'),
	('CHARACTER_SET_SERVER', 'utf8'),
	('READ_RND_BUFFER_SIZE', '262144'),
	('MAX_BINLOG_CACHE_SIZE', '4294963200'),
	('SECURE_AUTH', 'OFF'),
	('READ_BUFFER_SIZE', '65536'),
	('BIG_TABLES', 'OFF'),
	('MAX_CONNECTIONS', '100'),
	('SQL_SELECT_LIMIT', '18446744073709551615'),
	('HAVE_COMPRESS', 'YES'),
	('DATE_FORMAT', '%Y-%m-%d'),
	('FLUSH_TIME', '1800'),
	('FALCON_GOPHER_THREADS', '5'),
	('JOIN_CACHE_LEVEL', '1'),
	('RAND_SEED1', ''),
	('HAVE_PARTITIONING', 'YES'),
	('INNODB_DATA_FILE_PATH', 'ibdata1:10M:autoextend'),
	('MAX_SEEKS_FOR_KEY', '4294967295'),
	('QUERY_CACHE_LIMIT', '1048576'),
	('NET_RETRY_COUNT', '10'),
	('PROFILING', 'OFF'),
	('SLOW_QUERY_LOG', 'OFF'),
	('FALCON_SERIAL_LOG_PRIORITY', '1'),
	('QUERY_CACHE_SIZE', '0'),
	('KEY_CACHE_DIVISION_LIMIT', '100'),
	('LONG_QUERY_TIME', '0.000000'),
	('GENERAL_LOG_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\CPU0007.log'),
	('THREAD_STACK', '199680'),
	('FALCON_LARGE_BLOB_THRESHOLD', '160000'),
	('OPEN_FILES_LIMIT', '2670'),
	('FALCON_RECORD_SCAVENGE_THRESHOLD', '90'),
	('MAX_HEAP_TABLE_SIZE', '16777216'),
	('FALCON_LOCK_WAIT_TIMEOUT', '50'),
	('TABLE_LOCK_WAIT_TIMEOUT', '50'),
	('EXPIRE_LOGS_DAYS', '0'),
	('QUERY_ALLOC_BLOCK_SIZE', '8192'),
	('ARCHIVE_AIO', 'OFF'),
	('QUERY_CACHE_TYPE', 'ON'),
	('FOREIGN_KEY_CHECKS', 'ON'),
	('LOG_ERROR', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\CPU0007.err'),
	('RELAY_LOG_INFO_FILE', 'relay-log.info'),
	('SQL_MODE', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'),
	('MARIA_MAX_SORT_FILE_SIZE', '9223372036853727232'),
	('NEW', 'OFF'),
	('INNODB_COMMIT_CONCURRENCY', '0'),
	('BASEDIR', 'C:\\Program Files (x86)\\MySQL\\MySQL Server 6.0\\'),
	('INNODB_MIRRORED_LOG_GROUPS', '1'),
	('MYISAM_RECOVER_OPTIONS', 'OFF'),
	('FALCON_RECORD_MEMORY_MAX', '262144000'),
	('MYISAM_STATS_METHOD', 'nulls_unequal'),
	('VERSION', '6.0.10-alpha-community'),
	('SYSTEM_TIME_ZONE', 'Pacific Daylight Time'),
	('INNODB_SUPPORT_XA', 'ON'),
	('OLD_ALTER_TABLE', 'OFF'),
	('INNODB_SYNC_SPIN_LOOPS', '20'),
	('VERSION_COMMENT', 'MySQL Community Server (GPL)'),
	('MARIA_SYNC_LOG_DIR', 'NEWFILE'),
	('INIT_CONNECT', ''),
	('MARIA_BLOCK_SIZE', '8192'),
	('WARNING_COUNT', '0'),
	('INNODB_ADAPTIVE_HASH_INDEX', 'ON'),
	('AUTOCOMMIT', 'ON'),
	('FALCON_PAGE_CACHE_SIZE', '262144000'),
	('CHARACTER_SET_DATABASE', 'utf8'),
	('DIV_PRECISION_INCREMENT', '4'),
	('SLAVE_LOAD_TMPDIR', 'C:\\Windows\\SERVIC~2\\NETWOR~1\\AppData\\Local\\Temp'),
	('DATADIR', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\'),
	('VERSION_COMPILE_MACHINE', 'ia32'),
	('INNODB_DATA_HOME_DIR', ''),
	('TABLE_DEFINITION_CACHE', '256'),
	('FALCON_CHECKPOINT_SCHEDULE', '7 * * * * *'),
	('PROFILING_HISTORY_SIZE', '15'),
	('MARIA_PAGECACHE_BUFFER_SIZE', '8384512'),
	('INNODB_CONCURRENCY_TICKETS', '500'),
	('TIME_FORMAT', '%H:%i:%s'),
	('MAX_WRITE_LOCK_COUNT', '4294967295'),
	('INNODB_FORCE_RECOVERY', '0'),
	('LC_TIME_NAMES', 'en_US'),
	('INNODB_LOG_FILES_IN_GROUP', '2'),
	('KEEP_FILES_ON_CREATE', 'OFF'),
	('ERROR_COUNT', '0'),
	('LAST_INSERT_ID', '0'),
	('FALCON_SERIAL_LOG_BLOCK_SIZE', '0'),
	('SQL_BIG_TABLES', 'OFF'),
	('SYNC_BINLOG', '0'),
	('SQL_LOG_BIN', 'ON'),
	('FALCON_INDEX_CHILL_THRESHOLD', '4194304'),
	('MAX_SP_RECURSION_DEPTH', '0'),
	('INNODB_OPEN_FILES', '300'),
	('SQL_BIG_SELECTS', 'ON'),
	('OLD', 'OFF'),
	('LOG_BIN', 'OFF'),
	('INNODB_MAX_DIRTY_PAGES_PCT', '90'),
	('THREAD_CACHE_SIZE', '8'),
	('MARIA_CHECKPOINT_INTERVAL', '30'),
	('DISABLE_SLAVE_CONNECTIONS', 'OFF'),
	('MARIA_PAGECACHE_AGE_THRESHOLD', '300'),
	('MAX_USER_CONNECTIONS', '0'),
	('HAVE_NDBCLUSTER', 'NO'),
	('TABLE_OPEN_CACHE', '256'),
	('SECURE_FILE_PRIV', ''),
	('HAVE_COMMUNITY_FEATURES', 'YES'),
	('INNODB_LOG_GROUP_HOME_DIR', '.\\'),
	('REPORT_PORT', '3306'),
	('INNODB_FAST_SHUTDOWN', '1'),
	('LOG', 'OFF'),
	('BACKUP_PROGRESS_LOG_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\backup_progress.log'),
	('SQL_BUFFER_RESULT', 'OFF'),
	('INNODB_THREAD_CONCURRENCY', '17'),
	('KEY_CACHE_BLOCK_SIZE', '1024'),
	('SLAVE_NET_TIMEOUT', '3600'),
	('TMPDIR', 'C:\\Windows\\SERVIC~2\\NETWOR~1\\AppData\\Local\\Temp'),
	('INNODB_BUFFER_POOL_SIZE', '8388608'),
	('DEFAULT_WEEK_FORMAT', '0'),
	('SLAVE_ALLOW_BATCHING', 'OFF'),
	('MAX_TMP_TABLES', '32'),
	('FALCON_SUPPORT_XA', 'OFF'),
	('HAVE_CSV', 'YES'),
	('BINLOG_FORMAT', 'MIXED'),
	('SKIP_EXTERNAL_LOCKING', 'ON'),
	('MARIA_LOG_FILE_SIZE', '1073741824'),
	('PRELOAD_BUFFER_SIZE', '32768'),
	('SQL_WARNINGS', 'OFF'),
	('SLAVE_COMPRESSED_PROTOCOL', 'OFF'),
	('FALCON_CONSISTENT_READ', 'ON'),
	('HAVE_GEOMETRY', 'YES'),
	('MARIA_SORT_BUFFER_SIZE', '8388608'),
	('HOSTNAME', 'CPU0007'),
	('MAX_DELAYED_THREADS', '20'),
	('TX_ISOLATION', 'REPEATABLE-READ'),
	('MARIA_LOG_PURGE_TYPE', 'immediate'),
	('RELAY_LOG', ''),
	('MARIA_PAGECACHE_DIVISION_LIMIT', '100'),
	('PLUGIN_DIR', 'C:\\Program Files (x86)\\MySQL\\MySQL Server 6.0\\lib/plugin'),
	('INNODB_FILE_IO_THREADS', '4'),
	('IGNORE_BUILTIN_INNODB', 'OFF'),
	('LICENSE', 'GPL'),
	('NET_READ_TIMEOUT', '30'),
	('SQL_LOG_OFF', 'OFF'),
	('SYNC_FRM', 'ON'),
	('PORT', '3306'),
	('MAX_RELAY_LOG_SIZE', '0'),
	('FALCON_SERIAL_LOG_DIR', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\'),
	('BACKUP_PROGRESS_LOG', 'ON'),
	('LOG_BIN_TRUST_FUNCTION_CREATORS', 'OFF'),
	('MAX_ALLOWED_PACKET', '1048576'),
	('INNODB_FLUSH_METHOD', ''),
	('TMP_TABLE_SIZE', '95420416'),
	('HAVE_OPENSSL', 'DISABLED'),
	('INNODB_CHECKSUMS', 'ON'),
	('STORAGE_ENGINE', 'InnoDB'),
	('INNODB_LOCKS_UNSAFE_FOR_BINLOG', 'OFF'),
	('HAVE_SSL', 'DISABLED'),
	('SLAVE_EXEC_MODE', 'STRICT'),
	('IDENTITY', '0'),
	('LOG_SLAVE_UPDATES', 'OFF'),
	('MAX_JOIN_SIZE', '18446744073709551615'),
	('SORT_BUFFER_SIZE', '262144'),
	('INNODB_FILE_PER_TABLE', 'OFF'),
	('MAX_SORT_LENGTH', '1024'),
	('INNODB_LOCK_WAIT_TIMEOUT', '50'),
	('RAND_SEED2', ''),
	('SQL_SAFE_UPDATES', 'OFF'),
	('ENGINE_CONDITION_PUSHDOWN', 'ON'),
	('RPL_RECOVERY_RANK', '0'),
	('DATETIME_FORMAT', '%Y-%m-%d %H:%i:%s'),
	('COLLATION_CONNECTION', 'utf8_general_ci'),
	('BACKUP_WAIT_TIMEOUT', '50'),
	('OPTIMIZER_SWITCH', ''),
	('INNODB_STATS_ON_METADATA', 'ON'),
	('READ_ONLY', 'OFF'),
	('RELAY_LOG_SPACE_LIMIT', '0'),
	('GENERAL_LOG', 'OFF'),
	('HAVE_INNODB', 'YES'),
	('BACKUP_HISTORY_LOG_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\backup_history.log'),
	('THREAD_POOL_SIZE', '20'),
	('SSL_KEY', ''),
	('FALCON_RECORD_CHILL_THRESHOLD', '5242880'),
	('DEADLOCK_SEARCH_DEPTH_LONG', '15'),
	('HAVE_DYNAMIC_LOADING', 'YES'),
	('SLAVE_SKIP_ERRORS', ''),
	('PROTOCOL_VERSION', '10'),
	('INSERT_ID', '0'),
	('HAVE_RTREE_KEYS', 'YES'),
	('RELAY_LOG_PURGE', 'ON'),
	('BACKUP_HISTORY_LOG', 'ON'),
	('FALCON_PAGE_SIZE', '4096'),
	('OPTIMIZER_SEARCH_DEPTH', '62'),
	('INNODB_FLUSH_LOG_AT_TRX_COMMIT', '1'),
	('UNIQUE_CHECKS', 'ON'),
	('INNODB_LOG_BUFFER_SIZE', '1048576'),
	('REPORT_USER', ''),
	('KEY_BUFFER_SIZE', '8388608'),
	('HAVE_QUERY_CACHE', 'YES'),
	('INNODB_MAX_PURGE_LAG', '0'),
	('INNODB_AUTOEXTEND_INCREMENT', '8'),
	('MYISAM_MAX_SORT_FILE_SIZE', '107374182400'),
	('SHARED_MEMORY_BASE_NAME', 'MYSQL'),
	('FALCON_CHECKSUMS', 'ON'),
	('INNODB_AUTOINC_LOCK_MODE', '1'),
	('SQL_NOTES', 'ON'),
	('SQL_SLAVE_SKIP_COUNTER', ''),
	('FALCON_SCAVENGE_SCHEDULE', '15,45 * * * * *'),
	('SQL_AUTO_IS_NULL', 'ON'),
	('SSL_CIPHER', ''),
	('TIMESTAMP', '1490985964'),
	('QUERY_CACHE_MIN_RES_UNIT', '4096'),
	('FALCON_DEBUG_MASK', '0');
/*!40000 ALTER TABLE `GLOBAL_VARIABLES` ENABLE KEYS */;

-- Dumping structure for table information_schema.KEY_COLUMN_USAGE
CREATE TEMPORARY TABLE IF NOT EXISTS `KEY_COLUMN_USAGE` (
  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',
  `ORDINAL_POSITION` bigint(10) NOT NULL DEFAULT '0',
  `POSITION_IN_UNIQUE_CONSTRAINT` bigint(10) DEFAULT NULL,
  `REFERENCED_TABLE_SCHEMA` varchar(64) DEFAULT NULL,
  `REFERENCED_TABLE_NAME` varchar(64) DEFAULT NULL,
  `REFERENCED_COLUMN_NAME` varchar(64) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.KEY_COLUMN_USAGE: -1 rows
/*!40000 ALTER TABLE `KEY_COLUMN_USAGE` DISABLE KEYS */;
INSERT INTO `KEY_COLUMN_USAGE` (`CONSTRAINT_CATALOG`, `CONSTRAINT_SCHEMA`, `CONSTRAINT_NAME`, `TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `COLUMN_NAME`, `ORDINAL_POSITION`, `POSITION_IN_UNIQUE_CONSTRAINT`, `REFERENCED_TABLE_SCHEMA`, `REFERENCED_TABLE_NAME`, `REFERENCED_COLUMN_NAME`) VALUES
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'columns_priv', 'Host', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'columns_priv', 'Db', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'columns_priv', 'User', 3, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'columns_priv', 'Table_name', 4, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'columns_priv', 'Column_name', 5, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'db', 'Host', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'db', 'Db', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'db', 'User', 3, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'event', 'db', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'event', 'name', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'func', 'name', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'help_category', 'help_category_id', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'name', 'def', 'mysql', 'help_category', 'name', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'help_keyword', 'help_keyword_id', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'name', 'def', 'mysql', 'help_keyword', 'name', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'help_relation', 'help_keyword_id', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'help_relation', 'help_topic_id', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'help_topic', 'help_topic_id', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'name', 'def', 'mysql', 'help_topic', 'name', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'host', 'Host', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'host', 'Db', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'ndb_binlog_index', 'epoch', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'ndb_binlog_index', 'orig_server_id', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'ndb_binlog_index', 'orig_epoch', 3, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'plugin', 'name', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'proc', 'db', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'proc', 'name', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'proc', 'type', 3, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'procs_priv', 'Host', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'procs_priv', 'Db', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'procs_priv', 'User', 3, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'procs_priv', 'Routine_name', 4, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'procs_priv', 'Routine_type', 5, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'servers', 'Server_name', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'tables_priv', 'Host', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'tables_priv', 'Db', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'tables_priv', 'User', 3, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'tables_priv', 'Table_name', 4, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'time_zone', 'Time_zone_id', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'time_zone_leap_second', 'Transition_time', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'time_zone_name', 'Name', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'time_zone_transition', 'Time_zone_id', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'time_zone_transition', 'Transition_time', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'time_zone_transition_type', 'Time_zone_id', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'time_zone_transition_type', 'Transition_type_id', 2, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'user', 'Host', 1, NULL, NULL, NULL, NULL),
	('def', 'mysql', 'PRIMARY', 'def', 'mysql', 'user', 'User', 2, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'etapas', 'Id_Etapas', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'evaluacion', 'Id_Eval', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'issue', 'Id_Issue', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'lote', 'Id_Lote', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'prod_etapa', 'Id_PEtapa', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'prod_eval', 'Id_ProdEval', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'prod_lote', 'Id_ProdLote', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'producto', 'Id_Prod', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'reposiciones', 'Id_Reposicion', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'result', 'Id_Result', 1, NULL, NULL, NULL, NULL),
	('def', 'produccion', 'PRIMARY', 'def', 'produccion', 'usuario', 'Id', 1, NULL, NULL, NULL, NULL),
	('def', 'prueba', 'PRIMARY', 'def', 'prueba', 'lote', 'Id_Lote', 1, NULL, NULL, NULL, NULL),
	('def', 'prueba', 'PRIMARY', 'def', 'prueba', 'producto', 'Id_Prod', 1, NULL, NULL, NULL, NULL),
	('def', 'prueba', 'PRIMARY', 'def', 'prueba', 'usuario', 'User_Id', 1, NULL, NULL, NULL, NULL);
/*!40000 ALTER TABLE `KEY_COLUMN_USAGE` ENABLE KEYS */;

-- Dumping structure for table information_schema.PARAMETERS
CREATE TEMPORARY TABLE IF NOT EXISTS `PARAMETERS` (
  `SPECIFIC_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `SPECIFIC_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `SPECIFIC_NAME` varchar(64) NOT NULL DEFAULT '',
  `ORDINAL_POSITION` int(21) NOT NULL DEFAULT '0',
  `PARAMETER_MODE` varchar(5) DEFAULT NULL,
  `PARAMETER_NAME` varchar(64) DEFAULT NULL,
  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',
  `CHARACTER_MAXIMUM_LENGTH` int(21) DEFAULT NULL,
  `CHARACTER_OCTET_LENGTH` int(21) DEFAULT NULL,
  `NUMERIC_PRECISION` int(21) DEFAULT NULL,
  `NUMERIC_SCALE` int(21) DEFAULT NULL,
  `CHARACTER_SET_NAME` varchar(64) DEFAULT NULL,
  `COLLATION_NAME` varchar(64) DEFAULT NULL,
  `DTD_IDENTIFIER` longtext NOT NULL,
  `ROUTINE_TYPE` varchar(9) NOT NULL DEFAULT ''
) ENGINE=MARIA DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- Dumping data for table information_schema.PARAMETERS: -1 rows
/*!40000 ALTER TABLE `PARAMETERS` DISABLE KEYS */;
INSERT INTO `PARAMETERS` (`SPECIFIC_CATALOG`, `SPECIFIC_SCHEMA`, `SPECIFIC_NAME`, `ORDINAL_POSITION`, `PARAMETER_MODE`, `PARAMETER_NAME`, `DATA_TYPE`, `CHARACTER_MAXIMUM_LENGTH`, `CHARACTER_OCTET_LENGTH`, `NUMERIC_PRECISION`, `NUMERIC_SCALE`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `DTD_IDENTIFIER`, `ROUTINE_TYPE`) VALUES
	('def', 'produccion', 'Disponibilidad', 1, 'IN', 's', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rFecha', 1, 'IN', 'et', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rFecha', 2, 'IN', 'f', 'date', NULL, NULL, NULL, NULL, NULL, NULL, 'date', 'PROCEDURE'),
	('def', 'produccion', 'rFechaE', 1, 'IN', 'et', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rFechaE', 2, 'IN', 'f1', 'date', NULL, NULL, NULL, NULL, NULL, NULL, 'date', 'PROCEDURE'),
	('def', 'produccion', 'rFechaE', 3, 'IN', 'f2', 'date', NULL, NULL, NULL, NULL, NULL, NULL, 'date', 'PROCEDURE'),
	('def', 'produccion', 'rFirmado', 1, 'IN', 'issues', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rLote', 1, 'IN', 'pack', 'int', NULL, NULL, 10, 0, NULL, NULL, 'int(11)', 'PROCEDURE'),
	('def', 'produccion', 'rLote', 2, 'IN', 'serie', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rLUbicacion', 1, 'IN', 'ub', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rReposiciones', 1, 'IN', 'm', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rReposiciones', 2, 'IN', 'a', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rReposiciones', 3, 'IN', 'c', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rReposiciones', 4, 'IN', 'cte', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE'),
	('def', 'produccion', 'rSLote', 1, 'IN', 'st', 'varchar', 50, 200, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(50)', 'PROCEDURE');
/*!40000 ALTER TABLE `PARAMETERS` ENABLE KEYS */;

-- Dumping structure for table information_schema.PARTITIONS
CREATE TEMPORARY TABLE IF NOT EXISTS `PARTITIONS` (
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `PARTITION_NAME` varchar(64) DEFAULT NULL,
  `SUBPARTITION_NAME` varchar(64) DEFAULT NULL,
  `PARTITION_ORDINAL_POSITION` bigint(21) unsigned DEFAULT NULL,
  `SUBPARTITION_ORDINAL_POSITION` bigint(21) unsigned DEFAULT NULL,
  `PARTITION_METHOD` varchar(12) DEFAULT NULL,
  `SUBPARTITION_METHOD` varchar(12) DEFAULT NULL,
  `PARTITION_EXPRESSION` longtext,
  `SUBPARTITION_EXPRESSION` longtext,
  `PARTITION_DESCRIPTION` longtext,
  `TABLE_ROWS` bigint(21) unsigned NOT NULL DEFAULT '0',
  `AVG_ROW_LENGTH` bigint(21) unsigned NOT NULL DEFAULT '0',
  `DATA_LENGTH` bigint(21) unsigned NOT NULL DEFAULT '0',
  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `INDEX_LENGTH` bigint(21) unsigned NOT NULL DEFAULT '0',
  `DATA_FREE` bigint(21) unsigned NOT NULL DEFAULT '0',
  `CREATE_TIME` datetime DEFAULT NULL,
  `UPDATE_TIME` datetime DEFAULT NULL,
  `CHECK_TIME` datetime DEFAULT NULL,
  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,
  `PARTITION_COMMENT` varchar(80) NOT NULL DEFAULT '',
  `NODEGROUP` varchar(12) NOT NULL DEFAULT '',
  `TABLESPACE_NAME` varchar(64) DEFAULT NULL
) ENGINE=MARIA DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- Dumping data for table information_schema.PARTITIONS: -1 rows
/*!40000 ALTER TABLE `PARTITIONS` DISABLE KEYS */;
INSERT INTO `PARTITIONS` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `PARTITION_NAME`, `SUBPARTITION_NAME`, `PARTITION_ORDINAL_POSITION`, `SUBPARTITION_ORDINAL_POSITION`, `PARTITION_METHOD`, `SUBPARTITION_METHOD`, `PARTITION_EXPRESSION`, `SUBPARTITION_EXPRESSION`, `PARTITION_DESCRIPTION`, `TABLE_ROWS`, `AVG_ROW_LENGTH`, `DATA_LENGTH`, `MAX_DATA_LENGTH`, `INDEX_LENGTH`, `DATA_FREE`, `CREATE_TIME`, `UPDATE_TIME`, `CHECK_TIME`, `CHECKSUM`, `PARTITION_COMMENT`, `NODEGROUP`, `TABLESPACE_NAME`) VALUES
	('def', 'information_schema', 'CHARACTER_SETS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 508, 0, 16646144, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'COLLATIONS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 301, 0, 16611588, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 259, 0, 16712493, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'COLUMNS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'COLUMN_PRIVILEGES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3422, 0, 16764378, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'ENGINES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 653, 0, 16700475, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'EVENTS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FILES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3502, 0, 16767576, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'GLOBAL_STATUS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 4357, 0, 16761379, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'GLOBAL_VARIABLES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 4357, 0, 16761379, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 6181, 0, 16769053, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'PARAMETERS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'PARTITIONS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'PLUGINS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'PROCESSLIST', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'PROFILING', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 388, 0, 16606012, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 6423, 0, 16770453, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'ROUTINES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'SCHEMATA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 4617, 0, 16764327, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'SCHEMA_PRIVILEGES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 2906, 0, 16764714, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'SESSION_STATUS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 4357, 0, 16761379, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'SESSION_VARIABLES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 4357, 0, 16761379, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'STATISTICS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 7660, 0, 16767740, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'TABLES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 12825, 0, 16762275, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'TABLESPACES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 9259, 0, 16768049, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'TABLE_CONSTRAINTS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3341, 0, 16761797, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'TABLE_PRIVILEGES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3164, 0, 16753380, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'TRIGGERS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'USER_PRIVILEGES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 2648, 0, 16751248, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'VIEWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_SUMMARY', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 33, 0, 15379089, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_DETAIL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 503, 0, 16743864, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_TABLESPACE_IO', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 507, 0, 16744182, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_SUMMARY', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 33, 0, 15379089, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_VERSION', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 259, 0, 16712493, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_TRANSACTION_SUMMARY', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 21, 0, 14680050, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_SERIAL_LOG_INFO', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 21, 0, 14680050, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_SYNCOBJECTS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 499, 0, 16743446, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 997, 0, 16726669, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_DETAIL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 503, 0, 16743864, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'mysql', 'backup_history', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'mysql', 'backup_progress', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'mysql', 'columns_priv', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 303430024894087167, 8192, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'db', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 1160, 163255486492180479, 8192, 1160, '2009-03-03 15:26:34', '2017-02-02 17:17:47', '2009-03-03 15:26:36', NULL, '', '', NULL),
	('def', 'mysql', 'event', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 281474976710655, 4096, 0, '2009-03-03 15:26:36', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'func', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 217017207043915775, 2048, 0, '2009-03-03 15:26:34', '2009-03-04 01:26:34', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'general_log', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'mysql', 'help_category', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 38, 773, 29374, 217580156997337087, 5120, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:38', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'help_keyword', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 459, 261, 119799, 73464968921481215, 18432, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:38', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'help_relation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1001, 9, 9009, 2533274790395903, 17408, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:38', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'help_topic', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 502, 812, 408052, 281474976710655, 18432, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:38', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'host', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 144959613005987839, 4096, 0, '2009-03-03 15:26:34', '2009-03-04 01:26:34', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'ndb_binlog_index', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 137438945280, 8192, 0, '2009-03-03 15:26:36', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'plugin', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 216454257090494463, 2048, 0, '2009-03-03 15:26:34', '2009-03-04 01:26:34', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'proc', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 9, 389, 3888, 281474976710655, 7168, 384, '2009-03-03 15:26:35', '2017-03-16 11:00:22', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'procs_priv', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 318348198659751935, 4096, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'servers', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 577868127186976767, 2048, 0, '2009-03-03 15:26:34', '2009-03-04 01:26:34', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'slow_log', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
	('def', 'mysql', 'tables_priv', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 318629673636462591, 4096, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'time_zone', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 1970324836974591, 1024, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'time_zone_leap_second', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 3659174697238527, 1024, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'time_zone_name', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 73464968921481215, 2048, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'time_zone_transition', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 4785074604081151, 1024, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'time_zone_transition_type', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 12947848928690175, 1024, 0, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, NULL, '', '', NULL),
	('def', 'mysql', 'user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 104, 256, 281474976710655, 4096, 48, '2009-03-03 15:26:34', '2017-02-02 17:17:47', NULL, NULL, '', '', NULL),
	('def', 'produccion', 'etapas', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 3, 5461, 16384, NULL, 0, 0, '2017-02-02 17:34:22', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'evaluacion', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 8192, 16384, NULL, 0, 0, '2017-02-02 17:41:39', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'issue', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 8192, 16384, NULL, 0, 0, '2017-02-02 17:56:19', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'lote', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 11, 1489, 16384, NULL, 0, 0, '2017-02-02 17:31:13', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'prod_etapa', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 12, 1365, 16384, NULL, 0, 0, '2017-02-02 18:27:31', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'prod_eval', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 8192, 16384, NULL, 0, 0, '2017-02-02 18:04:24', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'prod_lote', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 8192, 16384, NULL, 0, 0, '2017-02-02 18:19:05', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'producto', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 11, 1489, 16384, NULL, 0, 0, '2017-02-02 17:24:24', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'reposiciones', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 10, 1638, 16384, NULL, 0, 0, '2017-03-08 11:30:29', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'result', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 8192, 16384, NULL, 0, 0, '2017-02-02 18:05:12', NULL, NULL, NULL, '', '', NULL),
	('def', 'produccion', 'usuario', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 15, 1092, 16384, NULL, 0, 0, '2017-02-28 10:50:42', NULL, NULL, NULL, '', '', NULL),
	('def', 'prueba', 'lote', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 8192, 16384, NULL, 0, 3145728, '2017-02-14 17:36:00', NULL, NULL, NULL, '', '', NULL),
	('def', 'prueba', 'producto', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 4, 4096, 16384, NULL, 0, 3145728, '2017-02-14 17:35:03', NULL, NULL, NULL, '', '', NULL),
	('def', 'prueba', 'usuario', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 16384, NULL, 0, 3145728, '2017-02-14 17:32:28', NULL, NULL, NULL, '', '', NULL);
/*!40000 ALTER TABLE `PARTITIONS` ENABLE KEYS */;

-- Dumping structure for table information_schema.PLUGINS
CREATE TEMPORARY TABLE IF NOT EXISTS `PLUGINS` (
  `PLUGIN_NAME` varchar(64) NOT NULL DEFAULT '',
  `PLUGIN_VERSION` varchar(20) NOT NULL DEFAULT '',
  `PLUGIN_STATUS` varchar(10) NOT NULL DEFAULT '',
  `PLUGIN_TYPE` varchar(80) NOT NULL DEFAULT '',
  `PLUGIN_TYPE_VERSION` varchar(20) NOT NULL DEFAULT '',
  `PLUGIN_LIBRARY` varchar(64) DEFAULT NULL,
  `PLUGIN_LIBRARY_VERSION` varchar(20) DEFAULT NULL,
  `PLUGIN_AUTHOR` varchar(64) DEFAULT NULL,
  `PLUGIN_DESCRIPTION` longtext,
  `PLUGIN_LICENSE` varchar(80) DEFAULT NULL
) ENGINE=MARIA DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- Dumping data for table information_schema.PLUGINS: -1 rows
/*!40000 ALTER TABLE `PLUGINS` DISABLE KEYS */;
INSERT INTO `PLUGINS` (`PLUGIN_NAME`, `PLUGIN_VERSION`, `PLUGIN_STATUS`, `PLUGIN_TYPE`, `PLUGIN_TYPE_VERSION`, `PLUGIN_LIBRARY`, `PLUGIN_LIBRARY_VERSION`, `PLUGIN_AUTHOR`, `PLUGIN_DESCRIPTION`, `PLUGIN_LICENSE`) VALUES
	('binlog', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'MySQL AB', 'This is a pseudo storage engine to represent the binlog in a transaction', 'GPL'),
	('MEMORY', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'MySQL AB', 'Hash based, stored in memory, useful for temporary tables', 'GPL'),
	('MyISAM', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'MySQL AB', 'Default engine as of MySQL 3.23 with great performance', 'GPL'),
	('MRG_MYISAM', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'MySQL AB', 'Collection of identical MyISAM tables', 'GPL'),
	('ARCHIVE', '3.80', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'Brian Aker, MySQL AB', 'Archive storage engine', 'GPL'),
	('BLACKHOLE', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'MySQL AB', '/dev/null storage engine (anything you write to it disappears)', 'GPL'),
	('CSV', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'Brian Aker, MySQL AB', 'CSV storage engine', 'GPL'),
	('InnoDB', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'Innobase OY', 'Supports transactions, row-level locking, and foreign keys', 'GPL'),
	('partition', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'Mikael Ronstrom, MySQL AB', 'Partition Storage Engine Helper', 'GPL'),
	('FEDERATED', '1.0', 'DISABLED', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'Patrick Galbraith and Brian Aker, MySQL AB', 'Federated MySQL storage engine', 'GPL'),
	('Falcon', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon storage engine', 'GPL'),
	('FALCON_SYSTEM_MEMORY_DETAIL', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon System Memory Detail.', 'GPL'),
	('FALCON_SYSTEM_MEMORY_SUMMARY', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon System Memory Summary.', 'GPL'),
	('FALCON_RECORD_CACHE_DETAIL', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon Record Cache Detail.', 'GPL'),
	('FALCON_RECORD_CACHE_SUMMARY', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon Record Cache Summary.', 'GPL'),
	('FALCON_TRANSACTIONS', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon Transactions.', 'GPL'),
	('FALCON_TRANSACTION_SUMMARY', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon Transaction Summary.', 'GPL'),
	('FALCON_SYNCOBJECTS', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon SyncObjects.', 'GPL'),
	('FALCON_SERIAL_LOG_INFO', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon Serial Log Information.', 'GPL'),
	('FALCON_TABLESPACE_IO', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon Tablespace IO.', 'GPL'),
	('FALCON_VERSION', '0.5', 'ACTIVE', 'INFORMATION SCHEMA', '60010.0', NULL, NULL, 'MySQL AB', 'Falcon Database Version Number.', 'GPL'),
	('MARIA', '1.0', 'ACTIVE', 'STORAGE ENGINE', '60010.0', NULL, NULL, 'MySQL AB', 'Crash-safe tables with MyISAM heritage', 'GPL');
/*!40000 ALTER TABLE `PLUGINS` ENABLE KEYS */;

-- Dumping structure for table information_schema.PROCESSLIST
CREATE TEMPORARY TABLE IF NOT EXISTS `PROCESSLIST` (
  `ID` bigint(4) NOT NULL DEFAULT '0',
  `USER` varchar(16) NOT NULL DEFAULT '',
  `HOST` varchar(64) NOT NULL DEFAULT '',
  `DB` varchar(64) DEFAULT NULL,
  `COMMAND` varchar(16) NOT NULL DEFAULT '',
  `TIME` bigint(7) NOT NULL DEFAULT '0',
  `STATE` varchar(64) DEFAULT NULL,
  `INFO` longtext
) ENGINE=MARIA DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- Dumping data for table information_schema.PROCESSLIST: -1 rows
/*!40000 ALTER TABLE `PROCESSLIST` DISABLE KEYS */;
INSERT INTO `PROCESSLIST` (`ID`, `USER`, `HOST`, `DB`, `COMMAND`, `TIME`, `STATE`, `INFO`) VALUES
	(3, 'root', 'localhost:49477', 'produccion', 'Query', 0, 'executing', 'SELECT * FROM `information_schema`.`PROCESSLIST` LIMIT 104857600');
/*!40000 ALTER TABLE `PROCESSLIST` ENABLE KEYS */;

-- Dumping structure for table information_schema.PROFILING
CREATE TEMPORARY TABLE IF NOT EXISTS `PROFILING` (
  `QUERY_ID` int(20) NOT NULL DEFAULT '0',
  `SEQ` int(20) NOT NULL DEFAULT '0',
  `STATE` varchar(30) NOT NULL DEFAULT '',
  `DURATION` decimal(9,6) NOT NULL DEFAULT '0.000000',
  `CPU_USER` decimal(9,6) DEFAULT NULL,
  `CPU_SYSTEM` decimal(9,6) DEFAULT NULL,
  `CONTEXT_VOLUNTARY` int(20) DEFAULT NULL,
  `CONTEXT_INVOLUNTARY` int(20) DEFAULT NULL,
  `BLOCK_OPS_IN` int(20) DEFAULT NULL,
  `BLOCK_OPS_OUT` int(20) DEFAULT NULL,
  `MESSAGES_SENT` int(20) DEFAULT NULL,
  `MESSAGES_RECEIVED` int(20) DEFAULT NULL,
  `PAGE_FAULTS_MAJOR` int(20) DEFAULT NULL,
  `PAGE_FAULTS_MINOR` int(20) DEFAULT NULL,
  `SWAPS` int(20) DEFAULT NULL,
  `SOURCE_FUNCTION` varchar(30) DEFAULT NULL,
  `SOURCE_FILE` varchar(20) DEFAULT NULL,
  `SOURCE_LINE` int(20) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.PROFILING: -1 rows
/*!40000 ALTER TABLE `PROFILING` DISABLE KEYS */;
/*!40000 ALTER TABLE `PROFILING` ENABLE KEYS */;

-- Dumping structure for table information_schema.REFERENTIAL_CONSTRAINTS
CREATE TEMPORARY TABLE IF NOT EXISTS `REFERENTIAL_CONSTRAINTS` (
  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',
  `UNIQUE_CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `UNIQUE_CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `UNIQUE_CONSTRAINT_NAME` varchar(64) DEFAULT NULL,
  `MATCH_OPTION` varchar(64) NOT NULL DEFAULT '',
  `UPDATE_RULE` varchar(64) NOT NULL DEFAULT '',
  `DELETE_RULE` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `REFERENCED_TABLE_NAME` varchar(64) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.REFERENTIAL_CONSTRAINTS: -1 rows
/*!40000 ALTER TABLE `REFERENTIAL_CONSTRAINTS` DISABLE KEYS */;
/*!40000 ALTER TABLE `REFERENTIAL_CONSTRAINTS` ENABLE KEYS */;

-- Dumping structure for table information_schema.ROUTINES
CREATE TEMPORARY TABLE IF NOT EXISTS `ROUTINES` (
  `SPECIFIC_NAME` varchar(64) NOT NULL DEFAULT '',
  `ROUTINE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `ROUTINE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `ROUTINE_NAME` varchar(64) NOT NULL DEFAULT '',
  `ROUTINE_TYPE` varchar(9) NOT NULL DEFAULT '',
  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',
  `CHARACTER_MAXIMUM_LENGTH` int(21) DEFAULT NULL,
  `CHARACTER_OCTET_LENGTH` int(21) DEFAULT NULL,
  `NUMERIC_PRECISION` int(21) DEFAULT NULL,
  `NUMERIC_SCALE` int(21) DEFAULT NULL,
  `CHARACTER_SET_NAME` varchar(64) DEFAULT NULL,
  `COLLATION_NAME` varchar(64) DEFAULT NULL,
  `DTD_IDENTIFIER` longtext,
  `ROUTINE_BODY` varchar(8) NOT NULL DEFAULT '',
  `ROUTINE_DEFINITION` longtext,
  `EXTERNAL_NAME` varchar(64) DEFAULT NULL,
  `EXTERNAL_LANGUAGE` varchar(64) DEFAULT NULL,
  `PARAMETER_STYLE` varchar(8) NOT NULL DEFAULT '',
  `IS_DETERMINISTIC` varchar(3) NOT NULL DEFAULT '',
  `SQL_DATA_ACCESS` varchar(64) NOT NULL DEFAULT '',
  `SQL_PATH` varchar(64) DEFAULT NULL,
  `SECURITY_TYPE` varchar(7) NOT NULL DEFAULT '',
  `CREATED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `LAST_ALTERED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',
  `ROUTINE_COMMENT` varchar(64) NOT NULL DEFAULT '',
  `DEFINER` varchar(77) NOT NULL DEFAULT '',
  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',
  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',
  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''
) ENGINE=MARIA DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- Dumping data for table information_schema.ROUTINES: -1 rows
/*!40000 ALTER TABLE `ROUTINES` DISABLE KEYS */;
INSERT INTO `ROUTINES` (`SPECIFIC_NAME`, `ROUTINE_CATALOG`, `ROUTINE_SCHEMA`, `ROUTINE_NAME`, `ROUTINE_TYPE`, `DATA_TYPE`, `CHARACTER_MAXIMUM_LENGTH`, `CHARACTER_OCTET_LENGTH`, `NUMERIC_PRECISION`, `NUMERIC_SCALE`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `DTD_IDENTIFIER`, `ROUTINE_BODY`, `ROUTINE_DEFINITION`, `EXTERNAL_NAME`, `EXTERNAL_LANGUAGE`, `PARAMETER_STYLE`, `IS_DETERMINISTIC`, `SQL_DATA_ACCESS`, `SQL_PATH`, `SECURITY_TYPE`, `CREATED`, `LAST_ALTERED`, `SQL_MODE`, `ROUTINE_COMMENT`, `DEFINER`, `CHARACTER_SET_CLIENT`, `COLLATION_CONNECTION`, `DATABASE_COLLATION`) VALUES
	('Disponibilidad', 'def', 'produccion', 'Disponibilidad', 'PROCEDURE', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SQL', 'BEGIN\r\n select * from producto where Num_Serie =s and Disponibilidad ="Disponible";  \r\nEND', NULL, NULL, 'SQL', 'NO', 'CONTAINS SQL', NULL, 'DEFINER', '2017-03-16 11:00:21', '2017-03-16 11:00:21', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'root@localhost', 'utf8', 'utf8_general_ci', 'utf8_general_ci'),
	('rFecha', 'def', 'produccion', 'rFecha', 'PROCEDURE', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SQL', 'BEGIN\r\n\r\n   select Num_Serie, Etapa, F_Etapa, Issue_E from prod_etapa where Etapa= et and F_Etapa= f;\r\n\r\nEND', NULL, NULL, 'SQL', 'NO', 'CONTAINS SQL', NULL, 'DEFINER', '2017-03-03 13:53:58', '2017-03-03 13:53:58', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'root@localhost', 'utf8', 'utf8_general_ci', 'utf8_general_ci'),
	('rFechaE', 'def', 'produccion', 'rFechaE', 'PROCEDURE', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SQL', 'BEGIN\r\n    	  select Num_Serie, Etapa, F_Etapa,Issue_E from prod_etapa where Etapa= et and F_Etapa between f1 and f2;\r\n		         \r\n END', NULL, NULL, 'SQL', 'NO', 'CONTAINS SQL', NULL, 'DEFINER', '2017-03-06 15:05:43', '2017-03-06 15:05:43', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'root@localhost', 'utf8', 'utf8_general_ci', 'utf8_general_ci'),
	('rFirmado', 'def', 'produccion', 'rFirmado', 'PROCEDURE', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SQL', 'BEGIN\r\n\r\n  select Num_Serie, Etapa, F_Etapa, Issue_E from prod_etapa  where Issue_E = issues;\r\n\r\nEND', NULL, NULL, 'SQL', 'NO', 'READS SQL DATA', NULL, 'DEFINER', '2017-03-02 12:38:23', '2017-03-02 12:38:23', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'root@localhost', 'utf8', 'utf8_general_ci', 'utf8_general_ci'),
	('rLote', 'def', 'produccion', 'rLote', 'PROCEDURE', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SQL', 'BEGIN\r\n\r\n   Select Num_Serie, MAC_Address, Num_Lote from producto where Num_Lote= pack or  Num_Serie= serie;\r\nEND', NULL, NULL, 'SQL', 'NO', 'CONTAINS SQL', NULL, 'DEFINER', '2017-03-02 16:07:39', '2017-03-02 16:07:39', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'root@localhost', 'utf8', 'utf8_general_ci', 'utf8_general_ci'),
	('rLUbicacion', 'def', 'produccion', 'rLUbicacion', 'PROCEDURE', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SQL', 'BEGIN\r\n select Num_Lote, Ubicacion from lote\r\n where Ubicacion = ub;\r\nEND', NULL, NULL, 'SQL', 'NO', 'CONTAINS SQL', NULL, 'DEFINER', '2017-03-03 17:55:34', '2017-03-03 17:55:34', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'root@localhost', 'utf8', 'utf8_general_ci', 'utf8_general_ci'),
	('rReposiciones', 'def', 'produccion', 'rReposiciones', 'PROCEDURE', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SQL', 'BEGIN\r\n select SerieS, MACs,Canal, Cliente, CiudadO, F_Salida, Motivo, Autorizo from reposiciones where Motivo = m or Autorizo = a or Canal = c or Cliente = cte;\r\nEND', NULL, NULL, 'SQL', 'NO', 'CONTAINS SQL', NULL, 'DEFINER', '2017-03-15 09:51:48', '2017-03-15 09:51:48', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'root@localhost', 'utf8', 'utf8_general_ci', 'utf8_general_ci'),
	('rSLote', 'def', 'produccion', 'rSLote', 'PROCEDURE', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SQL', 'BEGIN\r\n  select Num_Lote, Ubicacion, S_Lote from lote where S_Lote = st;\r\nEND', NULL, NULL, 'SQL', 'NO', 'CONTAINS SQL', NULL, 'DEFINER', '2017-03-06 16:10:51', '2017-03-06 16:10:51', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'root@localhost', 'utf8', 'utf8_general_ci', 'utf8_general_ci'),
	('Store', 'def', 'prueba', 'Store', 'PROCEDURE', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SQL', 'BEGIN\r\nSELECT Num_Serie,MAC_Address,Num_Lote from producto inner join lote where producto.Id_Lote = lote.Id_Lote;\r\nEND', NULL, NULL, 'SQL', 'NO', 'CONTAINS SQL', NULL, 'DEFINER', '2017-03-07 16:50:53', '2017-03-07 16:50:53', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'root@localhost', 'utf8', 'utf8_general_ci', 'utf8_general_ci');
/*!40000 ALTER TABLE `ROUTINES` ENABLE KEYS */;

-- Dumping structure for table information_schema.SCHEMATA
CREATE TEMPORARY TABLE IF NOT EXISTS `SCHEMATA` (
  `CATALOG_NAME` varchar(512) NOT NULL DEFAULT '',
  `SCHEMA_NAME` varchar(64) NOT NULL DEFAULT '',
  `DEFAULT_CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',
  `DEFAULT_COLLATION_NAME` varchar(32) NOT NULL DEFAULT '',
  `SQL_PATH` varchar(512) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.SCHEMATA: -1 rows
/*!40000 ALTER TABLE `SCHEMATA` DISABLE KEYS */;
INSERT INTO `SCHEMATA` (`CATALOG_NAME`, `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME`, `SQL_PATH`) VALUES
	('def', 'information_schema', 'utf8', 'utf8_general_ci', NULL),
	('def', 'mysql', 'utf8', 'utf8_general_ci', NULL),
	('def', 'produccion', 'utf8', 'utf8_general_ci', NULL),
	('def', 'prueba', 'utf8', 'utf8_general_ci', NULL),
	('def', 'test', 'utf8', 'utf8_general_ci', NULL);
/*!40000 ALTER TABLE `SCHEMATA` ENABLE KEYS */;

-- Dumping structure for table information_schema.SCHEMA_PRIVILEGES
CREATE TEMPORARY TABLE IF NOT EXISTS `SCHEMA_PRIVILEGES` (
  `GRANTEE` varchar(81) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.SCHEMA_PRIVILEGES: -1 rows
/*!40000 ALTER TABLE `SCHEMA_PRIVILEGES` DISABLE KEYS */;
/*!40000 ALTER TABLE `SCHEMA_PRIVILEGES` ENABLE KEYS */;

-- Dumping structure for table information_schema.SESSION_STATUS
CREATE TEMPORARY TABLE IF NOT EXISTS `SESSION_STATUS` (
  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.SESSION_STATUS: -1 rows
/*!40000 ALTER TABLE `SESSION_STATUS` DISABLE KEYS */;
INSERT INTO `SESSION_STATUS` (`VARIABLE_NAME`, `VARIABLE_VALUE`) VALUES
	('ABORTED_CLIENTS', '0'),
	('ABORTED_CONNECTS', '1'),
	('BINLOG_CACHE_DISK_USE', '0'),
	('BINLOG_CACHE_USE', '0'),
	('BYTES_RECEIVED', '12272'),
	('BYTES_SENT', '316752'),
	('COM_ADMIN_COMMANDS', '184'),
	('COM_ASSIGN_TO_KEYCACHE', '0'),
	('COM_ALTER_DB', '0'),
	('COM_ALTER_DB_UPGRADE', '0'),
	('COM_ALTER_EVENT', '0'),
	('COM_ALTER_FUNCTION', '0'),
	('COM_ALTER_PROCEDURE', '0'),
	('COM_ALTER_SERVER', '0'),
	('COM_ALTER_TABLE', '0'),
	('COM_ALTER_TABLESPACE', '0'),
	('COM_ANALYZE', '0'),
	('COM_BEGIN', '0'),
	('COM_BACKUP', '0'),
	('COM_BINLOG', '0'),
	('COM_CALL_PROCEDURE', '0'),
	('COM_CHANGE_DB', '1'),
	('COM_CHANGE_MASTER', '0'),
	('COM_CHECK', '0'),
	('COM_CHECKSUM', '0'),
	('COM_COMMIT', '0'),
	('COM_CREATE_DB', '0'),
	('COM_CREATE_EVENT', '0'),
	('COM_CREATE_FUNCTION', '0'),
	('COM_CREATE_INDEX', '0'),
	('COM_CREATE_PROCEDURE', '0'),
	('COM_CREATE_SERVER', '0'),
	('COM_CREATE_TABLE', '0'),
	('COM_CREATE_TRIGGER', '0'),
	('COM_CREATE_UDF', '0'),
	('COM_CREATE_USER', '0'),
	('COM_CREATE_VIEW', '0'),
	('COM_DEALLOC_SQL', '0'),
	('COM_DELETE', '0'),
	('COM_DELETE_MULTI', '0'),
	('COM_DO', '0'),
	('COM_DROP_DB', '0'),
	('COM_DROP_EVENT', '0'),
	('COM_DROP_FUNCTION', '0'),
	('COM_DROP_INDEX', '0'),
	('COM_DROP_PROCEDURE', '0'),
	('COM_DROP_SERVER', '0'),
	('COM_DROP_TABLE', '0'),
	('COM_DROP_TRIGGER', '0'),
	('COM_DROP_USER', '0'),
	('COM_DROP_VIEW', '0'),
	('COM_EMPTY_QUERY', '0'),
	('COM_EXECUTE_SQL', '0'),
	('COM_FLUSH', '0'),
	('COM_GRANT', '0'),
	('COM_HA_CLOSE', '0'),
	('COM_HA_OPEN', '0'),
	('COM_HA_READ', '0'),
	('COM_HELP', '0'),
	('COM_INSERT', '0'),
	('COM_INSERT_SELECT', '0'),
	('COM_INSTALL_PLUGIN', '0'),
	('COM_KILL', '0'),
	('COM_LOAD', '0'),
	('COM_LOCK_TABLES', '0'),
	('COM_OPTIMIZE', '0'),
	('COM_PRELOAD_KEYS', '0'),
	('COM_PREPARE_SQL', '0'),
	('COM_PURGE', '0'),
	('COM_PURGE_BEFORE_DATE', '0'),
	('COM_PURGE_BUP_LOG', '0'),
	('COM_RELEASE_SAVEPOINT', '0'),
	('COM_RENAME_TABLE', '0'),
	('COM_RENAME_USER', '0'),
	('COM_REPAIR', '0'),
	('COM_REPLACE', '0'),
	('COM_REPLACE_SELECT', '0'),
	('COM_RESET', '0'),
	('COM_RESTORE', '0'),
	('COM_REVOKE', '0'),
	('COM_REVOKE_ALL', '0'),
	('COM_ROLLBACK', '0'),
	('COM_ROLLBACK_TO_SAVEPOINT', '0'),
	('COM_SAVEPOINT', '0'),
	('COM_SELECT', '73'),
	('COM_SET_OPTION', '2'),
	('COM_SHOW_AUTHORS', '0'),
	('COM_SHOW_BINLOG_EVENTS', '0'),
	('COM_SHOW_BINLOGS', '0'),
	('COM_SHOW_CHARSETS', '1'),
	('COM_SHOW_COLLATIONS', '1'),
	('COM_SHOW_CONTRIBUTORS', '0'),
	('COM_SHOW_CREATE_DB', '31'),
	('COM_SHOW_CREATE_EVENT', '0'),
	('COM_SHOW_CREATE_FUNC', '0'),
	('COM_SHOW_CREATE_PROC', '0'),
	('COM_SHOW_CREATE_TABLE', '31'),
	('COM_SHOW_CREATE_TRIGGER', '0'),
	('COM_SHOW_DATABASES', '1'),
	('COM_SHOW_ENGINE_LOGS', '0'),
	('COM_SHOW_ENGINE_MUTEX', '0'),
	('COM_SHOW_ENGINE_STATUS', '0'),
	('COM_SHOW_EVENTS', '1'),
	('COM_SHOW_ERRORS', '0'),
	('COM_SHOW_FIELDS', '0'),
	('COM_SHOW_FUNCTION_STATUS', '5'),
	('COM_SHOW_GRANTS', '0'),
	('COM_SHOW_KEYS', '0'),
	('COM_SHOW_MASTER_STATUS', '0'),
	('COM_SHOW_NEW_MASTER', '0'),
	('COM_SHOW_OPEN_TABLES', '0'),
	('COM_SHOW_PLUGINS', '0'),
	('COM_SHOW_PRIVILEGES', '0'),
	('COM_SHOW_PROCEDURE_STATUS', '5'),
	('COM_SHOW_PROCESSLIST', '0'),
	('COM_SHOW_PROFILE', '0'),
	('COM_SHOW_PROFILES', '0'),
	('COM_SHOW_SLAVE_HOSTS', '0'),
	('COM_SHOW_SLAVE_STATUS', '0'),
	('COM_SHOW_STATUS', '3'),
	('COM_SHOW_STORAGE_ENGINES', '1'),
	('COM_SHOW_TABLE_STATUS', '5'),
	('COM_SHOW_TABLES', '0'),
	('COM_SHOW_TRIGGERS', '5'),
	('COM_SHOW_VARIABLES', '3'),
	('COM_SHOW_WARNINGS', '0'),
	('COM_SLAVE_START', '0'),
	('COM_SLAVE_STOP', '0'),
	('COM_STMT_CLOSE', '0'),
	('COM_STMT_EXECUTE', '0'),
	('COM_STMT_FETCH', '0'),
	('COM_STMT_PREPARE', '0'),
	('COM_STMT_REPREPARE', '0'),
	('COM_STMT_RESET', '0'),
	('COM_STMT_SEND_LONG_DATA', '0'),
	('COM_TRUNCATE', '0'),
	('COM_UNINSTALL_PLUGIN', '0'),
	('COM_UNLOCK_TABLES', '0'),
	('COM_UPDATE', '0'),
	('COM_UPDATE_MULTI', '0'),
	('COM_XA_COMMIT', '0'),
	('COM_XA_END', '0'),
	('COM_XA_PREPARE', '0'),
	('COM_XA_RECOVER', '0'),
	('COM_XA_ROLLBACK', '0'),
	('COM_XA_START', '0'),
	('COMPRESSION', 'OFF'),
	('CONNECTIONS', '4'),
	('CREATED_TMP_DISK_TABLES', '89'),
	('CREATED_TMP_FILES', '5'),
	('CREATED_TMP_TABLES', '340'),
	('DELAYED_ERRORS', '0'),
	('DELAYED_INSERT_THREADS', '0'),
	('DELAYED_WRITES', '0'),
	('FLUSH_COMMANDS', '1'),
	('HANDLER_COMMIT', '0'),
	('HANDLER_DELETE', '0'),
	('HANDLER_DISCOVER', '0'),
	('HANDLER_MRR_INIT', '0'),
	('HANDLER_PREPARE', '0'),
	('HANDLER_READ_FIRST', '12'),
	('HANDLER_READ_KEY', '14'),
	('HANDLER_READ_NEXT', '108'),
	('HANDLER_READ_PREV', '0'),
	('HANDLER_READ_RND', '0'),
	('HANDLER_READ_RND_NEXT', '3657'),
	('HANDLER_ROLLBACK', '0'),
	('HANDLER_SAVEPOINT', '0'),
	('HANDLER_SAVEPOINT_ROLLBACK', '0'),
	('HANDLER_UPDATE', '0'),
	('HANDLER_WRITE', '3754'),
	('INNODB_BUFFER_POOL_PAGES_DATA', '35'),
	('INNODB_BUFFER_POOL_PAGES_DIRTY', '0'),
	('INNODB_BUFFER_POOL_PAGES_FLUSHED', '0'),
	('INNODB_BUFFER_POOL_PAGES_FREE', '477'),
	('INNODB_BUFFER_POOL_PAGES_MISC', '0'),
	('INNODB_BUFFER_POOL_PAGES_TOTAL', '512'),
	('INNODB_BUFFER_POOL_READ_AHEAD_RND', '2'),
	('INNODB_BUFFER_POOL_READ_AHEAD_SEQ', '0'),
	('INNODB_BUFFER_POOL_READ_REQUESTS', '1897'),
	('INNODB_BUFFER_POOL_READS', '19'),
	('INNODB_BUFFER_POOL_WAIT_FREE', '0'),
	('INNODB_BUFFER_POOL_WRITE_REQUESTS', '0'),
	('INNODB_DATA_FSYNCS', '3'),
	('INNODB_DATA_PENDING_FSYNCS', '0'),
	('INNODB_DATA_PENDING_READS', '0'),
	('INNODB_DATA_PENDING_WRITES', '0'),
	('INNODB_DATA_READ', '2756608'),
	('INNODB_DATA_READS', '45'),
	('INNODB_DATA_WRITES', '3'),
	('INNODB_DATA_WRITTEN', '1536'),
	('INNODB_DBLWR_PAGES_WRITTEN', '0'),
	('INNODB_DBLWR_WRITES', '0'),
	('INNODB_LOG_WAITS', '0'),
	('INNODB_LOG_WRITE_REQUESTS', '0'),
	('INNODB_LOG_WRITES', '1'),
	('INNODB_OS_LOG_FSYNCS', '3'),
	('INNODB_OS_LOG_PENDING_FSYNCS', '0'),
	('INNODB_OS_LOG_PENDING_WRITES', '0'),
	('INNODB_OS_LOG_WRITTEN', '512'),
	('INNODB_PAGE_SIZE', '16384'),
	('INNODB_PAGES_CREATED', '0'),
	('INNODB_PAGES_READ', '35'),
	('INNODB_PAGES_WRITTEN', '0'),
	('INNODB_ROW_LOCK_CURRENT_WAITS', '0'),
	('INNODB_ROW_LOCK_TIME', '0'),
	('INNODB_ROW_LOCK_TIME_AVG', '0'),
	('INNODB_ROW_LOCK_TIME_MAX', '0'),
	('INNODB_ROW_LOCK_WAITS', '0'),
	('INNODB_ROWS_DELETED', '0'),
	('INNODB_ROWS_INSERTED', '0'),
	('INNODB_ROWS_READ', '0'),
	('INNODB_ROWS_UPDATED', '0'),
	('KEY_BLOCKS_NOT_FLUSHED', '0'),
	('KEY_BLOCKS_UNUSED', '7170'),
	('KEY_BLOCKS_USED', '3'),
	('KEY_READ_REQUESTS', '72'),
	('KEY_READS', '6'),
	('KEY_WRITE_REQUESTS', '0'),
	('KEY_WRITES', '0'),
	('LAST_QUERY_COST', '10.499000'),
	('MARIA_PAGECACHE_BLOCKS_NOT_FLUSHED', '0'),
	('MARIA_PAGECACHE_BLOCKS_UNUSED', '997'),
	('MARIA_PAGECACHE_BLOCKS_USED', '17'),
	('MARIA_PAGECACHE_READ_REQUESTS', '935'),
	('MARIA_PAGECACHE_READS', '28'),
	('MARIA_PAGECACHE_WRITE_REQUESTS', '40'),
	('MARIA_PAGECACHE_WRITES', '0'),
	('MAX_USED_CONNECTIONS', '1'),
	('NOT_FLUSHED_DELAYED_ROWS', '0'),
	('OPEN_FILES', '54'),
	('OPEN_STREAMS', '0'),
	('OPEN_TABLE_DEFINITIONS', '39'),
	('OPEN_TABLES', '39'),
	('OPENED_FILES', '673'),
	('OPENED_TABLE_DEFINITIONS', '24'),
	('OPENED_TABLES', '51'),
	('PREPARED_STMT_COUNT', '0'),
	('QCACHE_FREE_BLOCKS', '0'),
	('QCACHE_FREE_MEMORY', '0'),
	('QCACHE_HITS', '0'),
	('QCACHE_INSERTS', '0'),
	('QCACHE_LOWMEM_PRUNES', '0'),
	('QCACHE_NOT_CACHED', '0'),
	('QCACHE_QUERIES_IN_CACHE', '0'),
	('QCACHE_TOTAL_BLOCKS', '0'),
	('QUERIES', '176'),
	('QUESTIONS', '169'),
	('RPL_STATUS', 'NULL'),
	('SELECT_FULL_JOIN', '0'),
	('SELECT_FULL_RANGE_JOIN', '0'),
	('SELECT_RANGE', '0'),
	('SELECT_RANGE_CHECK', '0'),
	('SELECT_SCAN', '69'),
	('SLAVE_HEARTBEAT_PERIOD', '0.000'),
	('SLAVE_OPEN_TEMP_TABLES', '0'),
	('SLAVE_RECEIVED_HEARTBEATS', '0'),
	('SLAVE_RETRIED_TRANSACTIONS', '0'),
	('SLAVE_RUNNING', 'OFF'),
	('SLOW_LAUNCH_THREADS', '0'),
	('SLOW_QUERIES', '62'),
	('SORT_MERGE_PASSES', '0'),
	('SORT_RANGE', '0'),
	('SORT_ROWS', '0'),
	('SORT_SCAN', '0'),
	('SSL_ACCEPT_RENEGOTIATES', '0'),
	('SSL_ACCEPTS', '0'),
	('SSL_CALLBACK_CACHE_HITS', '0'),
	('SSL_CIPHER', ''),
	('SSL_CIPHER_LIST', ''),
	('SSL_CLIENT_CONNECTS', '0'),
	('SSL_CONNECT_RENEGOTIATES', '0'),
	('SSL_CTX_VERIFY_DEPTH', '0'),
	('SSL_CTX_VERIFY_MODE', '0'),
	('SSL_DEFAULT_TIMEOUT', '0'),
	('SSL_FINISHED_ACCEPTS', '0'),
	('SSL_FINISHED_CONNECTS', '0'),
	('SSL_SESSION_CACHE_HITS', '0'),
	('SSL_SESSION_CACHE_MISSES', '0'),
	('SSL_SESSION_CACHE_MODE', 'NONE'),
	('SSL_SESSION_CACHE_OVERFLOWS', '0'),
	('SSL_SESSION_CACHE_SIZE', '0'),
	('SSL_SESSION_CACHE_TIMEOUTS', '0'),
	('SSL_SESSIONS_REUSED', '0'),
	('SSL_USED_SESSION_CACHE_ENTRIES', '0'),
	('SSL_VERIFY_DEPTH', '0'),
	('SSL_VERIFY_MODE', '0'),
	('SSL_VERSION', ''),
	('TABLE_LOCKS_IMMEDIATE', '36'),
	('TABLE_LOCKS_WAITED', '0'),
	('TC_LOG_MAX_PAGES_USED', '0'),
	('TC_LOG_PAGE_SIZE', '0'),
	('TC_LOG_PAGE_WAITS', '0'),
	('THREADS_CACHED', '0'),
	('THREADS_CONNECTED', '1'),
	('THREADS_CREATED', '1'),
	('THREADS_RUNNING', '1'),
	('UPTIME', '2529'),
	('UPTIME_SINCE_FLUSH_STATUS', '2529');
/*!40000 ALTER TABLE `SESSION_STATUS` ENABLE KEYS */;

-- Dumping structure for table information_schema.SESSION_VARIABLES
CREATE TEMPORARY TABLE IF NOT EXISTS `SESSION_VARIABLES` (
  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.SESSION_VARIABLES: -1 rows
/*!40000 ALTER TABLE `SESSION_VARIABLES` DISABLE KEYS */;
INSERT INTO `SESSION_VARIABLES` (`VARIABLE_NAME`, `VARIABLE_VALUE`) VALUES
	('MAX_PREPARED_STMT_COUNT', '16382'),
	('CHARACTER_SET_RESULTS', 'utf8'),
	('HAVE_CRYPT', 'NO'),
	('AUTO_INCREMENT_OFFSET', '1'),
	('MYISAM_REPAIR_THREADS', '1'),
	('AUTOMATIC_SP_PRIVILEGES', 'ON'),
	('FALCON_DEBUG_SERVER', 'OFF'),
	('BACK_LOG', '50'),
	('SYNC_RELAY_LOG', '0'),
	('PID_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\CPU0007.pid'),
	('TIMED_MUTEXES', 'OFF'),
	('SLOW_QUERY_LOG_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\CPU0007-slow.log'),
	('DELAYED_INSERT_TIMEOUT', '300'),
	('NET_WRITE_TIMEOUT', '60'),
	('QUERY_CACHE_WLOCK_INVALIDATE', 'OFF'),
	('AUTO_INCREMENT_INCREMENT', '1'),
	('OLD_PASSWORDS', 'OFF'),
	('CHARACTER_SETS_DIR', 'C:\\Program Files (x86)\\MySQL\\MySQL Server 6.0\\share\\charsets\\'),
	('FALCON_DEBUG_TRACE', '0'),
	('BINLOG_CACHE_SIZE', '32768'),
	('UPDATABLE_VIEWS_WITH_LIMIT', 'YES'),
	('LANGUAGE', 'C:\\Program Files (x86)\\MySQL\\MySQL Server 6.0\\share\\english\\'),
	('SLOW_LAUNCH_TIME', '2'),
	('CHARACTER_SET_SYSTEM', 'utf8'),
	('CHARACTER_SET_CLIENT', 'utf8'),
	('LOG_BACKUP_OUTPUT', 'TABLE'),
	('RELAY_LOG_INDEX', ''),
	('CHARACTER_SET_CONNECTION', 'utf8'),
	('SQL_QUOTE_SHOW_CREATE', 'ON'),
	('COMPLETION_TYPE', '0'),
	('SQL_LOG_UPDATE', 'ON'),
	('MAX_LENGTH_FOR_SORT_DATA', '1024'),
	('WAIT_TIMEOUT', '28800'),
	('EVENT_SCHEDULER', 'OFF'),
	('THREAD_HANDLING', 'one-thread-per-connection'),
	('COLLATION_DATABASE', 'utf8_general_ci'),
	('SSL_CAPATH', ''),
	('COLLATION_SERVER', 'utf8_general_ci'),
	('REPORT_HOST', ''),
	('DELAYED_INSERT_LIMIT', '100'),
	('MYISAM_SORT_BUFFER_SIZE', '188743680'),
	('DELAYED_QUEUE_SIZE', '1000'),
	('OPTIMIZER_PRUNE_LEVEL', '1'),
	('LARGE_PAGES', 'OFF'),
	('LARGE_FILES_SUPPORT', 'ON'),
	('FLUSH', 'OFF'),
	('FALCON_RECORD_SCAVENGE_FLOOR', '80'),
	('FT_QUERY_EXPANSION_LIMIT', '20'),
	('NET_BUFFER_LENGTH', '16384'),
	('INTERACTIVE_TIMEOUT', '28800'),
	('SKIP_SHOW_DATABASE', 'OFF'),
	('OPTIMIZER_USE_MRR', 'force'),
	('GROUP_CONCAT_MAX_LEN', '1024'),
	('CONCURRENT_INSERT', '1'),
	('RANGE_ALLOC_BLOCK_SIZE', '4096'),
	('KEY_CACHE_AGE_THRESHOLD', '300'),
	('SKIP_NETWORKING', 'OFF'),
	('MAX_CONNECT_ERRORS', '10'),
	('INNODB_LOG_FILE_SIZE', '10485760'),
	('DEADLOCK_TIMEOUT_SHORT', '10000'),
	('TRANSACTION_PREALLOC_SIZE', '4096'),
	('JOIN_BUFFER_SIZE', '131072'),
	('VERSION_COMPILE_OS', 'Win32'),
	('CONNECT_TIMEOUT', '10'),
	('FALCON_SERIAL_LOG_FILE_SIZE', '10485760'),
	('SQL_LOW_PRIORITY_UPDATES', 'OFF'),
	('LOW_PRIORITY_UPDATES', 'OFF'),
	('INIT_FILE', ''),
	('REPORT_PASSWORD', ''),
	('LARGE_PAGE_SIZE', '0'),
	('MAX_INSERT_DELAYED_THREADS', '20'),
	('INIT_SLAVE', ''),
	('MARIA_PAGE_CHECKSUM', 'ON'),
	('MAX_BINLOG_SIZE', '1073741824'),
	('TRANSACTION_ALLOC_BLOCK_SIZE', '8192'),
	('MAX_ERROR_COUNT', '64'),
	('FALCON_SERIAL_LOG_BUFFERS', '20'),
	('DEADLOCK_TIMEOUT_LONG', '50000000'),
	('INNODB_DOUBLEWRITE', 'ON'),
	('LOG_WARNINGS', '1'),
	('LOCAL_INFILE', 'ON'),
	('PSEUDO_THREAD_ID', '3'),
	('BACKUPDIR', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\'),
	('FT_MAX_WORD_LEN', '84'),
	('LOG_OUTPUT', 'NONE'),
	('LOWER_CASE_FILE_SYSTEM', 'ON'),
	('LOWER_CASE_TABLE_NAMES', '1'),
	('LOG_SLOW_QUERIES', 'OFF'),
	('FALCON_USE_DEFERRED_INDEX_HASH', 'OFF'),
	('FT_MIN_WORD_LEN', '4'),
	('HAVE_SYMLINK', 'YES'),
	('SHARED_MEMORY', 'OFF'),
	('TIME_ZONE', 'SYSTEM'),
	('DEADLOCK_SEARCH_DEPTH_SHORT', '4'),
	('INNODB_TABLE_LOCKS', 'ON'),
	('FT_BOOLEAN_SYNTAX', '+ -><()~*:""&|'),
	('MARIA_FORCE_START_AFTER_RECOVERY_FAILURES', '0'),
	('LOG_QUERIES_NOT_USING_INDEXES', 'OFF'),
	('MYISAM_DATA_POINTER_SIZE', '6'),
	('INNODB_ADDITIONAL_MEM_POOL_SIZE', '2097152'),
	('INNODB_THREAD_SLEEP_DELAY', '10000'),
	('FT_STOPWORD_FILE', '(built-in)'),
	('MARIA_RECOVER', 'OFF'),
	('DELAY_KEY_WRITE', 'ON'),
	('SLAVE_TRANSACTION_RETRIES', '10'),
	('SERVER_ID', '0'),
	('MARIA_REPAIR_THREADS', '1'),
	('SSL_CA', ''),
	('FALCON_IO_THREADS', '2'),
	('BULK_INSERT_BUFFER_SIZE', '8388608'),
	('SSL_CERT', ''),
	('SQL_MAX_JOIN_SIZE', '18446744073709551615'),
	('MARIA_STATS_METHOD', 'nulls_unequal'),
	('MYISAM_USE_MMAP', 'OFF'),
	('FALCON_DIRECT_IO', '1'),
	('QUERY_PREALLOC_SIZE', '8192'),
	('INNODB_ROLLBACK_ON_TIMEOUT', 'OFF'),
	('MIN_EXAMINED_ROW_LIMIT', '0'),
	('FALCON_USE_SECTORCACHE', 'OFF'),
	('CHARACTER_SET_FILESYSTEM', 'binary'),
	('FALCON_USE_SUPERNODES', 'ON'),
	('CHARACTER_SET_SERVER', 'utf8'),
	('READ_RND_BUFFER_SIZE', '262144'),
	('MAX_BINLOG_CACHE_SIZE', '4294963200'),
	('SECURE_AUTH', 'OFF'),
	('READ_BUFFER_SIZE', '65536'),
	('BIG_TABLES', 'OFF'),
	('MAX_CONNECTIONS', '100'),
	('SQL_SELECT_LIMIT', '18446744073709551615'),
	('HAVE_COMPRESS', 'YES'),
	('DATE_FORMAT', '%Y-%m-%d'),
	('FLUSH_TIME', '1800'),
	('FALCON_GOPHER_THREADS', '5'),
	('JOIN_CACHE_LEVEL', '1'),
	('RAND_SEED1', ''),
	('HAVE_PARTITIONING', 'YES'),
	('INNODB_DATA_FILE_PATH', 'ibdata1:10M:autoextend'),
	('MAX_SEEKS_FOR_KEY', '4294967295'),
	('QUERY_CACHE_LIMIT', '1048576'),
	('NET_RETRY_COUNT', '10'),
	('PROFILING', 'OFF'),
	('SLOW_QUERY_LOG', 'OFF'),
	('FALCON_SERIAL_LOG_PRIORITY', '1'),
	('QUERY_CACHE_SIZE', '0'),
	('KEY_CACHE_DIVISION_LIMIT', '100'),
	('LONG_QUERY_TIME', '0.000000'),
	('GENERAL_LOG_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\CPU0007.log'),
	('THREAD_STACK', '199680'),
	('FALCON_LARGE_BLOB_THRESHOLD', '160000'),
	('OPEN_FILES_LIMIT', '2670'),
	('FALCON_RECORD_SCAVENGE_THRESHOLD', '90'),
	('MAX_HEAP_TABLE_SIZE', '16777216'),
	('FALCON_LOCK_WAIT_TIMEOUT', '50'),
	('TABLE_LOCK_WAIT_TIMEOUT', '50'),
	('EXPIRE_LOGS_DAYS', '0'),
	('QUERY_ALLOC_BLOCK_SIZE', '8192'),
	('ARCHIVE_AIO', 'OFF'),
	('QUERY_CACHE_TYPE', 'ON'),
	('FOREIGN_KEY_CHECKS', 'ON'),
	('LOG_ERROR', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\CPU0007.err'),
	('RELAY_LOG_INFO_FILE', 'relay-log.info'),
	('SQL_MODE', ''),
	('MARIA_MAX_SORT_FILE_SIZE', '9223372036853727232'),
	('NEW', 'OFF'),
	('INNODB_COMMIT_CONCURRENCY', '0'),
	('BASEDIR', 'C:\\Program Files (x86)\\MySQL\\MySQL Server 6.0\\'),
	('INNODB_MIRRORED_LOG_GROUPS', '1'),
	('MYISAM_RECOVER_OPTIONS', 'OFF'),
	('FALCON_RECORD_MEMORY_MAX', '262144000'),
	('MYISAM_STATS_METHOD', 'nulls_unequal'),
	('VERSION', '6.0.10-alpha-community'),
	('SYSTEM_TIME_ZONE', 'Pacific Daylight Time'),
	('INNODB_SUPPORT_XA', 'ON'),
	('OLD_ALTER_TABLE', 'OFF'),
	('INNODB_SYNC_SPIN_LOOPS', '20'),
	('VERSION_COMMENT', 'MySQL Community Server (GPL)'),
	('MARIA_SYNC_LOG_DIR', 'NEWFILE'),
	('INIT_CONNECT', ''),
	('MARIA_BLOCK_SIZE', '8192'),
	('WARNING_COUNT', '0'),
	('INNODB_ADAPTIVE_HASH_INDEX', 'ON'),
	('AUTOCOMMIT', 'ON'),
	('FALCON_PAGE_CACHE_SIZE', '262144000'),
	('CHARACTER_SET_DATABASE', 'utf8'),
	('DIV_PRECISION_INCREMENT', '4'),
	('SLAVE_LOAD_TMPDIR', 'C:\\Windows\\SERVIC~2\\NETWOR~1\\AppData\\Local\\Temp'),
	('DATADIR', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\'),
	('VERSION_COMPILE_MACHINE', 'ia32'),
	('INNODB_DATA_HOME_DIR', ''),
	('TABLE_DEFINITION_CACHE', '256'),
	('FALCON_CHECKPOINT_SCHEDULE', '7 * * * * *'),
	('PROFILING_HISTORY_SIZE', '15'),
	('MARIA_PAGECACHE_BUFFER_SIZE', '8384512'),
	('INNODB_CONCURRENCY_TICKETS', '500'),
	('TIME_FORMAT', '%H:%i:%s'),
	('MAX_WRITE_LOCK_COUNT', '4294967295'),
	('INNODB_FORCE_RECOVERY', '0'),
	('LC_TIME_NAMES', 'en_US'),
	('INNODB_LOG_FILES_IN_GROUP', '2'),
	('KEEP_FILES_ON_CREATE', 'OFF'),
	('ERROR_COUNT', '0'),
	('LAST_INSERT_ID', '0'),
	('FALCON_SERIAL_LOG_BLOCK_SIZE', '0'),
	('SQL_BIG_TABLES', 'OFF'),
	('SYNC_BINLOG', '0'),
	('SQL_LOG_BIN', 'ON'),
	('FALCON_INDEX_CHILL_THRESHOLD', '4194304'),
	('MAX_SP_RECURSION_DEPTH', '0'),
	('INNODB_OPEN_FILES', '300'),
	('SQL_BIG_SELECTS', 'ON'),
	('OLD', 'OFF'),
	('LOG_BIN', 'OFF'),
	('INNODB_MAX_DIRTY_PAGES_PCT', '90'),
	('THREAD_CACHE_SIZE', '8'),
	('MARIA_CHECKPOINT_INTERVAL', '30'),
	('DISABLE_SLAVE_CONNECTIONS', 'OFF'),
	('MARIA_PAGECACHE_AGE_THRESHOLD', '300'),
	('MAX_USER_CONNECTIONS', '0'),
	('HAVE_NDBCLUSTER', 'NO'),
	('TABLE_OPEN_CACHE', '256'),
	('SECURE_FILE_PRIV', ''),
	('HAVE_COMMUNITY_FEATURES', 'YES'),
	('INNODB_LOG_GROUP_HOME_DIR', '.\\'),
	('REPORT_PORT', '3306'),
	('INNODB_FAST_SHUTDOWN', '1'),
	('LOG', 'OFF'),
	('BACKUP_PROGRESS_LOG_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\backup_progress.log'),
	('SQL_BUFFER_RESULT', 'OFF'),
	('INNODB_THREAD_CONCURRENCY', '17'),
	('KEY_CACHE_BLOCK_SIZE', '1024'),
	('SLAVE_NET_TIMEOUT', '3600'),
	('TMPDIR', 'C:\\Windows\\SERVIC~2\\NETWOR~1\\AppData\\Local\\Temp'),
	('INNODB_BUFFER_POOL_SIZE', '8388608'),
	('DEFAULT_WEEK_FORMAT', '0'),
	('SLAVE_ALLOW_BATCHING', 'OFF'),
	('MAX_TMP_TABLES', '32'),
	('FALCON_SUPPORT_XA', 'OFF'),
	('HAVE_CSV', 'YES'),
	('BINLOG_FORMAT', 'MIXED'),
	('SKIP_EXTERNAL_LOCKING', 'ON'),
	('MARIA_LOG_FILE_SIZE', '1073741824'),
	('PRELOAD_BUFFER_SIZE', '32768'),
	('SQL_WARNINGS', 'OFF'),
	('SLAVE_COMPRESSED_PROTOCOL', 'OFF'),
	('FALCON_CONSISTENT_READ', 'ON'),
	('HAVE_GEOMETRY', 'YES'),
	('MARIA_SORT_BUFFER_SIZE', '8388608'),
	('HOSTNAME', 'CPU0007'),
	('MAX_DELAYED_THREADS', '20'),
	('TX_ISOLATION', 'REPEATABLE-READ'),
	('MARIA_LOG_PURGE_TYPE', 'immediate'),
	('RELAY_LOG', ''),
	('MARIA_PAGECACHE_DIVISION_LIMIT', '100'),
	('PLUGIN_DIR', 'C:\\Program Files (x86)\\MySQL\\MySQL Server 6.0\\lib/plugin'),
	('INNODB_FILE_IO_THREADS', '4'),
	('IGNORE_BUILTIN_INNODB', 'OFF'),
	('LICENSE', 'GPL'),
	('NET_READ_TIMEOUT', '30'),
	('SQL_LOG_OFF', 'OFF'),
	('SYNC_FRM', 'ON'),
	('PORT', '3306'),
	('MAX_RELAY_LOG_SIZE', '0'),
	('FALCON_SERIAL_LOG_DIR', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\'),
	('BACKUP_PROGRESS_LOG', 'ON'),
	('LOG_BIN_TRUST_FUNCTION_CREATORS', 'OFF'),
	('MAX_ALLOWED_PACKET', '1048576'),
	('INNODB_FLUSH_METHOD', ''),
	('TMP_TABLE_SIZE', '95420416'),
	('HAVE_OPENSSL', 'DISABLED'),
	('INNODB_CHECKSUMS', 'ON'),
	('STORAGE_ENGINE', 'InnoDB'),
	('INNODB_LOCKS_UNSAFE_FOR_BINLOG', 'OFF'),
	('HAVE_SSL', 'DISABLED'),
	('SLAVE_EXEC_MODE', 'STRICT'),
	('IDENTITY', '0'),
	('LOG_SLAVE_UPDATES', 'OFF'),
	('MAX_JOIN_SIZE', '18446744073709551615'),
	('SORT_BUFFER_SIZE', '262144'),
	('INNODB_FILE_PER_TABLE', 'OFF'),
	('MAX_SORT_LENGTH', '1024'),
	('INNODB_LOCK_WAIT_TIMEOUT', '50'),
	('RAND_SEED2', ''),
	('SQL_SAFE_UPDATES', 'OFF'),
	('ENGINE_CONDITION_PUSHDOWN', 'ON'),
	('RPL_RECOVERY_RANK', '0'),
	('DATETIME_FORMAT', '%Y-%m-%d %H:%i:%s'),
	('COLLATION_CONNECTION', 'utf8_general_ci'),
	('BACKUP_WAIT_TIMEOUT', '50'),
	('OPTIMIZER_SWITCH', ''),
	('INNODB_STATS_ON_METADATA', 'ON'),
	('READ_ONLY', 'OFF'),
	('RELAY_LOG_SPACE_LIMIT', '0'),
	('GENERAL_LOG', 'OFF'),
	('HAVE_INNODB', 'YES'),
	('BACKUP_HISTORY_LOG_FILE', 'C:\\ProgramData\\MySQL\\MySQL Server 6.0\\Data\\backup_history.log'),
	('THREAD_POOL_SIZE', '20'),
	('SSL_KEY', ''),
	('FALCON_RECORD_CHILL_THRESHOLD', '5242880'),
	('DEADLOCK_SEARCH_DEPTH_LONG', '15'),
	('HAVE_DYNAMIC_LOADING', 'YES'),
	('SLAVE_SKIP_ERRORS', ''),
	('PROTOCOL_VERSION', '10'),
	('INSERT_ID', '0'),
	('HAVE_RTREE_KEYS', 'YES'),
	('RELAY_LOG_PURGE', 'ON'),
	('BACKUP_HISTORY_LOG', 'ON'),
	('FALCON_PAGE_SIZE', '4096'),
	('OPTIMIZER_SEARCH_DEPTH', '62'),
	('INNODB_FLUSH_LOG_AT_TRX_COMMIT', '1'),
	('UNIQUE_CHECKS', 'ON'),
	('INNODB_LOG_BUFFER_SIZE', '1048576'),
	('REPORT_USER', ''),
	('KEY_BUFFER_SIZE', '8388608'),
	('HAVE_QUERY_CACHE', 'YES'),
	('INNODB_MAX_PURGE_LAG', '0'),
	('INNODB_AUTOEXTEND_INCREMENT', '8'),
	('MYISAM_MAX_SORT_FILE_SIZE', '107374182400'),
	('SHARED_MEMORY_BASE_NAME', 'MYSQL'),
	('FALCON_CHECKSUMS', 'ON'),
	('INNODB_AUTOINC_LOCK_MODE', '1'),
	('SQL_NOTES', 'ON'),
	('SQL_SLAVE_SKIP_COUNTER', ''),
	('FALCON_SCAVENGE_SCHEDULE', '15,45 * * * * *'),
	('SQL_AUTO_IS_NULL', 'ON'),
	('SSL_CIPHER', ''),
	('TIMESTAMP', '1490985964'),
	('QUERY_CACHE_MIN_RES_UNIT', '4096'),
	('FALCON_DEBUG_MASK', '0');
/*!40000 ALTER TABLE `SESSION_VARIABLES` ENABLE KEYS */;

-- Dumping structure for table information_schema.STATISTICS
CREATE TEMPORARY TABLE IF NOT EXISTS `STATISTICS` (
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `NON_UNIQUE` bigint(1) NOT NULL DEFAULT '0',
  `INDEX_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `INDEX_NAME` varchar(64) NOT NULL DEFAULT '',
  `SEQ_IN_INDEX` bigint(2) NOT NULL DEFAULT '0',
  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',
  `COLLATION` varchar(1) DEFAULT NULL,
  `CARDINALITY` bigint(21) DEFAULT NULL,
  `SUB_PART` bigint(3) DEFAULT NULL,
  `PACKED` varchar(10) DEFAULT NULL,
  `NULLABLE` varchar(3) NOT NULL DEFAULT '',
  `INDEX_TYPE` varchar(16) NOT NULL DEFAULT '',
  `COMMENT` varchar(16) DEFAULT NULL,
  `INDEX_COMMENT` varchar(1024) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.STATISTICS: -1 rows
/*!40000 ALTER TABLE `STATISTICS` DISABLE KEYS */;
INSERT INTO `STATISTICS` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `NON_UNIQUE`, `INDEX_SCHEMA`, `INDEX_NAME`, `SEQ_IN_INDEX`, `COLUMN_NAME`, `COLLATION`, `CARDINALITY`, `SUB_PART`, `PACKED`, `NULLABLE`, `INDEX_TYPE`, `COMMENT`, `INDEX_COMMENT`) VALUES
	('def', 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 3, 'User', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 4, 'Table_name', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 5, 'Column_name', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'db', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'db', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'db', 0, 'mysql', 'PRIMARY', 3, 'User', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'db', 1, 'mysql', 'User', 1, 'User', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'event', 0, 'mysql', 'PRIMARY', 1, 'db', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'event', 0, 'mysql', 'PRIMARY', 2, 'name', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'func', 0, 'mysql', 'PRIMARY', 1, 'name', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'help_category', 0, 'mysql', 'PRIMARY', 1, 'help_category_id', 'A', 38, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'help_category', 0, 'mysql', 'name', 1, 'name', 'A', 38, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'help_keyword', 0, 'mysql', 'PRIMARY', 1, 'help_keyword_id', 'A', 459, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'help_keyword', 0, 'mysql', 'name', 1, 'name', 'A', 459, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'help_relation', 0, 'mysql', 'PRIMARY', 1, 'help_keyword_id', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'help_relation', 0, 'mysql', 'PRIMARY', 2, 'help_topic_id', 'A', 1001, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'help_topic', 0, 'mysql', 'PRIMARY', 1, 'help_topic_id', 'A', 502, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'help_topic', 0, 'mysql', 'name', 1, 'name', 'A', 502, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'host', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'host', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'ndb_binlog_index', 0, 'mysql', 'PRIMARY', 1, 'epoch', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'ndb_binlog_index', 0, 'mysql', 'PRIMARY', 2, 'orig_server_id', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'ndb_binlog_index', 0, 'mysql', 'PRIMARY', 3, 'orig_epoch', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'plugin', 0, 'mysql', 'PRIMARY', 1, 'name', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'proc', 0, 'mysql', 'PRIMARY', 1, 'db', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'proc', 0, 'mysql', 'PRIMARY', 2, 'name', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'proc', 0, 'mysql', 'PRIMARY', 3, 'type', 'A', 9, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 3, 'User', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 4, 'Routine_name', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 5, 'Routine_type', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'procs_priv', 1, 'mysql', 'Grantor', 1, 'Grantor', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'servers', 0, 'mysql', 'PRIMARY', 1, 'Server_name', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'tables_priv', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'tables_priv', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'tables_priv', 0, 'mysql', 'PRIMARY', 3, 'User', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'tables_priv', 0, 'mysql', 'PRIMARY', 4, 'Table_name', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'tables_priv', 1, 'mysql', 'Grantor', 1, 'Grantor', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'time_zone', 0, 'mysql', 'PRIMARY', 1, 'Time_zone_id', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'time_zone_leap_second', 0, 'mysql', 'PRIMARY', 1, 'Transition_time', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'time_zone_name', 0, 'mysql', 'PRIMARY', 1, 'Name', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'time_zone_transition', 0, 'mysql', 'PRIMARY', 1, 'Time_zone_id', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'time_zone_transition', 0, 'mysql', 'PRIMARY', 2, 'Transition_time', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'time_zone_transition_type', 0, 'mysql', 'PRIMARY', 1, 'Time_zone_id', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'time_zone_transition_type', 0, 'mysql', 'PRIMARY', 2, 'Transition_type_id', 'A', 0, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'user', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'mysql', 'user', 0, 'mysql', 'PRIMARY', 2, 'User', 'A', 2, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'etapas', 0, 'produccion', 'PRIMARY', 1, 'Id_Etapas', 'A', 3, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'evaluacion', 0, 'produccion', 'PRIMARY', 1, 'Id_Eval', 'A', 2, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'issue', 0, 'produccion', 'PRIMARY', 1, 'Id_Issue', 'A', 2, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'lote', 0, 'produccion', 'PRIMARY', 1, 'Id_Lote', 'A', 11, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'prod_etapa', 0, 'produccion', 'PRIMARY', 1, 'Id_PEtapa', 'A', 12, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'prod_eval', 0, 'produccion', 'PRIMARY', 1, 'Id_ProdEval', 'A', 2, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'prod_lote', 0, 'produccion', 'PRIMARY', 1, 'Id_ProdLote', 'A', 2, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'producto', 0, 'produccion', 'PRIMARY', 1, 'Id_Prod', 'A', 11, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'reposiciones', 0, 'produccion', 'PRIMARY', 1, 'Id_Reposicion', 'A', 10, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'result', 0, 'produccion', 'PRIMARY', 1, 'Id_Result', 'A', 2, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'produccion', 'usuario', 0, 'produccion', 'PRIMARY', 1, 'Id', 'A', 15, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'prueba', 'lote', 0, 'prueba', 'PRIMARY', 1, 'Id_Lote', 'A', 2, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'prueba', 'producto', 0, 'prueba', 'PRIMARY', 1, 'Id_Prod', 'A', 4, NULL, NULL, '', 'BTREE', '', ''),
	('def', 'prueba', 'usuario', 0, 'prueba', 'PRIMARY', 1, 'User_Id', 'A', 0, NULL, NULL, '', 'BTREE', '', '');
/*!40000 ALTER TABLE `STATISTICS` ENABLE KEYS */;

-- Dumping structure for table information_schema.TABLES
CREATE TEMPORARY TABLE IF NOT EXISTS `TABLES` (
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `TABLE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `ENGINE` varchar(64) DEFAULT NULL,
  `VERSION` bigint(21) unsigned DEFAULT NULL,
  `ROW_FORMAT` varchar(10) DEFAULT NULL,
  `TABLE_ROWS` bigint(21) unsigned DEFAULT NULL,
  `AVG_ROW_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `INDEX_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `DATA_FREE` bigint(21) unsigned DEFAULT NULL,
  `AUTO_INCREMENT` bigint(21) unsigned DEFAULT NULL,
  `CREATE_TIME` datetime DEFAULT NULL,
  `UPDATE_TIME` datetime DEFAULT NULL,
  `CHECK_TIME` datetime DEFAULT NULL,
  `TABLE_COLLATION` varchar(32) DEFAULT NULL,
  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,
  `CREATE_OPTIONS` varchar(255) DEFAULT NULL,
  `TABLE_COMMENT` varchar(2048) NOT NULL DEFAULT '',
  `TABLESPACE_NAME` varchar(64) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.TABLES: -1 rows
/*!40000 ALTER TABLE `TABLES` DISABLE KEYS */;
INSERT INTO `TABLES` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `TABLE_TYPE`, `ENGINE`, `VERSION`, `ROW_FORMAT`, `TABLE_ROWS`, `AVG_ROW_LENGTH`, `DATA_LENGTH`, `MAX_DATA_LENGTH`, `INDEX_LENGTH`, `DATA_FREE`, `AUTO_INCREMENT`, `CREATE_TIME`, `UPDATE_TIME`, `CHECK_TIME`, `TABLE_COLLATION`, `CHECKSUM`, `CREATE_OPTIONS`, `TABLE_COMMENT`, `TABLESPACE_NAME`) VALUES
	('def', 'information_schema', 'CHARACTER_SETS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 508, 0, 16646144, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=33026', '', NULL),
	('def', 'information_schema', 'COLLATIONS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 301, 0, 16611588, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=55738', '', NULL),
	('def', 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 259, 0, 16712493, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=64776', '', NULL),
	('def', 'information_schema', 'COLUMNS', 'SYSTEM VIEW', 'MARIA', 10, 'Page', NULL, 0, 8192, 137438945280, 8192, 0, NULL, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, 'utf8_general_ci', NULL, 'max_rows=11888', '', NULL),
	('def', 'information_schema', 'COLUMN_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3422, 0, 16764378, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=4902', '', NULL),
	('def', 'information_schema', 'ENGINES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 653, 0, 16700475, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=25692', '', NULL),
	('def', 'information_schema', 'EVENTS', 'SYSTEM VIEW', 'MARIA', 10, 'Page', NULL, 0, 8192, 137438945280, 8192, 0, NULL, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, 'utf8_general_ci', NULL, 'max_rows=2641', '', NULL),
	('def', 'information_schema', 'FILES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3502, 0, 16767576, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=4790', '', NULL),
	('def', 'information_schema', 'GLOBAL_STATUS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 4357, 0, 16761379, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=3850', '', NULL),
	('def', 'information_schema', 'GLOBAL_VARIABLES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 4357, 0, 16761379, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=3850', '', NULL),
	('def', 'information_schema', 'KEY_COLUMN_USAGE', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 6181, 0, 16769053, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=2714', '', NULL),
	('def', 'information_schema', 'PARAMETERS', 'SYSTEM VIEW', 'MARIA', 10, 'Page', NULL, 0, 8192, 137438945280, 8192, 0, NULL, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, 'utf8_general_ci', NULL, 'max_rows=25866', '', NULL),
	('def', 'information_schema', 'PARTITIONS', 'SYSTEM VIEW', 'MARIA', 10, 'Page', NULL, 0, 8192, 137438945280, 8192, 0, NULL, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, 'utf8_general_ci', NULL, 'max_rows=24199', '', NULL),
	('def', 'information_schema', 'PLUGINS', 'SYSTEM VIEW', 'MARIA', 10, 'Page', NULL, 0, 8192, 137438945280, 8192, 0, NULL, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, 'utf8_general_ci', NULL, 'max_rows=55638', '', NULL),
	('def', 'information_schema', 'PROCESSLIST', 'SYSTEM VIEW', 'MARIA', 10, 'Page', NULL, 0, 8192, 137438945280, 8192, 0, NULL, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, 'utf8_general_ci', NULL, 'max_rows=102272', '', NULL),
	('def', 'information_schema', 'PROFILING', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 388, 0, 16606012, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=43240', '', NULL),
	('def', 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 6423, 0, 16770453, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=2612', '', NULL),
	('def', 'information_schema', 'ROUTINES', 'SYSTEM VIEW', 'MARIA', 10, 'Page', NULL, 0, 8192, 137438945280, 8192, 0, NULL, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, 'utf8_general_ci', NULL, 'max_rows=2474', '', NULL),
	('def', 'information_schema', 'SCHEMATA', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 4617, 0, 16764327, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=3633', '', NULL),
	('def', 'information_schema', 'SCHEMA_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 2906, 0, 16764714, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=5773', '', NULL),
	('def', 'information_schema', 'SESSION_STATUS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 4357, 0, 16761379, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=3850', '', NULL),
	('def', 'information_schema', 'SESSION_VARIABLES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 4357, 0, 16761379, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=3850', '', NULL),
	('def', 'information_schema', 'STATISTICS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 7660, 0, 16767740, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=2190', '', NULL),
	('def', 'information_schema', 'TABLES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 12825, 0, 16762275, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=1308', '', NULL),
	('def', 'information_schema', 'TABLESPACES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 9259, 0, 16768049, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=1811', '', NULL),
	('def', 'information_schema', 'TABLE_CONSTRAINTS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3341, 0, 16761797, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=5021', '', NULL),
	('def', 'information_schema', 'TABLE_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3164, 0, 16753380, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=5302', '', NULL),
	('def', 'information_schema', 'TRIGGERS', 'SYSTEM VIEW', 'MARIA', 10, 'Page', NULL, 0, 8192, 137438945280, 8192, 0, NULL, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, 'utf8_general_ci', NULL, 'max_rows=2429', '', NULL),
	('def', 'information_schema', 'USER_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 2648, 0, 16751248, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=6335', '', NULL),
	('def', 'information_schema', 'VIEWS', 'SYSTEM VIEW', 'MARIA', 10, 'Page', NULL, 0, 8192, 137438945280, 8192, 0, NULL, '2017-03-31 11:46:04', '2017-03-31 11:46:04', NULL, 'utf8_general_ci', NULL, 'max_rows=29624', '', NULL),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_SUMMARY', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 33, 0, 15379089, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=508400', '', NULL),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_DETAIL', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 503, 0, 16743864, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=33354', '', NULL),
	('def', 'information_schema', 'FALCON_TABLESPACE_IO', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 507, 0, 16744182, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=33091', '', NULL),
	('def', 'information_schema', 'FALCON_SYSTEM_MEMORY_SUMMARY', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 33, 0, 15379089, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=508400', '', NULL),
	('def', 'information_schema', 'FALCON_VERSION', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 259, 0, 16712493, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=64776', '', NULL),
	('def', 'information_schema', 'FALCON_TRANSACTION_SUMMARY', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 21, 0, 14680050, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=798915', '', NULL),
	('def', 'information_schema', 'FALCON_SERIAL_LOG_INFO', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 21, 0, 14680050, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=798915', '', NULL),
	('def', 'information_schema', 'FALCON_SYNCOBJECTS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 499, 0, 16743446, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=33621', '', NULL),
	('def', 'information_schema', 'FALCON_TRANSACTIONS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 997, 0, 16726669, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=16827', '', NULL),
	('def', 'information_schema', 'FALCON_RECORD_CACHE_DETAIL', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 503, 0, 16743864, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=33354', '', NULL),
	('def', 'mysql', 'backup_history', 'BASE TABLE', 'CSV', 10, 'Dynamic', 2, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'mysql', 'backup_progress', 'BASE TABLE', 'CSV', 10, 'Fixed', 2, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'mysql', 'columns_priv', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 303430024894087167, 8192, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, 'utf8_bin', NULL, '', 'Column privileges', NULL),
	('def', 'mysql', 'db', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 1160, 163255486492180479, 8192, 1160, NULL, '2009-03-03 15:26:34', '2017-02-02 17:17:47', '2009-03-03 15:26:36', 'utf8_bin', NULL, '', 'Database privileges', NULL),
	('def', 'mysql', 'event', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 0, 0, 0, 281474976710655, 4096, 0, NULL, '2009-03-03 15:26:36', '2009-03-04 01:26:36', NULL, 'utf8_general_ci', NULL, '', 'Events', NULL),
	('def', 'mysql', 'func', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 217017207043915775, 2048, 0, NULL, '2009-03-03 15:26:34', '2009-03-04 01:26:34', NULL, 'utf8_bin', NULL, '', 'User defined functions', NULL),
	('def', 'mysql', 'general_log', 'BASE TABLE', 'CSV', 10, 'Dynamic', 2, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, '', 'General log', NULL),
	('def', 'mysql', 'help_category', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 38, 773, 29374, 217580156997337087, 5120, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:38', NULL, 'utf8_general_ci', NULL, '', 'help categories', NULL),
	('def', 'mysql', 'help_keyword', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 459, 261, 119799, 73464968921481215, 18432, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:38', NULL, 'utf8_general_ci', NULL, '', 'help keywords', NULL),
	('def', 'mysql', 'help_relation', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 1001, 9, 9009, 2533274790395903, 17408, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:38', NULL, 'utf8_general_ci', NULL, '', 'keyword-topic relation', NULL),
	('def', 'mysql', 'help_topic', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 502, 812, 408052, 281474976710655, 18432, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:38', NULL, 'utf8_general_ci', NULL, '', 'help topics', NULL),
	('def', 'mysql', 'host', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 144959613005987839, 4096, 0, NULL, '2009-03-03 15:26:34', '2009-03-04 01:26:34', NULL, 'utf8_bin', NULL, '', 'Host privileges;  Merged with database privileges', NULL),
	('def', 'mysql', 'ndb_binlog_index', 'BASE TABLE', 'MARIA', 10, 'Page', 0, 0, 8192, 137438945280, 8192, 0, NULL, '2009-03-03 15:26:36', '2009-03-04 01:26:36', NULL, 'latin1_swedish_ci', NULL, '', '', NULL),
	('def', 'mysql', 'plugin', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 216454257090494463, 2048, 0, NULL, '2009-03-03 15:26:34', '2009-03-04 01:26:34', NULL, 'utf8_bin', NULL, '', 'MySQL plugins', NULL),
	('def', 'mysql', 'proc', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 9, 389, 3888, 281474976710655, 7168, 384, NULL, '2009-03-03 15:26:35', '2017-03-16 11:00:22', NULL, 'utf8_general_ci', NULL, '', 'Stored Procedures', NULL),
	('def', 'mysql', 'procs_priv', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 318348198659751935, 4096, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, 'utf8_bin', NULL, '', 'Procedure privileges', NULL),
	('def', 'mysql', 'servers', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 577868127186976767, 2048, 0, NULL, '2009-03-03 15:26:34', '2009-03-04 01:26:34', NULL, 'utf8_general_ci', NULL, '', 'MySQL Foreign Servers table', NULL),
	('def', 'mysql', 'slow_log', 'BASE TABLE', 'CSV', 10, 'Dynamic', 2, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, '', 'Slow log', NULL),
	('def', 'mysql', 'tables_priv', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 318629673636462591, 4096, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, 'utf8_bin', NULL, '', 'Table privileges', NULL),
	('def', 'mysql', 'time_zone', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 1970324836974591, 1024, 0, 1, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, 'utf8_general_ci', NULL, '', 'Time zones', NULL),
	('def', 'mysql', 'time_zone_leap_second', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 3659174697238527, 1024, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, 'utf8_general_ci', NULL, '', 'Leap seconds information for time zones', NULL),
	('def', 'mysql', 'time_zone_name', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 73464968921481215, 2048, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, 'utf8_general_ci', NULL, '', 'Time zone names', NULL),
	('def', 'mysql', 'time_zone_transition', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 4785074604081151, 1024, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, 'utf8_general_ci', NULL, '', 'Time zone transitions', NULL),
	('def', 'mysql', 'time_zone_transition_type', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 12947848928690175, 1024, 0, NULL, '2009-03-03 15:26:35', '2009-03-04 01:26:36', NULL, 'utf8_general_ci', NULL, '', 'Time zone transition types', NULL),
	('def', 'mysql', 'user', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 2, 104, 256, 281474976710655, 4096, 48, NULL, '2009-03-03 15:26:34', '2017-02-02 17:17:47', NULL, 'utf8_bin', NULL, '', 'Users and global privileges', NULL),
	('def', 'produccion', 'etapas', 'BASE TABLE', 'InnoDB', 10, 'Compact', 3, 5461, 16384, 0, 0, 3145728, 4, '2017-02-02 17:34:22', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'evaluacion', 'BASE TABLE', 'InnoDB', 10, 'Compact', 2, 8192, 16384, 0, 0, 3145728, 3, '2017-02-02 17:41:39', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'issue', 'BASE TABLE', 'InnoDB', 10, 'Compact', 2, 8192, 16384, 0, 0, 3145728, 3, '2017-02-02 17:56:19', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'lote', 'BASE TABLE', 'InnoDB', 10, 'Compact', 11, 1489, 16384, 0, 0, 3145728, 21, '2017-02-02 17:31:13', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'prod_etapa', 'BASE TABLE', 'InnoDB', 10, 'Compact', 12, 1365, 16384, 0, 0, 3145728, 20, '2017-02-02 18:27:31', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'prod_eval', 'BASE TABLE', 'InnoDB', 10, 'Compact', 2, 8192, 16384, 0, 0, 3145728, 3, '2017-02-02 18:04:24', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'prod_lote', 'BASE TABLE', 'InnoDB', 10, 'Compact', 2, 8192, 16384, 0, 0, 3145728, 3, '2017-02-02 18:19:05', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'producto', 'BASE TABLE', 'InnoDB', 10, 'Compact', 11, 1489, 16384, 0, 0, 3145728, 17, '2017-02-02 17:24:24', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'reposiciones', 'BASE TABLE', 'InnoDB', 10, 'Compact', 10, 1638, 16384, 0, 0, 3145728, 39, '2017-03-08 11:30:29', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'result', 'BASE TABLE', 'InnoDB', 10, 'Compact', 2, 8192, 16384, 0, 0, 3145728, 3, '2017-02-02 18:05:12', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'produccion', 'usuario', 'BASE TABLE', 'InnoDB', 10, 'Compact', 15, 1092, 16384, 0, 0, 3145728, 17, '2017-02-28 10:50:42', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'prueba', 'lote', 'BASE TABLE', 'InnoDB', 10, 'Compact', 2, 8192, 16384, 0, 0, 3145728, 3, '2017-02-14 17:36:00', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'prueba', 'producto', 'BASE TABLE', 'InnoDB', 10, 'Compact', 4, 4096, 16384, 0, 0, 3145728, 1905, '2017-02-14 17:35:03', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL),
	('def', 'prueba', 'usuario', 'BASE TABLE', 'InnoDB', 10, 'Compact', 0, 0, 16384, 0, 0, 3145728, NULL, '2017-02-14 17:32:28', NULL, NULL, 'utf8_general_ci', NULL, '', '', NULL);
/*!40000 ALTER TABLE `TABLES` ENABLE KEYS */;

-- Dumping structure for table information_schema.TABLESPACES
CREATE TEMPORARY TABLE IF NOT EXISTS `TABLESPACES` (
  `TABLESPACE_NAME` varchar(64) NOT NULL DEFAULT '',
  `ENGINE` varchar(64) NOT NULL DEFAULT '',
  `TABLESPACE_TYPE` varchar(64) DEFAULT NULL,
  `LOGFILE_GROUP_NAME` varchar(64) DEFAULT NULL,
  `EXTENT_SIZE` bigint(21) unsigned DEFAULT NULL,
  `AUTOEXTEND_SIZE` bigint(21) unsigned DEFAULT NULL,
  `MAXIMUM_SIZE` bigint(21) unsigned DEFAULT NULL,
  `NODEGROUP_ID` bigint(21) unsigned DEFAULT NULL,
  `TABLESPACE_COMMENT` varchar(2048) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.TABLESPACES: -1 rows
/*!40000 ALTER TABLE `TABLESPACES` DISABLE KEYS */;
INSERT INTO `TABLESPACES` (`TABLESPACE_NAME`, `ENGINE`, `TABLESPACE_TYPE`, `LOGFILE_GROUP_NAME`, `EXTENT_SIZE`, `AUTOEXTEND_SIZE`, `MAXIMUM_SIZE`, `NODEGROUP_ID`, `TABLESPACE_COMMENT`) VALUES
	('FALCON_USER', 'Falcon', 'DEFAULT', NULL, NULL, NULL, NULL, NULL, ''),
	('FALCON_TEMPORARY', 'Falcon', 'TEMPORARY', NULL, NULL, NULL, NULL, NULL, '');
/*!40000 ALTER TABLE `TABLESPACES` ENABLE KEYS */;

-- Dumping structure for table information_schema.TABLE_CONSTRAINTS
CREATE TEMPORARY TABLE IF NOT EXISTS `TABLE_CONSTRAINTS` (
  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `CONSTRAINT_TYPE` varchar(64) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.TABLE_CONSTRAINTS: -1 rows
/*!40000 ALTER TABLE `TABLE_CONSTRAINTS` DISABLE KEYS */;
INSERT INTO `TABLE_CONSTRAINTS` (`CONSTRAINT_CATALOG`, `CONSTRAINT_SCHEMA`, `CONSTRAINT_NAME`, `TABLE_SCHEMA`, `TABLE_NAME`, `CONSTRAINT_TYPE`) VALUES
	('def', 'mysql', 'PRIMARY', 'mysql', 'columns_priv', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'db', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'event', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'func', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'help_category', 'PRIMARY KEY'),
	('def', 'mysql', 'name', 'mysql', 'help_category', 'UNIQUE'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'help_keyword', 'PRIMARY KEY'),
	('def', 'mysql', 'name', 'mysql', 'help_keyword', 'UNIQUE'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'help_relation', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'help_topic', 'PRIMARY KEY'),
	('def', 'mysql', 'name', 'mysql', 'help_topic', 'UNIQUE'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'host', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'ndb_binlog_index', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'plugin', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'proc', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'procs_priv', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'servers', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'tables_priv', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'time_zone', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'time_zone_leap_second', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'time_zone_name', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'time_zone_transition', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'time_zone_transition_type', 'PRIMARY KEY'),
	('def', 'mysql', 'PRIMARY', 'mysql', 'user', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'etapas', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'evaluacion', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'issue', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'lote', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'prod_etapa', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'prod_eval', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'prod_lote', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'producto', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'reposiciones', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'result', 'PRIMARY KEY'),
	('def', 'produccion', 'PRIMARY', 'produccion', 'usuario', 'PRIMARY KEY'),
	('def', 'prueba', 'PRIMARY', 'prueba', 'lote', 'PRIMARY KEY'),
	('def', 'prueba', 'PRIMARY', 'prueba', 'producto', 'PRIMARY KEY'),
	('def', 'prueba', 'PRIMARY', 'prueba', 'usuario', 'PRIMARY KEY');
/*!40000 ALTER TABLE `TABLE_CONSTRAINTS` ENABLE KEYS */;

-- Dumping structure for table information_schema.TABLE_PRIVILEGES
CREATE TEMPORARY TABLE IF NOT EXISTS `TABLE_PRIVILEGES` (
  `GRANTEE` varchar(81) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.TABLE_PRIVILEGES: -1 rows
/*!40000 ALTER TABLE `TABLE_PRIVILEGES` DISABLE KEYS */;
/*!40000 ALTER TABLE `TABLE_PRIVILEGES` ENABLE KEYS */;

-- Dumping structure for table information_schema.TRIGGERS
CREATE TEMPORARY TABLE IF NOT EXISTS `TRIGGERS` (
  `TRIGGER_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TRIGGER_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TRIGGER_NAME` varchar(64) NOT NULL DEFAULT '',
  `EVENT_MANIPULATION` varchar(6) NOT NULL DEFAULT '',
  `EVENT_OBJECT_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `EVENT_OBJECT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `EVENT_OBJECT_TABLE` varchar(64) NOT NULL DEFAULT '',
  `ACTION_ORDER` bigint(4) NOT NULL DEFAULT '0',
  `ACTION_CONDITION` longtext,
  `ACTION_STATEMENT` longtext NOT NULL,
  `ACTION_ORIENTATION` varchar(9) NOT NULL DEFAULT '',
  `ACTION_TIMING` varchar(6) NOT NULL DEFAULT '',
  `ACTION_REFERENCE_OLD_TABLE` varchar(64) DEFAULT NULL,
  `ACTION_REFERENCE_NEW_TABLE` varchar(64) DEFAULT NULL,
  `ACTION_REFERENCE_OLD_ROW` varchar(3) NOT NULL DEFAULT '',
  `ACTION_REFERENCE_NEW_ROW` varchar(3) NOT NULL DEFAULT '',
  `CREATED` datetime DEFAULT NULL,
  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',
  `DEFINER` varchar(77) NOT NULL DEFAULT '',
  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',
  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',
  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''
) ENGINE=MARIA DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- Dumping data for table information_schema.TRIGGERS: -1 rows
/*!40000 ALTER TABLE `TRIGGERS` DISABLE KEYS */;
/*!40000 ALTER TABLE `TRIGGERS` ENABLE KEYS */;

-- Dumping structure for table information_schema.USER_PRIVILEGES
CREATE TEMPORARY TABLE IF NOT EXISTS `USER_PRIVILEGES` (
  `GRANTEE` varchar(81) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- Dumping data for table information_schema.USER_PRIVILEGES: -1 rows
/*!40000 ALTER TABLE `USER_PRIVILEGES` DISABLE KEYS */;
INSERT INTO `USER_PRIVILEGES` (`GRANTEE`, `TABLE_CATALOG`, `PRIVILEGE_TYPE`, `IS_GRANTABLE`) VALUES
	('\'root\'@\'localhost\'', 'def', 'SELECT', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'INSERT', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'UPDATE', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'DELETE', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'CREATE', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'DROP', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'RELOAD', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'SHUTDOWN', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'PROCESS', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'FILE', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'REFERENCES', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'INDEX', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'ALTER', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'SHOW DATABASES', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'SUPER', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'CREATE TEMPORARY TABLES', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'LOCK TABLES', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'EXECUTE', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'REPLICATION SLAVE', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'REPLICATION CLIENT', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'CREATE VIEW', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'SHOW VIEW', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'CREATE ROUTINE', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'ALTER ROUTINE', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'CREATE USER', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'EVENT', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'TRIGGER', 'YES'),
	('\'root\'@\'localhost\'', 'def', 'CREATE TABLESPACE', 'YES'),
	('\'root\'@\'%\'', 'def', 'SELECT', 'YES'),
	('\'root\'@\'%\'', 'def', 'INSERT', 'YES'),
	('\'root\'@\'%\'', 'def', 'UPDATE', 'YES'),
	('\'root\'@\'%\'', 'def', 'DELETE', 'YES'),
	('\'root\'@\'%\'', 'def', 'CREATE', 'YES'),
	('\'root\'@\'%\'', 'def', 'DROP', 'YES'),
	('\'root\'@\'%\'', 'def', 'RELOAD', 'YES'),
	('\'root\'@\'%\'', 'def', 'SHUTDOWN', 'YES'),
	('\'root\'@\'%\'', 'def', 'PROCESS', 'YES'),
	('\'root\'@\'%\'', 'def', 'FILE', 'YES'),
	('\'root\'@\'%\'', 'def', 'REFERENCES', 'YES'),
	('\'root\'@\'%\'', 'def', 'INDEX', 'YES'),
	('\'root\'@\'%\'', 'def', 'ALTER', 'YES'),
	('\'root\'@\'%\'', 'def', 'SHOW DATABASES', 'YES'),
	('\'root\'@\'%\'', 'def', 'SUPER', 'YES'),
	('\'root\'@\'%\'', 'def', 'CREATE TEMPORARY TABLES', 'YES'),
	('\'root\'@\'%\'', 'def', 'LOCK TABLES', 'YES'),
	('\'root\'@\'%\'', 'def', 'EXECUTE', 'YES'),
	('\'root\'@\'%\'', 'def', 'REPLICATION SLAVE', 'YES'),
	('\'root\'@\'%\'', 'def', 'REPLICATION CLIENT', 'YES'),
	('\'root\'@\'%\'', 'def', 'CREATE VIEW', 'YES'),
	('\'root\'@\'%\'', 'def', 'SHOW VIEW', 'YES'),
	('\'root\'@\'%\'', 'def', 'CREATE ROUTINE', 'YES'),
	('\'root\'@\'%\'', 'def', 'ALTER ROUTINE', 'YES'),
	('\'root\'@\'%\'', 'def', 'CREATE USER', 'YES');
/*!40000 ALTER TABLE `USER_PRIVILEGES` ENABLE KEYS */;

-- Dumping structure for table information_schema.VIEWS
CREATE TEMPORARY TABLE IF NOT EXISTS `VIEWS` (
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VIEW_DEFINITION` longtext NOT NULL,
  `CHECK_OPTION` varchar(8) NOT NULL DEFAULT '',
  `IS_UPDATABLE` varchar(3) NOT NULL DEFAULT '',
  `DEFINER` varchar(77) NOT NULL DEFAULT '',
  `SECURITY_TYPE` varchar(7) NOT NULL DEFAULT '',
  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',
  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT ''
) ENGINE=MARIA DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- Dumping data for table information_schema.VIEWS: -1 rows
/*!40000 ALTER TABLE `VIEWS` DISABLE KEYS */;
/*!40000 ALTER TABLE `VIEWS` ENABLE KEYS */;


-- Dumping database structure for mysql
CREATE DATABASE IF NOT EXISTS `mysql` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `mysql`;

-- Dumping structure for table mysql.backup_history
CREATE TABLE IF NOT EXISTS `backup_history` (
  `backup_id` bigint(20) unsigned NOT NULL COMMENT 'Surrogate key for (near) duplicate entries',
  `process_id` int(10) unsigned NOT NULL COMMENT 'The process id that operation ran as',
  `binlog_pos` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The recorded binlog position of backup/restore',
  `binlog_file` char(64) NOT NULL DEFAULT '' COMMENT 'The recorded binlog filename at time of backup/restore',
  `backup_state` enum('complete','starting','validity point','running','error','cancel') NOT NULL COMMENT 'Status of current operation',
  `operation` enum('backup','restore') NOT NULL COMMENT 'Type of operation',
  `error_num` int(11) NOT NULL DEFAULT '0' COMMENT 'The error from this run 0 == none',
  `num_objects` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The number of objects in the backup',
  `total_bytes` bigint(20) unsigned NOT NULL DEFAULT '0' COMMENT 'The size of the backup repository in bytes',
  `validity_point_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The time of the validity point.',
  `start_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The date/time of start of operation',
  `stop_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The date/time of end of operation',
  `host_or_server_name` char(30) NOT NULL DEFAULT '' COMMENT 'The server name where operation ran',
  `username` char(30) NOT NULL DEFAULT '' COMMENT 'The user name who ran the operation',
  `backup_file` char(100) NOT NULL DEFAULT '' COMMENT 'The name of the file',
  `backup_file_path` varchar(512) NOT NULL DEFAULT '' COMMENT 'The full path to the backup image file',
  `user_comment` varchar(200) NOT NULL DEFAULT '' COMMENT 'The comment from user entered at command line',
  `command` varchar(512) NOT NULL DEFAULT '' COMMENT 'The command used to issue operation',
  `drivers` varchar(100) NOT NULL DEFAULT '' COMMENT 'The name of the storage engines used in the operation'
) ENGINE=CSV DEFAULT CHARSET=utf8;

-- Dumping data for table mysql.backup_history: 2 rows
/*!40000 ALTER TABLE `backup_history` DISABLE KEYS */;
/*!40000 ALTER TABLE `backup_history` ENABLE KEYS */;

-- Dumping structure for table mysql.backup_progress
CREATE TABLE IF NOT EXISTS `backup_progress` (
  `backup_id` bigint(20) unsigned NOT NULL COMMENT 'Key for backup_history table entries',
  `object` char(30) NOT NULL DEFAULT '' COMMENT 'The object being operated on',
  `start_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The date/time of start of operation',
  `stop_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The date/time of end of operation',
  `total_bytes` bigint(20) NOT NULL DEFAULT '0' COMMENT 'The size of the object in bytes',
  `progress` bigint(20) unsigned NOT NULL DEFAULT '0' COMMENT 'The number of bytes processed',
  `error_num` int(11) NOT NULL DEFAULT '0' COMMENT 'The error from this run 0 == none',
  `notes` char(100) NOT NULL DEFAULT '' COMMENT 'Commentary from the backup engine'
) ENGINE=CSV DEFAULT CHARSET=utf8;

-- Dumping data for table mysql.backup_progress: 2 rows
/*!40000 ALTER TABLE `backup_progress` DISABLE KEYS */;
/*!40000 ALTER TABLE `backup_progress` ENABLE KEYS */;

-- Dumping structure for table mysql.columns_priv
CREATE TABLE IF NOT EXISTS `columns_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Column_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`,`Column_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Column privileges';

-- Dumping data for table mysql.columns_priv: 0 rows
/*!40000 ALTER TABLE `columns_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `columns_priv` ENABLE KEYS */;

-- Dumping structure for table mysql.db
CREATE TABLE IF NOT EXISTS `db` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`Db`,`User`),
  KEY `User` (`User`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Database privileges';

-- Dumping data for table mysql.db: 0 rows
/*!40000 ALTER TABLE `db` DISABLE KEYS */;
/*!40000 ALTER TABLE `db` ENABLE KEYS */;

-- Dumping structure for table mysql.event
CREATE TABLE IF NOT EXISTS `event` (
  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `body` longblob NOT NULL,
  `definer` char(77) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `execute_at` datetime DEFAULT NULL,
  `interval_value` int(11) DEFAULT NULL,
  `interval_field` enum('YEAR','QUARTER','MONTH','DAY','HOUR','MINUTE','WEEK','SECOND','MICROSECOND','YEAR_MONTH','DAY_HOUR','DAY_MINUTE','DAY_SECOND','HOUR_MINUTE','HOUR_SECOND','MINUTE_SECOND','DAY_MICROSECOND','HOUR_MICROSECOND','MINUTE_MICROSECOND','SECOND_MICROSECOND') DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `last_executed` datetime DEFAULT NULL,
  `starts` datetime DEFAULT NULL,
  `ends` datetime DEFAULT NULL,
  `status` enum('ENABLED','DISABLED','SLAVESIDE_DISABLED') NOT NULL DEFAULT 'ENABLED',
  `on_completion` enum('DROP','PRESERVE') NOT NULL DEFAULT 'DROP',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','NOT_USED','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH') NOT NULL DEFAULT '',
  `comment` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `originator` int(10) NOT NULL,
  `time_zone` char(64) CHARACTER SET latin1 NOT NULL DEFAULT 'SYSTEM',
  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `body_utf8` longblob,
  PRIMARY KEY (`db`,`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Events';

-- Dumping data for table mysql.event: 0 rows
/*!40000 ALTER TABLE `event` DISABLE KEYS */;
/*!40000 ALTER TABLE `event` ENABLE KEYS */;

-- Dumping structure for table mysql.func
CREATE TABLE IF NOT EXISTS `func` (
  `name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `ret` tinyint(1) NOT NULL DEFAULT '0',
  `dl` char(128) COLLATE utf8_bin NOT NULL DEFAULT '',
  `type` enum('function','aggregate') CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='User defined functions';

-- Dumping data for table mysql.func: 0 rows
/*!40000 ALTER TABLE `func` DISABLE KEYS */;
/*!40000 ALTER TABLE `func` ENABLE KEYS */;

-- Dumping structure for table mysql.general_log
CREATE TABLE IF NOT EXISTS `general_log` (
  `event_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_host` mediumtext NOT NULL,
  `thread_id` int(11) NOT NULL,
  `server_id` int(11) NOT NULL,
  `command_type` varchar(64) NOT NULL,
  `argument` mediumtext NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='General log';

-- Dumping data for table mysql.general_log: 2 rows
/*!40000 ALTER TABLE `general_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `general_log` ENABLE KEYS */;

-- Dumping structure for table mysql.help_category
CREATE TABLE IF NOT EXISTS `help_category` (
  `help_category_id` smallint(5) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `parent_category_id` smallint(5) unsigned DEFAULT NULL,
  `url` char(128) NOT NULL,
  PRIMARY KEY (`help_category_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='help categories';

-- Dumping data for table mysql.help_category: 38 rows
/*!40000 ALTER TABLE `help_category` DISABLE KEYS */;
INSERT INTO `help_category` (`help_category_id`, `name`, `parent_category_id`, `url`) VALUES
	(1, 'Geographic', 0, ''),
	(2, 'Polygon properties', 33, ''),
	(3, 'WKT', 33, ''),
	(4, 'Numeric Functions', 37, ''),
	(5, 'Plugins', 34, ''),
	(6, 'MBR', 33, ''),
	(7, 'Control flow functions', 37, ''),
	(8, 'Transactions', 34, ''),
	(9, 'Account Management', 34, ''),
	(10, 'Point properties', 33, ''),
	(11, 'Encryption Functions', 37, ''),
	(12, 'LineString properties', 33, ''),
	(13, 'Logical operators', 37, ''),
	(14, 'Miscellaneous Functions', 37, ''),
	(15, 'Information Functions', 37, ''),
	(16, 'Functions and Modifiers for Use with GROUP BY', 34, ''),
	(17, 'Comparison operators', 37, ''),
	(18, 'Bit Functions', 37, ''),
	(19, 'Backup and Restore', 34, ''),
	(20, 'Table Maintenance', 34, ''),
	(21, 'User-Defined Functions', 34, ''),
	(22, 'Data Types', 34, ''),
	(23, 'Compound Statements', 34, ''),
	(24, 'Geometry constructors', 33, ''),
	(25, 'GeometryCollection properties', 1, ''),
	(26, 'Administration', 34, ''),
	(27, 'Data Manipulation', 34, ''),
	(28, 'Utility', 34, ''),
	(29, 'Language Structure', 34, ''),
	(30, 'Geometry relations', 33, ''),
	(31, 'Date and Time Functions', 37, ''),
	(32, 'WKB', 33, ''),
	(33, 'Geographic Features', 34, ''),
	(34, 'Contents', 0, ''),
	(35, 'Geometry properties', 33, ''),
	(36, 'String Functions', 37, ''),
	(37, 'Functions', 34, ''),
	(38, 'Data Definition', 34, '');
/*!40000 ALTER TABLE `help_category` ENABLE KEYS */;

-- Dumping structure for table mysql.help_keyword
CREATE TABLE IF NOT EXISTS `help_keyword` (
  `help_keyword_id` int(10) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  PRIMARY KEY (`help_keyword_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='help keywords';

-- Dumping data for table mysql.help_keyword: 459 rows
/*!40000 ALTER TABLE `help_keyword` DISABLE KEYS */;
INSERT INTO `help_keyword` (`help_keyword_id`, `name`) VALUES
	(0, 'JOIN'),
	(1, 'HOST'),
	(2, 'REPEAT'),
	(3, 'SERIALIZABLE'),
	(4, 'REPLACE'),
	(5, 'AT'),
	(6, 'SCHEDULE'),
	(7, 'RETURNS'),
	(8, 'STARTS'),
	(9, 'MASTER_SSL_CA'),
	(10, 'NCHAR'),
	(11, 'COLUMNS'),
	(12, 'COMPLETION'),
	(13, 'WORK'),
	(14, 'DATETIME'),
	(15, 'MODE'),
	(16, 'OPEN'),
	(17, 'INTEGER'),
	(18, 'ESCAPE'),
	(19, 'VALUE'),
	(20, 'MASTER_SSL_VERIFY_SERVER_CERT'),
	(21, 'SQL_BIG_RESULT'),
	(22, 'DROP'),
	(23, 'GEOMETRYCOLLECTIONFROMWKB'),
	(24, 'EVENTS'),
	(25, 'MONTH'),
	(26, 'INFO'),
	(27, 'PROFILES'),
	(28, 'DUPLICATE'),
	(29, 'REPLICATION'),
	(30, 'UNLOCK'),
	(31, 'INNODB'),
	(32, 'YEAR_MONTH'),
	(33, 'SUBJECT'),
	(34, 'PREPARE'),
	(35, 'LOCK'),
	(36, 'CHECK'),
	(37, 'FULL'),
	(38, 'INT4'),
	(39, 'BY'),
	(40, 'NO'),
	(41, 'MINUTE'),
	(42, 'PARTITION'),
	(43, 'DATA'),
	(44, 'DAY'),
	(45, 'SHARE'),
	(46, 'REAL'),
	(47, 'SEPARATOR'),
	(48, 'MESSAGE_TEXT'),
	(49, 'MASTER_HEARTBEAT_PERIOD'),
	(50, 'DELETE'),
	(51, 'ON'),
	(52, 'COLUMN_NAME'),
	(53, 'CONNECTION'),
	(54, 'CLOSE'),
	(55, 'X509'),
	(56, 'USE'),
	(57, 'SUBCLASS_ORIGIN'),
	(58, 'WHERE'),
	(59, 'PRIVILEGES'),
	(60, 'SPATIAL'),
	(61, 'EVENT'),
	(62, 'SUPER'),
	(63, 'SQL_BUFFER_RESULT'),
	(64, 'IGNORE'),
	(65, 'SHA2'),
	(66, 'QUICK'),
	(67, 'SIGNED'),
	(68, 'SECURITY'),
	(69, 'POLYGONFROMWKB'),
	(70, 'FALSE'),
	(71, 'LEVEL'),
	(72, 'FORCE'),
	(73, 'BINARY'),
	(74, 'TO'),
	(75, 'CHANGE'),
	(76, 'CURRENT_USER'),
	(77, 'HOUR_MINUTE'),
	(78, 'UPDATE'),
	(79, 'PRESERVE'),
	(80, 'TABLE_NAME'),
	(81, 'INTO'),
	(82, 'FEDERATED'),
	(83, 'VARYING'),
	(84, 'HOUR_SECOND'),
	(85, 'VARIABLE'),
	(86, 'ROLLBACK'),
	(87, 'RTREE'),
	(88, 'PROCEDURE'),
	(89, 'TIMESTAMP'),
	(90, 'IMPORT'),
	(91, 'AGAINST'),
	(92, 'CHECKSUM'),
	(93, 'COUNT'),
	(94, 'LONGBINARY'),
	(95, 'THEN'),
	(96, 'INSERT'),
	(97, 'ENGINES'),
	(98, 'HANDLER'),
	(99, 'PORT'),
	(100, 'DAY_SECOND'),
	(101, 'EXISTS'),
	(102, 'MUTEX'),
	(103, 'RELEASE'),
	(104, 'BOOLEAN'),
	(105, 'MOD'),
	(106, 'DEFAULT'),
	(107, 'TYPE'),
	(108, 'NO_WRITE_TO_BINLOG'),
	(109, 'OPTIMIZE'),
	(110, 'SQLSTATE'),
	(111, 'RESET'),
	(112, 'NOWAIT'),
	(113, 'CLASS_ORIGIN'),
	(114, 'ITERATE'),
	(115, 'INSTALL'),
	(116, 'DO'),
	(117, 'BIGINT'),
	(118, 'SET'),
	(119, 'ISSUER'),
	(120, 'DATE'),
	(121, 'STATUS'),
	(122, 'FULLTEXT'),
	(123, 'COMMENT'),
	(124, 'COMPRESSION'),
	(125, 'MASTER_CONNECT_RETRY'),
	(126, 'INNER'),
	(127, 'STOP'),
	(128, 'MASTER_LOG_FILE'),
	(129, 'MRG_MYISAM'),
	(130, 'PRECISION'),
	(131, 'REQUIRE'),
	(132, 'TRAILING'),
	(133, 'PARTITIONS'),
	(134, 'LONG'),
	(135, 'OPTION'),
	(136, 'REORGANIZE'),
	(137, 'ELSE'),
	(138, 'DEALLOCATE'),
	(139, 'IO_THREAD'),
	(140, 'CASE'),
	(141, 'CIPHER'),
	(142, 'CONTINUE'),
	(143, 'FROM'),
	(144, 'READ'),
	(145, 'LEFT'),
	(146, 'ELSEIF'),
	(147, 'MINUTE_SECOND'),
	(148, 'COMPACT'),
	(149, 'RESTORE'),
	(150, 'DEC'),
	(151, 'FOR'),
	(152, 'WARNINGS'),
	(153, 'MIN_ROWS'),
	(154, 'CONDITION'),
	(155, 'STRING'),
	(156, 'ENCLOSED'),
	(157, 'FUNCTION'),
	(158, 'AGGREGATE'),
	(159, 'FIELDS'),
	(160, 'INT3'),
	(161, 'ARCHIVE'),
	(162, 'AVG_ROW_LENGTH'),
	(163, 'ADD'),
	(164, 'KILL'),
	(165, 'FLOAT4'),
	(166, 'TABLESPACE'),
	(167, 'ALGORITHM'),
	(168, 'VIEW'),
	(169, 'REPEATABLE'),
	(170, 'INFILE'),
	(171, 'ORDER'),
	(172, 'USING'),
	(173, 'CONSTRAINT_CATALOG'),
	(174, 'MIDDLEINT'),
	(175, 'GRANT'),
	(176, 'UNSIGNED'),
	(177, 'DECIMAL'),
	(178, 'GEOMETRYFROMTEXT'),
	(179, 'INDEXES'),
	(180, 'FOREIGN'),
	(181, 'CACHE'),
	(182, 'MYSQL_ERRNO'),
	(183, 'HOSTS'),
	(184, 'COMMIT'),
	(185, 'SCHEMAS'),
	(186, 'LEADING'),
	(187, 'SNAPSHOT'),
	(188, 'CONSTRAINT_NAME'),
	(189, 'DECLARE'),
	(190, 'LOAD'),
	(191, 'SQL_CACHE'),
	(192, 'CONVERT'),
	(193, 'DYNAMIC'),
	(194, 'COLLATE'),
	(195, 'POLYGONFROMTEXT'),
	(196, 'BYTE'),
	(197, 'GLOBAL'),
	(198, 'LINESTRINGFROMWKB'),
	(199, 'WHEN'),
	(200, 'HAVING'),
	(201, 'AS'),
	(202, 'STARTING'),
	(203, 'RELOAD'),
	(204, 'AUTOCOMMIT'),
	(205, 'REVOKE'),
	(206, 'GRANTS'),
	(207, 'OUTER'),
	(208, 'CURSOR_NAME'),
	(209, 'FLOOR'),
	(210, 'EXPLAIN'),
	(211, 'WITH'),
	(212, 'AFTER'),
	(213, 'STD'),
	(214, 'CSV'),
	(215, 'DISABLE'),
	(216, 'UNINSTALL'),
	(217, 'OUTFILE'),
	(218, 'LOW_PRIORITY'),
	(219, 'FILE'),
	(220, 'SCHEMA'),
	(221, 'SONAME'),
	(222, 'POW'),
	(223, 'DUAL'),
	(224, 'MULTIPOINTFROMWKB'),
	(225, 'INDEX'),
	(226, 'BACKUP'),
	(227, 'MULTIPOINTFROMTEXT'),
	(228, 'DEFINER'),
	(229, 'REMOVE'),
	(230, 'EXTENDED'),
	(231, 'MULTILINESTRINGFROMWKB'),
	(232, 'CROSS'),
	(233, 'CONTRIBUTORS'),
	(234, 'GROUP'),
	(235, 'NATIONAL'),
	(236, 'SHA'),
	(237, 'UNDO'),
	(238, 'IGNORE_SERVER_IDS'),
	(239, 'ZEROFILL'),
	(240, 'CLIENT'),
	(241, 'MASTER_PASSWORD'),
	(242, 'EXCLUSIVE'),
	(243, 'OWNER'),
	(244, 'RELAY_LOG_FILE'),
	(245, 'TRUE'),
	(246, 'CHARACTER'),
	(247, 'MASTER_USER'),
	(248, 'SCHEMA_NAME'),
	(249, 'TABLE'),
	(250, 'ENGINE'),
	(251, 'INSERT_METHOD'),
	(252, 'CASCADE'),
	(253, 'RELAY_LOG_POS'),
	(254, 'SQL_CALC_FOUND_ROWS'),
	(255, 'UNION'),
	(256, 'MYISAM'),
	(257, 'LEAVE'),
	(258, 'MODIFY'),
	(259, 'MATCH'),
	(260, 'MASTER_LOG_POS'),
	(261, 'DISTINCTROW'),
	(262, 'DESC'),
	(263, 'TIME'),
	(264, 'NUMERIC'),
	(265, 'EXPANSION'),
	(266, 'CURSOR'),
	(267, 'CODE'),
	(268, 'GEOMETRYCOLLECTIONFROMTEXT'),
	(269, 'CHAIN'),
	(270, 'FLUSH'),
	(271, 'CREATE'),
	(272, 'DESCRIBE'),
	(273, 'MAX_UPDATES_PER_HOUR'),
	(274, 'INT2'),
	(275, 'PROCESSLIST'),
	(276, 'ENDS'),
	(277, 'LOGS'),
	(278, 'DISCARD'),
	(279, 'HEAP'),
	(280, 'SOUNDS'),
	(281, 'BETWEEN'),
	(282, 'MULTILINESTRINGFROMTEXT'),
	(283, 'REPAIR'),
	(284, 'PACK_KEYS'),
	(285, 'FAST'),
	(286, 'CALL'),
	(287, 'VALUES'),
	(288, 'LOOP'),
	(289, 'VARCHARACTER'),
	(290, 'BEFORE'),
	(291, 'TRUNCATE'),
	(292, 'SHOW'),
	(293, 'ALL'),
	(294, 'REDUNDANT'),
	(295, 'USER_RESOURCES'),
	(296, 'PARTIAL'),
	(297, 'BINLOG'),
	(298, 'END'),
	(299, 'SECOND'),
	(300, 'AND'),
	(301, 'FLOAT8'),
	(302, 'PREV'),
	(303, 'HOUR'),
	(304, 'SELECT'),
	(305, 'DATABASES'),
	(306, 'OR'),
	(307, 'IDENTIFIED'),
	(308, 'WRAPPER'),
	(309, 'MASTER_SSL_CIPHER'),
	(310, 'SQL_SLAVE_SKIP_COUNTER'),
	(311, 'BOTH'),
	(312, 'BOOL'),
	(313, 'YEAR'),
	(314, 'MASTER_PORT'),
	(315, 'CONCURRENT'),
	(316, 'OVERWRITE'),
	(317, 'HELP'),
	(318, 'UNIQUE'),
	(319, 'TRIGGERS'),
	(320, 'PROCESS'),
	(321, 'OPTIONS'),
	(322, 'RESIGNAL'),
	(323, 'CONSISTENT'),
	(324, 'MASTER_SSL'),
	(325, 'DATE_ADD'),
	(326, 'MAX_CONNECTIONS_PER_HOUR'),
	(327, 'LIKE'),
	(328, 'PLUGIN'),
	(329, 'FETCH'),
	(330, 'IN'),
	(331, 'COLUMN'),
	(332, 'DUMPFILE'),
	(333, 'USAGE'),
	(334, 'EXECUTE'),
	(335, 'MEMORY'),
	(336, 'CEIL'),
	(337, 'QUERY'),
	(338, 'MASTER_HOST'),
	(339, 'LINES'),
	(340, 'SQL_THREAD'),
	(341, 'SERVER'),
	(342, 'MAX_QUERIES_PER_HOUR'),
	(343, 'MASTER_SSL_CERT'),
	(344, 'MULTIPOLYGONFROMWKB'),
	(345, 'TRANSACTION'),
	(346, 'DAY_MINUTE'),
	(347, 'STDDEV'),
	(348, 'DATE_SUB'),
	(349, 'REBUILD'),
	(350, 'GEOMETRYFROMWKB'),
	(351, 'INT1'),
	(352, 'RENAME'),
	(353, 'PARSER'),
	(354, 'RIGHT'),
	(355, 'ALTER'),
	(356, 'MAX_ROWS'),
	(357, 'SOCKET'),
	(358, 'STRAIGHT_JOIN'),
	(359, 'NATURAL'),
	(360, 'VARIABLES'),
	(361, 'ESCAPED'),
	(362, 'SHA1'),
	(363, 'KEY_BLOCK_SIZE'),
	(364, 'PASSWORD'),
	(365, 'OFFSET'),
	(366, 'CHAR'),
	(367, 'NEXT'),
	(368, 'SQL_LOG_BIN'),
	(369, 'ERRORS'),
	(370, 'TEMPORARY'),
	(371, 'COMMITTED'),
	(372, 'SQL_SMALL_RESULT'),
	(373, 'UPGRADE'),
	(374, 'BEGIN'),
	(375, 'DELAY_KEY_WRITE'),
	(376, 'PROFILE'),
	(377, 'MEDIUM'),
	(378, 'INTERVAL'),
	(379, 'SSL'),
	(380, 'DAY_HOUR'),
	(381, 'NAME'),
	(382, 'REFERENCES'),
	(383, 'AES_ENCRYPT'),
	(384, 'STORAGE'),
	(385, 'ISOLATION'),
	(386, 'CEILING'),
	(387, 'EVERY'),
	(388, 'INT8'),
	(389, 'AUTHORS'),
	(390, 'RESTRICT'),
	(391, 'UNCOMMITTED'),
	(392, 'LINESTRINGFROMTEXT'),
	(393, 'IS'),
	(394, 'NOT'),
	(395, 'ANALYSE'),
	(396, 'SIGNAL'),
	(397, 'DES_KEY_FILE'),
	(398, 'COMPRESSED'),
	(399, 'START'),
	(400, 'PLUGINS'),
	(401, 'SAVEPOINT'),
	(402, 'IF'),
	(403, 'ROWS'),
	(404, 'PRIMARY'),
	(405, 'PURGE'),
	(406, 'USER'),
	(407, 'INNOBASE'),
	(408, 'LAST'),
	(409, 'EXIT'),
	(410, 'KEYS'),
	(411, 'LIMIT'),
	(412, 'KEY'),
	(413, 'MERGE'),
	(414, 'UNTIL'),
	(415, 'SQL_NO_CACHE'),
	(416, 'DELAYED'),
	(417, 'CONSTRAINT_SCHEMA'),
	(418, 'ANALYZE'),
	(419, 'CONSTRAINT'),
	(420, 'SERIAL'),
	(421, 'ACTION'),
	(422, 'WRITE'),
	(423, 'SESSION'),
	(424, 'DATABASE'),
	(425, 'NULL'),
	(426, 'POWER'),
	(427, 'USE_FRM'),
	(428, 'TERMINATED'),
	(429, 'SLAVE'),
	(430, 'NVARCHAR'),
	(431, 'ASC'),
	(432, 'RETURN'),
	(433, 'OPTIONALLY'),
	(434, 'ENABLE'),
	(435, 'DIRECTORY'),
	(436, 'WHILE'),
	(437, 'MAX_USER_CONNECTIONS'),
	(438, 'DISTINCT'),
	(439, 'AES_DECRYPT'),
	(440, 'LOCAL'),
	(441, 'MASTER_SSL_KEY'),
	(442, 'NONE'),
	(443, 'TABLES'),
	(444, '<>'),
	(445, 'RLIKE'),
	(446, 'TRIGGER'),
	(447, 'COLLATION'),
	(448, 'SHUTDOWN'),
	(449, 'HIGH_PRIORITY'),
	(450, 'BTREE'),
	(451, 'FIRST'),
	(452, 'COALESCE'),
	(453, 'CATALOG_NAME'),
	(454, 'TYPES'),
	(455, 'MASTER'),
	(456, 'FIXED'),
	(457, 'MULTIPOLYGONFROMTEXT'),
	(458, 'ROW_FORMAT');
/*!40000 ALTER TABLE `help_keyword` ENABLE KEYS */;

-- Dumping structure for table mysql.help_relation
CREATE TABLE IF NOT EXISTS `help_relation` (
  `help_topic_id` int(10) unsigned NOT NULL,
  `help_keyword_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`help_keyword_id`,`help_topic_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='keyword-topic relation';

-- Dumping data for table mysql.help_relation: 1,001 rows
/*!40000 ALTER TABLE `help_relation` DISABLE KEYS */;
INSERT INTO `help_relation` (`help_topic_id`, `help_keyword_id`) VALUES
	(1, 0),
	(351, 0),
	(468, 1),
	(226, 2),
	(442, 3),
	(3, 4),
	(128, 4),
	(417, 4),
	(88, 5),
	(88, 6),
	(403, 6),
	(96, 7),
	(88, 8),
	(184, 9),
	(425, 10),
	(21, 11),
	(342, 11),
	(417, 11),
	(88, 12),
	(403, 12),
	(144, 13),
	(224, 14),
	(36, 15),
	(87, 15),
	(351, 15),
	(16, 16),
	(105, 16),
	(131, 16),
	(342, 16),
	(96, 17),
	(494, 17),
	(375, 18),
	(3, 19),
	(103, 19),
	(237, 19),
	(369, 19),
	(455, 19),
	(184, 20),
	(351, 21),
	(9, 22),
	(30, 22),
	(34, 22),
	(86, 22),
	(185, 22),
	(231, 22),
	(258, 22),
	(271, 22),
	(295, 22),
	(326, 22),
	(401, 22),
	(412, 22),
	(458, 22),
	(107, 23),
	(120, 24),
	(371, 25),
	(254, 26),
	(81, 27),
	(103, 28),
	(196, 29),
	(36, 30),
	(342, 31),
	(463, 31),
	(371, 32),
	(196, 33),
	(35, 34),
	(231, 34),
	(36, 35),
	(351, 35),
	(413, 36),
	(458, 36),
	(463, 36),
	(21, 37),
	(289, 37),
	(342, 37),
	(446, 37),
	(463, 37),
	(494, 38),
	(48, 39),
	(76, 39),
	(82, 39),
	(128, 39),
	(196, 39),
	(351, 39),
	(356, 39),
	(417, 39),
	(458, 39),
	(463, 39),
	(463, 40),
	(467, 40),
	(371, 41),
	(458, 42),
	(463, 42),
	(208, 43),
	(417, 43),
	(463, 43),
	(468, 43),
	(371, 44),
	(36, 45),
	(351, 45),
	(96, 46),
	(309, 46),
	(356, 47),
	(369, 48),
	(455, 48),
	(184, 49),
	(48, 50),
	(463, 50),
	(467, 50),
	(1, 51),
	(88, 51),
	(403, 51),
	(467, 51),
	(369, 52),
	(455, 52),
	(174, 53),
	(463, 53),
	(51, 54),
	(105, 54),
	(196, 55),
	(1, 56),
	(55, 56),
	(369, 57),
	(455, 57),
	(48, 58),
	(82, 58),
	(105, 58),
	(190, 59),
	(196, 59),
	(243, 59),
	(206, 60),
	(458, 60),
	(88, 61),
	(295, 61),
	(353, 61),
	(403, 61),
	(196, 62),
	(351, 63),
	(1, 64),
	(82, 64),
	(103, 64),
	(128, 64),
	(351, 64),
	(417, 64),
	(458, 64),
	(65, 65),
	(48, 66),
	(413, 66),
	(461, 66),
	(224, 67),
	(196, 68),
	(90, 69),
	(476, 69),
	(380, 70),
	(442, 71),
	(1, 72),
	(39, 73),
	(224, 73),
	(264, 73),
	(184, 74),
	(264, 74),
	(402, 74),
	(456, 74),
	(184, 75),
	(458, 75),
	(88, 76),
	(403, 76),
	(371, 77),
	(82, 78),
	(103, 78),
	(351, 78),
	(467, 78),
	(88, 79),
	(403, 79),
	(369, 80),
	(455, 80),
	(3, 81),
	(103, 81),
	(299, 81),
	(351, 81),
	(463, 82),
	(251, 83),
	(371, 84),
	(127, 85),
	(144, 86),
	(456, 86),
	(206, 87),
	(18, 88),
	(183, 88),
	(297, 88),
	(323, 88),
	(342, 88),
	(351, 88),
	(412, 88),
	(434, 88),
	(482, 88),
	(98, 89),
	(187, 89),
	(417, 90),
	(458, 90),
	(87, 91),
	(397, 92),
	(463, 92),
	(68, 93),
	(324, 93),
	(428, 93),
	(280, 94),
	(28, 95),
	(57, 95),
	(84, 95),
	(103, 96),
	(191, 96),
	(296, 96),
	(480, 96),
	(277, 97),
	(342, 97),
	(105, 98),
	(308, 98),
	(468, 99),
	(371, 100),
	(9, 101),
	(30, 101),
	(88, 101),
	(154, 101),
	(185, 101),
	(271, 101),
	(295, 101),
	(342, 102),
	(360, 102),
	(144, 103),
	(456, 103),
	(24, 104),
	(87, 104),
	(111, 105),
	(173, 105),
	(3, 106),
	(103, 106),
	(154, 106),
	(195, 106),
	(208, 106),
	(237, 106),
	(458, 106),
	(463, 106),
	(458, 107),
	(113, 108),
	(322, 108),
	(461, 108),
	(465, 108),
	(113, 109),
	(458, 109),
	(369, 110),
	(455, 110),
	(38, 111),
	(116, 111),
	(149, 111),
	(259, 111),
	(36, 112),
	(369, 113),
	(455, 113),
	(122, 114),
	(415, 115),
	(88, 116),
	(123, 116),
	(403, 116),
	(490, 116),
	(217, 117),
	(3, 118),
	(82, 118),
	(103, 118),
	(127, 118),
	(128, 118),
	(137, 118),
	(144, 118),
	(154, 118),
	(180, 118),
	(208, 118),
	(328, 118),
	(342, 118),
	(369, 118),
	(417, 118),
	(455, 118),
	(458, 118),
	(463, 118),
	(467, 118),
	(472, 118),
	(488, 118),
	(196, 119),
	(130, 120),
	(224, 120),
	(257, 120),
	(371, 120),
	(58, 121),
	(134, 121),
	(211, 121),
	(219, 121),
	(323, 121),
	(331, 121),
	(342, 121),
	(360, 121),
	(206, 122),
	(458, 122),
	(463, 122),
	(88, 123),
	(206, 123),
	(403, 123),
	(463, 123),
	(454, 124),
	(184, 125),
	(1, 126),
	(52, 127),
	(184, 128),
	(463, 129),
	(309, 130),
	(196, 131),
	(450, 132),
	(249, 133),
	(280, 134),
	(196, 135),
	(243, 135),
	(458, 136),
	(57, 137),
	(84, 137),
	(231, 138),
	(52, 139),
	(319, 139),
	(57, 140),
	(84, 140),
	(196, 141),
	(308, 142),
	(48, 143),
	(120, 143),
	(153, 143),
	(342, 143),
	(351, 143),
	(450, 143),
	(36, 144),
	(105, 144),
	(442, 144),
	(1, 145),
	(28, 146),
	(371, 147),
	(463, 148),
	(153, 149),
	(205, 150),
	(178, 151),
	(308, 151),
	(342, 151),
	(351, 151),
	(416, 151),
	(324, 152),
	(342, 152),
	(463, 153),
	(178, 154),
	(96, 155),
	(417, 156),
	(34, 157),
	(67, 157),
	(96, 157),
	(207, 157),
	(227, 157),
	(297, 157),
	(331, 157),
	(342, 157),
	(388, 157),
	(401, 157),
	(412, 157),
	(96, 158),
	(342, 159),
	(417, 159),
	(246, 160),
	(463, 161),
	(458, 162),
	(463, 162),
	(60, 163),
	(458, 163),
	(174, 164),
	(167, 165),
	(196, 166),
	(458, 166),
	(454, 167),
	(30, 168),
	(158, 168),
	(449, 168),
	(442, 169),
	(128, 170),
	(417, 170),
	(48, 171),
	(82, 171),
	(351, 171),
	(356, 171),
	(458, 171),
	(1, 172),
	(48, 172),
	(85, 172),
	(369, 173),
	(455, 173),
	(246, 174),
	(196, 175),
	(243, 175),
	(24, 176),
	(126, 176),
	(167, 176),
	(205, 176),
	(224, 176),
	(309, 176),
	(494, 176),
	(96, 177),
	(155, 177),
	(224, 177),
	(408, 178),
	(342, 179),
	(458, 180),
	(463, 180),
	(467, 180),
	(468, 180),
	(100, 181),
	(149, 181),
	(299, 181),
	(369, 182),
	(455, 182),
	(143, 183),
	(342, 183),
	(144, 184),
	(159, 185),
	(342, 185),
	(450, 186),
	(144, 187),
	(369, 188),
	(455, 188),
	(178, 189),
	(195, 189),
	(308, 189),
	(416, 189),
	(299, 190),
	(417, 190),
	(351, 191),
	(224, 192),
	(372, 192),
	(463, 193),
	(154, 194),
	(208, 194),
	(463, 194),
	(390, 195),
	(460, 196),
	(127, 197),
	(134, 197),
	(180, 197),
	(344, 197),
	(442, 197),
	(447, 198),
	(57, 199),
	(84, 199),
	(351, 200),
	(1, 201),
	(36, 201),
	(351, 201),
	(417, 202),
	(196, 203),
	(144, 204),
	(243, 205),
	(189, 206),
	(342, 206),
	(1, 207),
	(369, 208),
	(455, 208),
	(217, 209),
	(249, 210),
	(87, 211),
	(196, 211),
	(206, 211),
	(454, 211),
	(458, 211),
	(463, 211),
	(458, 212),
	(255, 213),
	(417, 214),
	(463, 214),
	(88, 215),
	(403, 215),
	(458, 215),
	(286, 216),
	(351, 217),
	(3, 218),
	(36, 218),
	(48, 218),
	(82, 218),
	(103, 218),
	(128, 218),
	(417, 218),
	(196, 219),
	(154, 220),
	(185, 220),
	(208, 220),
	(304, 220),
	(342, 220),
	(454, 220),
	(96, 221),
	(272, 222),
	(274, 223),
	(459, 224),
	(1, 225),
	(60, 225),
	(86, 225),
	(100, 225),
	(206, 225),
	(299, 225),
	(303, 225),
	(342, 225),
	(458, 225),
	(463, 225),
	(322, 226),
	(402, 226),
	(454, 226),
	(420, 227),
	(88, 228),
	(403, 228),
	(458, 229),
	(249, 230),
	(461, 230),
	(267, 231),
	(1, 232),
	(7, 233),
	(342, 233),
	(351, 234),
	(251, 235),
	(425, 235),
	(422, 236),
	(308, 237),
	(184, 238),
	(24, 239),
	(126, 239),
	(167, 239),
	(205, 239),
	(309, 239),
	(494, 239),
	(196, 240),
	(184, 241),
	(36, 242),
	(468, 243),
	(184, 244),
	(380, 245),
	(128, 246),
	(154, 246),
	(208, 246),
	(251, 246),
	(328, 246),
	(342, 246),
	(417, 246),
	(425, 246),
	(463, 246),
	(184, 247),
	(369, 248),
	(455, 248),
	(60, 249),
	(108, 249),
	(113, 249),
	(211, 249),
	(271, 249),
	(273, 249),
	(316, 249),
	(342, 249),
	(397, 249),
	(413, 249),
	(458, 249),
	(461, 249),
	(463, 249),
	(465, 249),
	(342, 250),
	(360, 250),
	(458, 250),
	(463, 250),
	(463, 251),
	(30, 252),
	(271, 252),
	(463, 252),
	(467, 252),
	(184, 253),
	(351, 254),
	(300, 255),
	(463, 256),
	(305, 257),
	(458, 258),
	(87, 259),
	(184, 260),
	(351, 261),
	(325, 262),
	(351, 262),
	(356, 262),
	(224, 263),
	(310, 263),
	(370, 263),
	(205, 264),
	(87, 265),
	(416, 266),
	(67, 267),
	(482, 267),
	(240, 268),
	(144, 269),
	(149, 270),
	(322, 270),
	(18, 271),
	(22, 271),
	(60, 271),
	(76, 271),
	(88, 271),
	(96, 271),
	(154, 271),
	(206, 271),
	(207, 271),
	(273, 271),
	(297, 271),
	(304, 271),
	(342, 271),
	(353, 271),
	(388, 271),
	(449, 271),
	(463, 271),
	(468, 271),
	(325, 272),
	(196, 273),
	(228, 274),
	(342, 275),
	(446, 275),
	(88, 276),
	(39, 277),
	(264, 277),
	(322, 277),
	(342, 277),
	(402, 277),
	(458, 278),
	(463, 279),
	(373, 280),
	(145, 281),
	(106, 282),
	(458, 283),
	(461, 283),
	(463, 284),
	(413, 285),
	(334, 286),
	(3, 287),
	(103, 287),
	(339, 288),
	(251, 289),
	(264, 290),
	(402, 290),
	(316, 291),
	(7, 292),
	(10, 292),
	(18, 292),
	(21, 292),
	(25, 292),
	(33, 292),
	(39, 292),
	(58, 292),
	(67, 292),
	(68, 292),
	(81, 292),
	(120, 292),
	(131, 292),
	(134, 292),
	(143, 292),
	(159, 292),
	(189, 292),
	(190, 292),
	(211, 292),
	(219, 292),
	(273, 292),
	(277, 292),
	(289, 292),
	(303, 292),
	(304, 292),
	(323, 292),
	(324, 292),
	(328, 292),
	(331, 292),
	(342, 292),
	(344, 292),
	(353, 292),
	(360, 292),
	(388, 292),
	(446, 292),
	(481, 292),
	(482, 292),
	(486, 292),
	(196, 293),
	(243, 293),
	(300, 293),
	(351, 293),
	(463, 294),
	(322, 295),
	(463, 296),
	(120, 297),
	(345, 297),
	(28, 298),
	(57, 298),
	(84, 298),
	(226, 298),
	(321, 298),
	(339, 298),
	(490, 298),
	(371, 299),
	(145, 300),
	(311, 300),
	(309, 301),
	(105, 302),
	(371, 303),
	(3, 304),
	(103, 304),
	(249, 304),
	(254, 304),
	(296, 304),
	(351, 304),
	(159, 305),
	(342, 305),
	(139, 306),
	(76, 307),
	(128, 307),
	(196, 307),
	(468, 308),
	(184, 309),
	(180, 310),
	(450, 311),
	(24, 312),
	(109, 312),
	(371, 313),
	(184, 314),
	(128, 315),
	(417, 315),
	(153, 316),
	(117, 317),
	(385, 317),
	(458, 318),
	(25, 319),
	(342, 319),
	(196, 320),
	(368, 321),
	(468, 321),
	(369, 322),
	(144, 323),
	(184, 324),
	(371, 325),
	(196, 326),
	(342, 327),
	(373, 327),
	(286, 328),
	(342, 328),
	(415, 328),
	(378, 329),
	(36, 330),
	(87, 330),
	(120, 330),
	(351, 330),
	(458, 331),
	(351, 332),
	(196, 333),
	(85, 334),
	(196, 334),
	(351, 335),
	(392, 336),
	(87, 337),
	(149, 337),
	(174, 337),
	(184, 338),
	(128, 339),
	(417, 339),
	(52, 340),
	(319, 340),
	(9, 341),
	(368, 341),
	(468, 341),
	(196, 342),
	(184, 343),
	(121, 344),
	(144, 345),
	(442, 345),
	(371, 346),
	(404, 347),
	(371, 348),
	(458, 349),
	(142, 350),
	(24, 351),
	(108, 352),
	(218, 352),
	(403, 352),
	(458, 352),
	(206, 353),
	(458, 353),
	(463, 353),
	(1, 354),
	(60, 355),
	(158, 355),
	(196, 355),
	(208, 355),
	(227, 355),
	(368, 355),
	(403, 355),
	(434, 355),
	(458, 355),
	(463, 356),
	(468, 357),
	(1, 358),
	(351, 358),
	(1, 359),
	(342, 360),
	(344, 360),
	(417, 361),
	(422, 362),
	(463, 363),
	(76, 364),
	(196, 364),
	(468, 364),
	(472, 364),
	(351, 365),
	(224, 366),
	(460, 366),
	(105, 367),
	(488, 368),
	(68, 369),
	(342, 369),
	(271, 370),
	(442, 371),
	(351, 372),
	(208, 373),
	(413, 373),
	(144, 374),
	(321, 374),
	(463, 375),
	(481, 376),
	(413, 377),
	(88, 378),
	(371, 378),
	(196, 379),
	(371, 380),
	(208, 381),
	(196, 382),
	(463, 382),
	(467, 382),
	(438, 383),
	(277, 384),
	(442, 385),
	(443, 386),
	(88, 387),
	(126, 388),
	(10, 389),
	(342, 389),
	(30, 390),
	(271, 390),
	(467, 390),
	(442, 391),
	(56, 392),
	(83, 393),
	(202, 393),
	(363, 393),
	(451, 393),
	(83, 394),
	(88, 394),
	(154, 394),
	(202, 394),
	(307, 394),
	(183, 395),
	(455, 396),
	(322, 397),
	(463, 398),
	(144, 399),
	(319, 399),
	(33, 400),
	(456, 401),
	(9, 402),
	(28, 402),
	(30, 402),
	(88, 402),
	(154, 402),
	(185, 402),
	(271, 402),
	(295, 402),
	(474, 402),
	(128, 403),
	(458, 404),
	(264, 405),
	(402, 405),
	(76, 406),
	(218, 406),
	(326, 406),
	(468, 406),
	(463, 407),
	(105, 408),
	(308, 409),
	(303, 410),
	(342, 410),
	(458, 410),
	(48, 411),
	(82, 411),
	(105, 411),
	(120, 411),
	(351, 411),
	(60, 412),
	(103, 412),
	(458, 412),
	(463, 412),
	(467, 412),
	(463, 413),
	(226, 414),
	(351, 415),
	(3, 416),
	(103, 416),
	(480, 416),
	(369, 417),
	(455, 417),
	(458, 418),
	(465, 418),
	(458, 419),
	(463, 419),
	(237, 420),
	(463, 420),
	(463, 421),
	(467, 421),
	(36, 422),
	(127, 423),
	(134, 423),
	(344, 423),
	(442, 423),
	(154, 424),
	(185, 424),
	(208, 424),
	(304, 424),
	(342, 424),
	(454, 424),
	(468, 424),
	(83, 425),
	(363, 425),
	(467, 425),
	(477, 426),
	(461, 427),
	(417, 428),
	(38, 429),
	(52, 429),
	(88, 429),
	(143, 429),
	(219, 429),
	(319, 429),
	(403, 429),
	(251, 430),
	(351, 431),
	(356, 431),
	(485, 432),
	(417, 433),
	(88, 434),
	(403, 434),
	(458, 434),
	(208, 435),
	(463, 435),
	(490, 436),
	(196, 437),
	(0, 438),
	(95, 438),
	(283, 438),
	(300, 438),
	(351, 438),
	(356, 438),
	(379, 438),
	(428, 438),
	(491, 439),
	(36, 440),
	(113, 440),
	(128, 440),
	(322, 440),
	(417, 440),
	(461, 440),
	(465, 440),
	(184, 441),
	(196, 442),
	(36, 443),
	(131, 443),
	(289, 443),
	(342, 443),
	(489, 444),
	(27, 445),
	(22, 446),
	(258, 446),
	(342, 446),
	(342, 447),
	(486, 447),
	(196, 448),
	(103, 449),
	(351, 449),
	(206, 450),
	(105, 451),
	(458, 451),
	(463, 451),
	(458, 452),
	(369, 453),
	(455, 453),
	(342, 454),
	(39, 455),
	(58, 455),
	(184, 455),
	(259, 455),
	(264, 455),
	(205, 456),
	(463, 456),
	(197, 457),
	(463, 458);
/*!40000 ALTER TABLE `help_relation` ENABLE KEYS */;

-- Dumping structure for table mysql.help_topic
CREATE TABLE IF NOT EXISTS `help_topic` (
  `help_topic_id` int(10) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `help_category_id` smallint(5) unsigned NOT NULL,
  `description` text NOT NULL,
  `example` text NOT NULL,
  `url` char(128) NOT NULL,
  PRIMARY KEY (`help_topic_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='help topics';

-- Dumping data for table mysql.help_topic: 502 rows
/*!40000 ALTER TABLE `help_topic` DISABLE KEYS */;
INSERT INTO `help_topic` (`help_topic_id`, `name`, `help_category_id`, `description`, `example`, `url`) VALUES
	(0, 'MIN', 16, 'Syntax:\nMIN([DISTINCT] expr)\n\nReturns the minimum value of expr. MIN() may take a string argument; in\nsuch cases, it returns the minimum string value. See\nhttp://dev.mysql.com/doc/refman/6.0/en/mysql-indexes.html. The DISTINCT\nkeyword can be used to find the minimum of the distinct values of expr,\nhowever, this produces the same result as omitting DISTINCT.\n\nMIN() returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', 'mysql> SELECT student_name, MIN(test_score), MAX(test_score)\n    ->        FROM student\n    ->        GROUP BY student_name;\n', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(1, 'JOIN', 27, 'MySQL supports the following JOIN syntaxes for the table_references\npart of SELECT statements and multiple-table DELETE and UPDATE\nstatements:\n\ntable_references:\n    table_reference [, table_reference] ...\n\ntable_reference:\n    table_factor\n  | join_table\n\ntable_factor:\n    tbl_name [[AS] alias] [index_hint_list]\n  | table_subquery [AS] alias\n  | ( table_references )\n  | { OJ table_reference LEFT OUTER JOIN table_reference\n        ON conditional_expr }\n\njoin_table:\n    table_reference [INNER | CROSS] JOIN table_factor [join_condition]\n  | table_reference STRAIGHT_JOIN table_factor\n  | table_reference STRAIGHT_JOIN table_factor ON conditional_expr\n  | table_reference {LEFT|RIGHT} [OUTER] JOIN table_reference join_condition\n  | table_reference NATURAL [{LEFT|RIGHT} [OUTER]] JOIN table_factor\n\njoin_condition:\n    ON conditional_expr\n  | USING (column_list)\n\nindex_hint_list:\n    index_hint [, index_hint] ...\n\nindex_hint:\n    USE {INDEX|KEY}\n      [{FOR {JOIN|ORDER BY|GROUP BY}] ([index_list])\n  | IGNORE {INDEX|KEY}\n      [{FOR {JOIN|ORDER BY|GROUP BY}] (index_list)\n  | FORCE {INDEX|KEY}\n      [{FOR {JOIN|ORDER BY|GROUP BY}] (index_list)\n\nindex_list:\n    index_name [, index_name] ...\n\nA table reference is also known as a join expression.\n\nThe syntax of table_factor is extended in comparison with the SQL\nStandard. The latter accepts only table_reference, not a list of them\ninside a pair of parentheses.\n\nThis is a conservative extension if we consider each comma in a list of\ntable_reference items as equivalent to an inner join. For example:\n\nSELECT * FROM t1 LEFT JOIN (t2, t3, t4)\n                 ON (t2.a=t1.a AND t3.b=t1.b AND t4.c=t1.c)\n\nis equivalent to:\n\nSELECT * FROM t1 LEFT JOIN (t2 CROSS JOIN t3 CROSS JOIN t4)\n                 ON (t2.a=t1.a AND t3.b=t1.b AND t4.c=t1.c)\n\nIn MySQL, CROSS JOIN is a syntactic equivalent to INNER JOIN (they can\nreplace each other). In standard SQL, they are not equivalent. INNER\nJOIN is used with an ON clause, CROSS JOIN is used otherwise.\n\nIn general, parentheses can be ignored in join expressions containing\nonly inner join operations. MySQL also supports nested joins (see\nhttp://dev.mysql.com/doc/refman/6.0/en/nested-join-optimization.html).\n\nIndex hints can be specified to affect how the MySQL optimizer makes\nuse of indexes. For more information, see\nhttp://dev.mysql.com/doc/refman/6.0/en/index-hints.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/join.html\n\n', 'SELECT left_tbl.*\n  FROM left_tbl LEFT JOIN right_tbl ON left_tbl.id = right_tbl.id\n  WHERE right_tbl.id IS NULL;\n', 'http://dev.mysql.com/doc/refman/6.0/en/join.html'),
	(2, 'HEX', 36, 'Syntax:\nHEX(N_or_S)\n\nIf N_or_S is a number, returns a string representation of the\nhexadecimal value of N, where N is a longlong (BIGINT) number. This is\nequivalent to CONV(N,10,16).\n\nIf N_or_S is a string, returns a hexadecimal string representation of\nN_or_S where each character in N_or_S is converted to two hexadecimal\ndigits. The inverse of this operation is performed by the UNHEX()\nfunction.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT HEX(255);\n        -> \'FF\'\nmysql> SELECT 0x616263;\n        -> \'abc\'\nmysql> SELECT HEX(\'abc\');\n        -> 616263\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(3, 'REPLACE', 27, 'Syntax:\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name [(col_name,...)]\n    {VALUES | VALUE} ({expr | DEFAULT},...),(...),...\n\nOr:\n\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    SET col_name={expr | DEFAULT}, ...\n\nOr:\n\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name [(col_name,...)]\n    SELECT ...\n\nREPLACE works exactly like INSERT, except that if an old row in the\ntable has the same value as a new row for a PRIMARY KEY or a UNIQUE\nindex, the old row is deleted before the new row is inserted. See [HELP\nINSERT].\n\nREPLACE is a MySQL extension to the SQL standard. It either inserts, or\ndeletes and inserts. For another MySQL extension to standard SQL ---\nthat either inserts or updates --- see\nhttp://dev.mysql.com/doc/refman/6.0/en/insert-on-duplicate.html.\n\nNote that unless the table has a PRIMARY KEY or UNIQUE index, using a\nREPLACE statement makes no sense. It becomes equivalent to INSERT,\nbecause there is no index to be used to determine whether a new row\nduplicates another.\n\nValues for all columns are taken from the values specified in the\nREPLACE statement. Any missing columns are set to their default values,\njust as happens for INSERT. You cannot refer to values from the current\nrow and use them in the new row. If you use an assignment such as SET\ncol_name = col_name + 1, the reference to the column name on the right\nhand side is treated as DEFAULT(col_name), so the assignment is\nequivalent to SET col_name = DEFAULT(col_name) + 1.\n\nTo use REPLACE, you must have both the INSERT and DELETE privileges for\nthe table.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/replace.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/replace.html'),
	(4, 'CONTAINS', 30, 'Contains(g1,g2)\n\nReturns 1 or 0 to indicate whether g1 completely contains g2. This\ntests the opposite relationship as Within().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html'),
	(5, 'SRID', 35, 'SRID(g)\n\nReturns an integer indicating the Spatial Reference System ID for the\ngeometry value g.\n\nIn MySQL, the SRID value is just an integer associated with the\ngeometry value. All calculations are done assuming Euclidean (planar)\ngeometry.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions\n\n', 'mysql> SELECT SRID(GeomFromText(\'LineString(1 1,2 2)\',101));\n+-----------------------------------------------+\n| SRID(GeomFromText(\'LineString(1 1,2 2)\',101)) |\n+-----------------------------------------------+\n|                                           101 |\n+-----------------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions'),
	(6, 'CURRENT_TIMESTAMP', 31, 'Syntax:\nCURRENT_TIMESTAMP, CURRENT_TIMESTAMP()\n\nCURRENT_TIMESTAMP and CURRENT_TIMESTAMP() are synonyms for NOW().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(7, 'SHOW CONTRIBUTORS', 26, 'Syntax:\nSHOW CONTRIBUTORS\n\nThe SHOW CONTRIBUTORS statement displays information about the people\nwho contribute to MySQL source or to causes that MySQL AB supports. For\neach contributor, it displays Name, Location, and Comment values.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-contributors.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-contributors.html'),
	(8, 'VARIANCE', 16, 'Syntax:\nVARIANCE(expr)\n\nReturns the population standard variance of expr. This is an extension\nto standard SQL. The standard SQL function VAR_POP() can be used\ninstead.\n\nVARIANCE() returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(9, 'DROP SERVER', 38, 'Syntax:\nDROP SERVER [ IF EXISTS ] server_name\n\nDrops the server definition for the server named server_name. The\ncorresponding row within the mysql.servers table will be deleted. This\nstatement requires the SUPER privilege.\n\nDropping a server for a table does not affect any FEDERATED tables that\nused this connection information when they were created. See [HELP\nCREATE SERVER].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-server.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-server.html'),
	(10, 'SHOW AUTHORS', 26, 'Syntax:\nSHOW AUTHORS\n\nThe SHOW AUTHORS statement displays information about the people who\nwork on MySQL. For each author, it displays Name, Location, and Comment\nvalues.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-authors.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-authors.html'),
	(11, 'VAR_SAMP', 16, 'Syntax:\nVAR_SAMP(expr)\n\nReturns the sample variance of expr. That is, the denominator is the\nnumber of rows minus one.\n\nVAR_SAMP() returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(12, 'CONCAT', 36, 'Syntax:\nCONCAT(str1,str2,...)\n\nReturns the string that results from concatenating the arguments. May\nhave one or more arguments. If all arguments are non-binary strings,\nthe result is a non-binary string. If the arguments include any binary\nstrings, the result is a binary string. A numeric argument is converted\nto its equivalent binary string form; if you want to avoid that, you\ncan use an explicit type cast, as in this example:\n\nSELECT CONCAT(CAST(int_col AS CHAR), char_col);\n\nCONCAT() returns NULL if any argument is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT CONCAT(\'My\', \'S\', \'QL\');\n        -> \'MySQL\'\nmysql> SELECT CONCAT(\'My\', NULL, \'QL\');\n        -> NULL\nmysql> SELECT CONCAT(14.3);\n        -> \'14.3\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(13, 'GEOMETRY HIERARCHY', 33, 'Geometry is the base class. It is an abstract class. The instantiable\nsubclasses of Geometry are restricted to zero-, one-, and\ntwo-dimensional geometric objects that exist in two-dimensional\ncoordinate space. All instantiable geometry classes are defined so that\nvalid instances of a geometry class are topologically closed (that is,\nall defined geometries include their boundary).\n\nThe base Geometry class has subclasses for Point, Curve, Surface, and\nGeometryCollection:\n\no Point represents zero-dimensional objects.\n\no Curve represents one-dimensional objects, and has subclass\n  LineString, with sub-subclasses Line and LinearRing.\n\no Surface is designed for two-dimensional objects and has subclass\n  Polygon.\n\no GeometryCollection has specialized zero-, one-, and two-dimensional\n  collection classes named MultiPoint, MultiLineString, and\n  MultiPolygon for modeling geometries corresponding to collections of\n  Points, LineStrings, and Polygons, respectively. MultiCurve and\n  MultiSurface are introduced as abstract superclasses that generalize\n  the collection interfaces to handle Curves and Surfaces.\n\nGeometry, Curve, Surface, MultiCurve, and MultiSurface are defined as\nnon-instantiable classes. They define a common set of methods for their\nsubclasses and are included for extensibility.\n\nPoint, LineString, Polygon, GeometryCollection, MultiPoint,\nMultiLineString, and MultiPolygon are instantiable classes.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/gis-geometry-class-hierarchy.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/gis-geometry-class-hierarchy.html'),
	(14, 'CHAR FUNCTION', 36, 'Syntax:\nCHAR(N,... [USING charset_name])\n\nCHAR() interprets each argument N as an integer and returns a string\nconsisting of the characters given by the code values of those\nintegers. NULL values are skipped.\nBy default, CHAR() returns a binary string. To produce a string in a\ngiven character set, use the optional USING clause:\n\nmysql> SELECT CHARSET(CHAR(0x65)), CHARSET(CHAR(0x65 USING utf8));\n+---------------------+--------------------------------+\n| CHARSET(CHAR(0x65)) | CHARSET(CHAR(0x65 USING utf8)) |\n+---------------------+--------------------------------+\n| binary              | utf8                           |\n+---------------------+--------------------------------+\n\nIf USING is given and the result string is illegal for the given\ncharacter set, a warning is issued. Also, if strict SQL mode is\nenabled, the result from CHAR() becomes NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT CHAR(77,121,83,81,\'76\');\n        -> \'MySQL\'\nmysql> SELECT CHAR(77,77.3,\'77.3\');\n        -> \'MMM\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(15, 'DATETIME', 22, 'DATETIME\n\nA date and time combination. The supported range is \'1000-01-01\n00:00:00\' to \'9999-12-31 23:59:59\'. MySQL displays DATETIME values in\n\'YYYY-MM-DD HH:MM:SS\' format, but allows assignment of values to\nDATETIME columns using either strings or numbers.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html'),
	(16, 'OPEN', 23, 'Syntax:\nOPEN cursor_name\n\nThis statement opens a previously declared cursor.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/open.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/open.html'),
	(17, 'SHOW CREATE TRIGGER', 26, 'Syntax:\nSHOW CREATE TRIGGER trigger_name\n\nThis statement shows a CREATE TRIGGER statement that creates the given\ntrigger.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-create-trigger.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-create-trigger.html'),
	(18, 'SHOW CREATE PROCEDURE', 26, 'Syntax:\nSHOW CREATE PROCEDURE proc_name\n\nThis statement is a MySQL extension. It returns the exact string that\ncan be used to re-create the named stored procedure. A similar\nstatement, SHOW CREATE FUNCTION, displays information about stored\nfunctions (see [HELP SHOW CREATE FUNCTION]).\n\nBoth statements require that you be the owner of the routine or have\nSELECT access to the mysql.proc table. If you do not have privileges\nfor the routine itself, the value displayed for the Create Procedure or\nCreate Function field will be NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-create-procedure.html\n\n', 'mysql> SHOW CREATE PROCEDURE test.simpleproc\\G\n*************************** 1. row ***************************\n           Procedure: simpleproc\n            sql_mode: \n    Create Procedure: CREATE PROCEDURE `simpleproc`(OUT param1 INT)\n                      BEGIN\n                      SELECT COUNT(*) INTO param1 FROM t;\n                      END\ncharacter_set_client: latin1\ncollation_connection: latin1_swedish_ci\n  Database Collation: latin1_swedish_ci\n\nmysql> SHOW CREATE FUNCTION test.hello\\G\n*************************** 1. row ***************************\n            Function: hello\n            sql_mode:\n     Create Function: CREATE FUNCTION `hello`(s CHAR(20))\n                      RETURNS CHAR(50)\n                      RETURN CONCAT(\'Hello, \',s,\'!\')\ncharacter_set_client: latin1\ncollation_connection: latin1_swedish_ci\n  Database Collation: latin1_swedish_ci\n', 'http://dev.mysql.com/doc/refman/6.0/en/show-create-procedure.html'),
	(19, 'INTEGER', 22, 'INTEGER[(M)] [UNSIGNED] [ZEROFILL]\n\nThis type is a synonym for INT.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(20, 'LOWER', 36, 'Syntax:\nLOWER(str)\n\nReturns the string str with all characters changed to lowercase\naccording to the current character set mapping. The default is latin1\n(cp1252 West European).\n\nmysql> SELECT LOWER(\'QUADRATICALLY\');\n        -> \'quadratically\'\n\nLOWER() (and UPPER()) are ineffective when applied to binary strings\n(BINARY, VARBINARY, BLOB). To perform lettercase conversion, convert\nthe string to a non-binary string:\n\nmysql> SET @str = BINARY \'New York\';\nmysql> SELECT LOWER(@str), LOWER(CONVERT(@str USING latin1));\n+-------------+-----------------------------------+\n| LOWER(@str) | LOWER(CONVERT(@str USING latin1)) |\n+-------------+-----------------------------------+\n| New York    | new york                          | \n+-------------+-----------------------------------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(21, 'SHOW COLUMNS', 26, 'Syntax:\nSHOW [FULL] COLUMNS FROM tbl_name [FROM db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW COLUMNS displays information about the columns in a given table.\nIt also works for views. The LIKE clause, if present, indicates which\ncolumn names to match. The WHERE clause can be given to select rows\nusing more general conditions, as discussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\n\nSHOW COLUMNS displays information only for those columns that you have\nsome privilege for.\n\nmysql> SHOW COLUMNS FROM City;\n+------------+----------+------+-----+---------+----------------+\n| Field      | Type     | Null | Key | Default | Extra          |\n+------------+----------+------+-----+---------+----------------+\n| Id         | int(11)  | NO   | PRI | NULL    | auto_increment |\n| Name       | char(35) | NO   |     |         |                |\n| Country    | char(3)  | NO   | UNI |         |                |\n| District   | char(20) | YES  | MUL |         |                |\n| Population | int(11)  | NO   |     | 0       |                |\n+------------+----------+------+-----+---------+----------------+\n5 rows in set (0.00 sec)\n\nThe FULL keyword causes the output to include the column collation and\ncomments, as well as the privileges you have for each column.\n\nYou can use db_name.tbl_name as an alternative to the tbl_name FROM\ndb_name syntax. In other words, these two statements are equivalent:\n\nmysql> SHOW COLUMNS FROM mytable FROM mydb;\nmysql> SHOW COLUMNS FROM mydb.mytable;\n\nSHOW COLUMNS displays the following values for each table column:\n\nField indicates the column name.\n\nType indicates the column data type.\n\nCollation indicates the collation for non-binary string columns, or\nNULL for other columns. This value is displayed only if you use the\nFULL keyword.\n\nThe Null field contains YES if NULL values can be stored in the column,\nNO if not.\n\nThe Key field indicates whether the column is indexed:\n\no If Key is empty, the column either is not indexed or is indexed only\n  as a secondary column in a multiple-column, non-unique index.\n\no If Key is PRI, the column is a PRIMARY KEY or is one of the columns\n  in a multiple-column PRIMARY KEY.\n\no If Key is UNI, the column is the first column of a unique-valued\n  index that cannot contain NULL values.\n\no If Key is MUL, multiple occurrences of a given value are allowed\n  within the column. The column is the first column of a non-unique\n  index or a unique-valued index that can contain NULL values.\n\nIf more than one of the Key values applies to a given column of a\ntable, Key displays the one with the highest priority, in the order\nPRI, UNI, MUL.\n\nA UNIQUE index may be displayed as PRI if it cannot contain NULL values\nand there is no PRIMARY KEY in the table. A UNIQUE index may display as\nMUL if several columns form a composite UNIQUE index; although the\ncombination of the columns is unique, each column can still hold\nmultiple occurrences of a given value.\n\nThe Default field indicates the default value that is assigned to the\ncolumn.\n\nThe Extra field contains any additional information that is available\nabout a given column. The value is auto_increment if the column was\ncreated with the AUTO_INCREMENT keyword and empty otherwise.\n\nPrivileges indicates the privileges you have for the column. This value\nis displayed only if you use the FULL keyword.\n\nComment indicates any comment the column has. This value is displayed\nonly if you use the FULL keyword.\n\nSHOW FIELDS is a synonym for SHOW COLUMNS. You can also list a table\'s\ncolumns with the mysqlshow db_name tbl_name command.\n\nThe DESCRIBE statement provides information similar to SHOW COLUMNS.\nSee [HELP DESCRIBE].\n\nThe SHOW CREATE TABLE, SHOW TABLE STATUS, and SHOW INDEX statements\nalso provide information about tables. See [HELP SHOW].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-columns.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-columns.html'),
	(22, 'CREATE TRIGGER', 38, 'Syntax:\nCREATE\n    [DEFINER = { user | CURRENT_USER }]\n    TRIGGER trigger_name trigger_time trigger_event\n    ON tbl_name FOR EACH ROW trigger_stmt\n\nThis statement creates a new trigger. A trigger is a named database\nobject that is associated with a table, and that activates when a\nparticular event occurs for the table. The trigger becomes associated\nwith the table named tbl_name, which must refer to a permanent table.\nYou cannot associate a trigger with a TEMPORARY table or a view.\n\nCREATE TRIGGER requires the TRIGGER privilege for the table associated\nwith the trigger.\n\nThe DEFINER clause determines the security context to be used when\nchecking access privileges at trigger activation time.\n\ntrigger_time is the trigger action time. It can be BEFORE or AFTER to\nindicate that the trigger activates before or after each row to be\nmodified.\n\ntrigger_event indicates the kind of statement that activates the\ntrigger. The trigger_event can be one of the following:\n\no INSERT: The trigger is activated whenever a new row is inserted into\n  the table; for example, through INSERT, LOAD DATA, and REPLACE\n  statements.\n\no UPDATE: The trigger is activated whenever a row is modified; for\n  example, through UPDATE statements.\n\no DELETE: The trigger is activated whenever a row is deleted from the\n  table; for example, through DELETE and REPLACE statements. However,\n  DROP TABLE and TRUNCATE statements on the table do not activate this\n  trigger, because they do not use DELETE. Dropping a partition does\n  not activate DELETE triggers, either. See [HELP TRUNCATE TABLE].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-trigger.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-trigger.html'),
	(23, 'MONTH', 31, 'Syntax:\nMONTH(date)\n\nReturns the month for date, in the range 1 to 12 for January to\nDecember, or 0 for dates such as \'0000-00-00\' or \'2008-00-00\' that have\na zero month part.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT MONTH(\'2008-02-03\');\n        -> 2\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(24, 'TINYINT', 22, 'TINYINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA very small integer. The signed range is -128 to 127. The unsigned\nrange is 0 to 255.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(25, 'SHOW TRIGGERS', 26, 'Syntax:\nSHOW TRIGGERS [FROM db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TRIGGERS lists the triggers currently defined for tables in a\ndatabase (the default database unless a FROM clause is given). This\nstatement requires the TRIGGER privilege. The LIKE clause, if present,\nindicates which table names to match and causes the statement to\ndisplay triggers for those tables. The WHERE clause can be given to\nselect rows using more general conditions, as discussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\n\nFor the trigger ins_sum as defined in\nhttp://dev.mysql.com/doc/refman/6.0/en/triggers.html, the output of\nthis statement is as shown here:\n\nmysql> SHOW TRIGGERS LIKE \'acc%\'\\G\n*************************** 1. row ***************************\n             Trigger: ins_sum\n               Event: INSERT\n               Table: account\n           Statement: SET @sum = @sum + NEW.amount\n              Timing: BEFORE\n             Created: NULL\n            sql_mode:\n             Definer: myname@localhost\ncharacter_set_client: latin1\ncollation_connection: latin1_swedish_ci\n  Database Collation: latin1_swedish_ci\n\ncharacter_set_client is the session value of the character_set_client\nsystem variable when the trigger was created. collation_connection is\nthe session value of the collation_connection system variable when the\ntrigger was created. Database Collation is the collation of the\ndatabase with which the trigger is associated.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-triggers.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-triggers.html'),
	(26, 'MASTER_POS_WAIT', 14, 'Syntax:\nMASTER_POS_WAIT(log_name,log_pos[,timeout])\n\nThis function is useful for control of master/slave synchronization. It\nblocks until the slave has read and applied all updates up to the\nspecified position in the master log. The return value is the number of\nlog events the slave had to wait for to advance to the specified\nposition. The function returns NULL if the slave SQL thread is not\nstarted, the slave\'s master information is not initialized, the\narguments are incorrect, or an error occurs. It returns -1 if the\ntimeout has been exceeded. If the slave SQL thread stops while\nMASTER_POS_WAIT() is waiting, the function returns NULL. If the slave\nis past the specified position, the function returns immediately.\n\nIf a timeout value is specified, MASTER_POS_WAIT() stops waiting when\ntimeout seconds have elapsed. timeout must be greater than 0; a zero or\nnegative timeout means no timeout.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(27, 'REGEXP', 36, 'Syntax:\nexpr REGEXP pat, expr RLIKE pat\n\nPerforms a pattern match of a string expression expr against a pattern\npat. The pattern can be an extended regular expression. The syntax for\nregular expressions is discussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/regexp.html. Returns 1 if expr\nmatches pat; otherwise it returns 0. If either expr or pat is NULL, the\nresult is NULL. RLIKE is a synonym for REGEXP, provided for mSQL\ncompatibility.\n\nThe pattern need not be a literal string. For example, it can be\nspecified as a string expression or table column.\n\n*Note*: Because MySQL uses the C escape syntax in strings (for example,\n"\\n" to represent the newline character), you must double any "\\" that\nyou use in your REGEXP strings.\n\nREGEXP is not case sensitive, except when used with binary strings.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/regexp.html\n\n', 'mysql> SELECT \'Monty!\' REGEXP \'m%y%%\';\n        -> 0\nmysql> SELECT \'Monty!\' REGEXP \'.*\';\n        -> 1\nmysql> SELECT \'new*\\n*line\' REGEXP \'new\\\\*.\\\\*line\';\n        -> 1\nmysql> SELECT \'a\' REGEXP \'A\', \'a\' REGEXP BINARY \'A\';\n        -> 1  0\nmysql> SELECT \'a\' REGEXP \'^[a-d]\';\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/regexp.html'),
	(28, 'IF STATEMENT', 23, 'Syntax:\nIF search_condition THEN statement_list\n    [ELSEIF search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND IF\n\nIF implements a basic conditional construct. If the search_condition\nevaluates to true, the corresponding SQL statement list is executed. If\nno search_condition matches, the statement list in the ELSE clause is\nexecuted. Each statement_list consists of one or more statements.\n\n*Note*: There is also an IF() function, which differs from the IF\nstatement described here. See\nhttp://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/if-statement.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/if-statement.html'),
	(29, '^', 18, 'Syntax:\n^\n\nBitwise XOR:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html\n\n', 'mysql> SELECT 1 ^ 1;\n        -> 0\nmysql> SELECT 1 ^ 0;\n        -> 1\nmysql> SELECT 11 ^ 3;\n        -> 8\n', 'http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html'),
	(30, 'DROP VIEW', 38, 'Syntax:\nDROP VIEW [IF EXISTS]\n    view_name [, view_name] ...\n    [RESTRICT | CASCADE]\n\nDROP VIEW removes one or more views. You must have the DROP privilege\nfor each view. If any of the views named in the argument list do not\nexist, MySQL returns an error indicating by name which non-existing\nviews it was unable to drop, but it also drops all of the views in the\nlist that do exist.\n\nThe IF EXISTS clause prevents an error from occurring for views that\ndon\'t exist. When this clause is given, a NOTE is generated for each\nnon-existent view. See [HELP SHOW WARNINGS].\n\nRESTRICT and CASCADE, if given, are parsed and ignored.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-view.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-view.html'),
	(31, 'WITHIN', 30, 'Within(g1,g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially within g2. This\ntests the opposite relationship as Contains().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html'),
	(32, 'WEEK', 31, 'Syntax:\nWEEK(date[,mode])\n\nThis function returns the week number for date. The two-argument form\nof WEEK() allows you to specify whether the week starts on Sunday or\nMonday and whether the return value should be in the range from 0 to 53\nor from 1 to 53. If the mode argument is omitted, the value of the\ndefault_week_format system variable is used. See\nhttp://dev.mysql.com/doc/refman/6.0/en/server-system-variables.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT WEEK(\'2008-02-20\');\n        -> 7\nmysql> SELECT WEEK(\'2008-02-20\',0);\n        -> 7\nmysql> SELECT WEEK(\'2008-02-20\',1);\n        -> 8\nmysql> SELECT WEEK(\'2008-12-31\',1);\n        -> 53\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(33, 'SHOW PLUGINS', 26, 'Syntax:\nSHOW PLUGINS\n\nSHOW PLUGINS displays information about known plugins.\n\nmysql> SHOW PLUGINS;\n+------------+--------+----------------+---------+\n| Name       | Status | Type           | Library |\n+------------+--------+----------------+---------+\n| MEMORY     | ACTIVE | STORAGE ENGINE | NULL    |\n| MyISAM     | ACTIVE | STORAGE ENGINE | NULL    |\n| InnoDB     | ACTIVE | STORAGE ENGINE | NULL    |\n| ARCHIVE    | ACTIVE | STORAGE ENGINE | NULL    |\n| CSV        | ACTIVE | STORAGE ENGINE | NULL    |\n| BLACKHOLE  | ACTIVE | STORAGE ENGINE | NULL    |\n| FEDERATED  | ACTIVE | STORAGE ENGINE | NULL    |\n| MRG_MYISAM | ACTIVE | STORAGE ENGINE | NULL    |\n+------------+--------+----------------+---------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-plugins.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-plugins.html'),
	(34, 'DROP FUNCTION UDF', 21, 'Syntax:\nDROP FUNCTION function_name\n\nThis statement drops the user-defined function (UDF) named\nfunction_name.\n\nTo drop a function, you must have the DELETE privilege for the mysql\ndatabase. This is because DROP FUNCTION removes a row from the\nmysql.func system table that records the function\'s name, type, and\nshared library name.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-function-udf.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-function-udf.html'),
	(35, 'PREPARE', 26, 'Syntax:\nPREPARE stmt_name FROM preparable_stmt\n\nThe PREPARE statement prepares a statement and assigns it a name,\nstmt_name, by which to refer to the statement later. Statement names\nare not case sensitive. preparable_stmt is either a string literal or a\nuser variable that contains the text of the statement. The text must\nrepresent a single SQL statement, not multiple statements. Within the\nstatement, "?" characters can be used as parameter markers to indicate\nwhere data values are to be bound to the query later when you execute\nit. The "?" characters should not be enclosed within quotes, even if\nyou intend to bind them to string values. Parameter markers can be used\nonly where data values should appear, not for SQL keywords,\nidentifiers, and so forth.\n\nIf a prepared statement with the given name already exists, it is\ndeallocated implicitly before the new statement is prepared. This means\nthat if the new statement contains an error and cannot be prepared, an\nerror is returned and no statement with the given name exists.\n\nA prepared statement is executed with EXECUTE and released with\nDEALLOCATE PREPARE.\n\nThe scope of a prepared statement is the session within which it is\ncreated. Other sessions cannot see it.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/prepare.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/prepare.html'),
	(36, 'LOCK', 8, 'Syntax:\nLOCK TABLES\n    tbl_name [[AS] alias] lock_type\n    [, tbl_name [[AS] alias] lock_type] ...\n\nlock_type:\n    READ [LOCAL]\n  | [LOW_PRIORITY] WRITE\n  | IN SHARE MODE [NOWAIT]\n  | IN EXCLUSIVE MODE [NOWAIT]\n\nUNLOCK TABLES\n\nMySQL enables client sessions to acquire table locks explicitly for the\npurpose of cooperating with other sessions for access to tables, or to\nprevent other sessions from modifying tables during periods when a\nsession requires exclusive access to them. A session can acquire or\nrelease locks only for itself. One session cannot acquire locks for\nanother session or release locks held by another session.\n\nLOCK TABLES explicitly acquires non-transactional or transactional\ntable locks for the current client session.\n\nTable locks can be acquired for base tables or views. You must have the\nLOCK TABLES privilege, and the SELECT privilege for each object to be\nlocked. (For view locking, LOCK TABLES adds all base tables used in the\nview to the set of tables to be locked and locks them automatically.)\n\nMySQL 6.0 supports non-transactional and transactional locks. These are\nintended for use in non-transactional or transactional context,\nrespectively. Non-transactional locks may be used to emulate\ntransactions or to get more speed when updating tables. This is\nexplained in more detail later in this section.\n\nUNLOCK TABLES explicitly releases non-transactional table locks held by\nthe current session. Transactional table locks are released by ending\nthe current transaction.\n\nAnother use for UNLOCK TABLES is to release the global read lock\nacquired with FLUSH TABLES WITH READ LOCK. (You can lock all tables in\nall databases with a read lock with the FLUSH TABLES WITH READ LOCK\nstatement. See [HELP FLUSH]. This is a very convenient way to get\nbackups if you have a file system such as Veritas that can take\nsnapshots in time.)\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/lock-tables.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/lock-tables.html'),
	(37, 'UPDATEXML', 36, 'Syntax:\nUpdateXML(xml_target, xpath_expr, new_xml)\n\nThis function replaces a single portion of a given fragment of XML\nmarkup xml_target with a new XML fragment new_xml, and then returns the\nchanged XML. The portion of xml_target that is replaced matches an\nXPath expression xpath_expr supplied by the user. If no expression\nmatching xpath_expr is found, or if multiple matches are found, the\nfunction returns the original xml_target XML fragment. All three\narguments should be strings.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/xml-functions.html\n\n', 'mysql> SELECT\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/a\', \'<e>fff</e>\') AS val1,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/b\', \'<e>fff</e>\') AS val2,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'//b\', \'<e>fff</e>\') AS val3,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/a/d\', \'<e>fff</e>\') AS val4,\n    ->   UpdateXML(\'<a><d></d><b>ccc</b><d></d></a>\', \'/a/d\', \'<e>fff</e>\') AS val5\n    -> \\G\n\n*************************** 1. row ***************************\nval1: <e>fff</e>\nval2: <a><b>ccc</b><d></d></a>\nval3: <a><e>fff</e><d></d></a>\nval4: <a><b>ccc</b><e>fff</e></a>\nval5: <a><d></d><b>ccc</b><d></d></a>\n', 'http://dev.mysql.com/doc/refman/6.0/en/xml-functions.html'),
	(38, 'RESET SLAVE', 26, 'Syntax:\nRESET SLAVE\n\nRESET SLAVE makes the slave forget its replication position in the\nmaster\'s binary logs. This statement is meant to be used for a clean\nstart: It deletes the master.info and relay-log.info files, all the\nrelay logs, and starts a new relay log.\n\n*Note*: All relay logs are deleted, even if they have not been\ncompletely executed by the slave SQL thread. (This is a condition\nlikely to exist on a replication slave if you have issued a STOP SLAVE\nstatement or if the slave is highly loaded.)\n\nIn MySQL 6.0 --- unlike the case in MySQL 5.1 and earlier --- RESET\nSLAVE no longer changes replication connection parameters such as\nmaster host, master port, master user, and master password. (This means\nthat START SLAVE can be issued without requiring a CHANGE MASTER TO\nstatement following RESET SLAVE.) However, connection parameters (which\nare now retained in memory even after RESET SLAVE is issued) are reset\nif the slave is shut down.\n\nIf the slave SQL thread was in the middle of replicating temporary\ntables when it was stopped, and RESET SLAVE is issued, these replicated\ntemporary tables are deleted on the slave.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/reset-slave.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/reset-slave.html'),
	(39, 'SHOW BINARY LOGS', 26, 'Syntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [HELP PURGE BINARY LOGS], that shows\nhow to determine which logs can be purged.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+\n| Log_name      | File_size |\n+---------------+-----------+\n| binlog.000015 |    724935 |\n| binlog.000016 |    733481 |\n+---------------+-----------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-binary-logs.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-binary-logs.html'),
	(40, 'POLYGON', 24, 'Polygon(ls1,ls2,...)\n\nConstructs a WKB Polygon value from a number of WKB LineString\narguments. If any argument does not represent the WKB of a LinearRing\n(that is, not a closed and simple LineString) the return value is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions'),
	(41, 'MINUTE', 31, 'Syntax:\nMINUTE(time)\n\nReturns the minute for time, in the range 0 to 59.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT MINUTE(\'2008-02-03 10:05:03\');\n        -> 5\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(42, 'DAY', 31, 'Syntax:\nDAY(date)\n\nDAY() is a synonym for DAYOFMONTH().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(43, 'MID', 36, 'Syntax:\nMID(str,pos,len)\n\nMID(str,pos,len) is a synonym for SUBSTRING(str,pos,len).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(44, 'UUID', 14, 'Syntax:\nUUID()\n\nReturns a Universal Unique Identifier (UUID) generated according to\n"DCE 1.1: Remote Procedure Call" (Appendix A) CAE (Common Applications\nEnvironment) Specifications published by The Open Group in October 1997\n(Document Number C706,\nhttp://www.opengroup.org/public/pubs/catalog/c706.htm).\n\nA UUID is designed as a number that is globally unique in space and\ntime. Two calls to UUID() are expected to generate two different\nvalues, even if these calls are performed on two separate computers\nthat are not connected to each other.\n\nA UUID is a 128-bit number represented by a utf8 string of five\nhexadecimal numbers in aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee format:\n\no The first three numbers are generated from a timestamp.\n\no The fourth number preserves temporal uniqueness in case the timestamp\n  value loses monotonicity (for example, due to daylight saving time).\n\no The fifth number is an IEEE 802 node number that provides spatial\n  uniqueness. A random number is substituted if the latter is not\n  available (for example, because the host computer has no Ethernet\n  card, or we do not know how to find the hardware address of an\n  interface on your operating system). In this case, spatial uniqueness\n  cannot be guaranteed. Nevertheless, a collision should have very low\n  probability.\n\n  Currently, the MAC address of an interface is taken into account only\n  on FreeBSD and Linux. On other operating systems, MySQL uses a\n  randomly generated 48-bit number.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', 'mysql> SELECT UUID();\n        -> \'6ccd780c-baba-1026-9564-0040f4311e29\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(45, 'LINESTRING', 24, 'LineString(pt1,pt2,...)\n\nConstructs a WKB LineString value from a number of WKB Point arguments.\nIf any argument is not a WKB Point, the return value is NULL. If the\nnumber of Point arguments is less than two, the return value is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions'),
	(46, 'SLEEP', 14, 'Syntax:\nSLEEP(duration)\n\nSleeps (pauses) for the number of seconds given by the duration\nargument, then returns 0. If SLEEP() is interrupted, it returns 1. The\nduration may have a fractional part given in microseconds.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(47, 'CONNECTION_ID', 15, 'Syntax:\nCONNECTION_ID()\n\nReturns the connection ID (thread ID) for the connection. Every\nconnection has an ID that is unique among the set of currently\nconnected clients.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT CONNECTION_ID();\n        -> 23786\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(48, 'DELETE', 27, 'Syntax:\nSingle-table syntax:\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM tbl_name\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n\nMultiple-table syntax:\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE]\n    tbl_name[.*] [, tbl_name[.*]] ...\n    FROM table_references\n    [WHERE where_condition]\n\nOr:\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE]\n    FROM tbl_name[.*] [, tbl_name[.*]] ...\n    USING table_references\n    [WHERE where_condition]\n\nFor the single-table syntax, the DELETE statement deletes rows from\ntbl_name and returns a count of the number of deleted rows. This count\ncan be obtained by calling the ROW_COUNT() function (see\nhttp://dev.mysql.com/doc/refman/6.0/en/information-functions.html). The\nWHERE clause, if given, specifies the conditions that identify which\nrows to delete. With no WHERE clause, all rows are deleted. If the\nORDER BY clause is specified, the rows are deleted in the order that is\nspecified. The LIMIT clause places a limit on the number of rows that\ncan be deleted.\n\nFor the multiple-table syntax, DELETE deletes from each tbl_name the\nrows that satisfy the conditions. In this case, ORDER BY and LIMIT\ncannot be used.\n\nwhere_condition is an expression that evaluates to true for each row to\nbe deleted. It is specified as described in\nhttp://dev.mysql.com/doc/refman/6.0/en/select.html.\n\nCurrently, you cannot delete from a table and select from the same\ntable in a subquery.\n\nAs stated, a DELETE statement with no WHERE clause deletes all rows. A\nfaster way to do this, when you do not need to know the number of\ndeleted rows, is to use TRUNCATE TABLE. However, within a transaction\nor if you have a lock on the table, TRUNCATE TABLE cannot be used\nwhereas DELETE can. See [HELP TRUNCATE TABLE], and [HELP LOCK].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/delete.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/delete.html'),
	(49, 'ROUND', 4, 'Syntax:\nROUND(X), ROUND(X,D)\n\nRounds the argument X to D decimal places. The rounding algorithm\ndepends on the data type of X. D defaults to 0 if not specified. D can\nbe negative to cause D digits left of the decimal point of the value X\nto become zero.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT ROUND(-1.23);\n        -> -1\nmysql> SELECT ROUND(-1.58);\n        -> -2\nmysql> SELECT ROUND(1.58);\n        -> 2\nmysql> SELECT ROUND(1.298, 1);\n        -> 1.3\nmysql> SELECT ROUND(1.298, 0);\n        -> 1\nmysql> SELECT ROUND(23.298, -1);\n        -> 20\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(50, 'NULLIF', 7, 'Syntax:\nNULLIF(expr1,expr2)\n\nReturns NULL if expr1 = expr2 is true, otherwise returns expr1. This is\nthe same as CASE WHEN expr1 = expr2 THEN NULL ELSE expr1 END.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html\n\n', 'mysql> SELECT NULLIF(1,1);\n        -> NULL\nmysql> SELECT NULLIF(1,2);\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html'),
	(51, 'CLOSE', 23, 'Syntax:\nCLOSE cursor_name\n\nThis statement closes a previously opened cursor.\n\nIf not closed explicitly, a cursor is closed at the end of the compound\nstatement in which it was declared.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/close.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/close.html'),
	(52, 'STOP SLAVE', 26, 'Syntax:\nSTOP SLAVE [thread_type [, thread_type] ... ]\n\nthread_type: IO_THREAD | SQL_THREAD\n\nStops the slave threads. STOP SLAVE requires the SUPER privilege.\n\nLike START SLAVE, this statement may be used with the IO_THREAD and\nSQL_THREAD options to name the thread or threads to be stopped.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/stop-slave.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/stop-slave.html'),
	(53, 'TIMEDIFF', 31, 'Syntax:\nTIMEDIFF(expr1,expr2)\n\nTIMEDIFF() returns expr1 - expr2 expressed as a time value. expr1 and\nexpr2 are time or date-and-time expressions, but both must be of the\nsame type.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT TIMEDIFF(\'2000:01:01 00:00:00\',\n    ->                 \'2000:01:01 00:00:00.000001\');\n        -> \'-00:00:00.000001\'\nmysql> SELECT TIMEDIFF(\'2008-12-31 23:59:59.000001\',\n    ->                 \'2008-12-30 01:01:01.000002\');\n        -> \'46:58:57.999999\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(54, 'REPLACE FUNCTION', 36, 'Syntax:\nREPLACE(str,from_str,to_str)\n\nReturns the string str with all occurrences of the string from_str\nreplaced by the string to_str. REPLACE() performs a case-sensitive\nmatch when searching for from_str.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT REPLACE(\'www.mysql.com\', \'w\', \'Ww\');\n        -> \'WwWwWw.mysql.com\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(55, 'USE', 28, 'Syntax:\nUSE db_name\n\nThe USE db_name statement tells MySQL to use the db_name database as\nthe default (current) database for subsequent statements. The database\nremains the default until the end of the session or another USE\nstatement is issued:\n\nUSE db1;\nSELECT COUNT(*) FROM mytable;   # selects from db1.mytable\nUSE db2;\nSELECT COUNT(*) FROM mytable;   # selects from db2.mytable\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/use.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/use.html'),
	(56, 'LINEFROMTEXT', 3, 'LineFromText(wkt[,srid]), LineStringFromText(wkt[,srid])\n\nConstructs a LINESTRING value using its WKT representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions'),
	(57, 'CASE OPERATOR', 7, 'Syntax:\nCASE value WHEN [compare_value] THEN result [WHEN [compare_value] THEN\nresult ...] [ELSE result] END\n\nCASE WHEN [condition] THEN result [WHEN [condition] THEN result ...]\n[ELSE result] END\n\nThe first version returns the result where value=compare_value. The\nsecond version returns the result for the first condition that is true.\nIf there was no matching result value, the result after ELSE is\nreturned, or NULL if there is no ELSE part.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html\n\n', 'mysql> SELECT CASE 1 WHEN 1 THEN \'one\'\n    ->     WHEN 2 THEN \'two\' ELSE \'more\' END;\n        -> \'one\'\nmysql> SELECT CASE WHEN 1>0 THEN \'true\' ELSE \'false\' END;\n        -> \'true\'\nmysql> SELECT CASE BINARY \'B\'\n    ->     WHEN \'a\' THEN 1 WHEN \'b\' THEN 2 END;\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html'),
	(58, 'SHOW MASTER STATUS', 26, 'Syntax:\nSHOW MASTER STATUS\n\nProvides status information about the binary log files of the master.\nExample:\n\nmysql> SHOW MASTER STATUS;\n+---------------+----------+--------------+------------------+\n| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n+---------------+----------+--------------+------------------+\n| mysql-bin.003 | 73       | test         | manual,mysql     |\n+---------------+----------+--------------+------------------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-master-status.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-master-status.html'),
	(59, 'ADDTIME', 31, 'Syntax:\nADDTIME(expr1,expr2)\n\nADDTIME() adds expr2 to expr1 and returns the result. expr1 is a time\nor datetime expression, and expr2 is a time expression.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT ADDTIME(\'2007-12-31 23:59:59.999999\', \'1 1:1:1.000002\');\n        -> \'2008-01-02 01:01:01.000001\'\nmysql> SELECT ADDTIME(\'01:00:00.999999\', \'02:00:00.999998\');\n        -> \'03:00:01.999997\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(60, 'SPATIAL', 33, 'MySQL can create spatial indexes using syntax similar to that for\ncreating regular indexes, but extended with the SPATIAL keyword.\nCurrently, columns in spatial indexes must be declared NOT NULL. The\nfollowing examples demonstrate how to create spatial indexes:\n\no With CREATE TABLE:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL, SPATIAL INDEX(g));\n\no With ALTER TABLE:\n\nALTER TABLE geom ADD SPATIAL INDEX(g);\n\no With CREATE INDEX:\n\nCREATE SPATIAL INDEX sp_index ON geom (g);\n\nFor MyISAM tables, SPATIAL INDEX creates an R-tree index. For storage\nengines that support non-spatial indexing of spatial columns, the\nengine creates a B-tree index. A B-tree index on spatial values will be\nuseful for exact-value lookups, but not for range scans.\n\nFor more information on indexing spatial columns, see [HELP CREATE\nINDEX].\n\nTo drop spatial indexes, use ALTER TABLE or DROP INDEX:\n\no With ALTER TABLE:\n\nALTER TABLE geom DROP INDEX g;\n\no With DROP INDEX:\n\nDROP INDEX sp_index ON geom;\n\nExample: Suppose that a table geom contains more than 32,000\ngeometries, which are stored in the column g of type GEOMETRY. The\ntable also has an AUTO_INCREMENT column fid for storing object ID\nvalues.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-indexes.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-indexes.html'),
	(61, 'TIMESTAMPDIFF', 31, 'Syntax:\nTIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)\n\nReturns datetime_expr2 - datetime_expr1, where datetime_expr1 and\ndatetime_expr2 are date or datetime expressions. One expression may be\na date and the other a datetime; a date value is treated as a datetime\nhaving the time part \'00:00:00\' where necessary. The unit for the\nresult (an integer) is given by the unit argument. The legal values for\nunit are the same as those listed in the description of the\nTIMESTAMPADD() function.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT TIMESTAMPDIFF(MONTH,\'2003-02-01\',\'2003-05-01\');\n        -> 3\nmysql> SELECT TIMESTAMPDIFF(YEAR,\'2002-05-01\',\'2001-01-01\');\n        -> -1\nmysql> SELECT TIMESTAMPDIFF(MINUTE,\'2003-02-01\',\'2003-05-01 12:05:55\');\n        -> 128885\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(62, 'UPPER', 36, 'Syntax:\nUPPER(str)\n\nReturns the string str with all characters changed to uppercase\naccording to the current character set mapping. The default is latin1\n(cp1252 West European).\n\nmysql> SELECT UPPER(\'Hej\');\n        -> \'HEJ\'\n\nUPPER() is ineffective when applied to binary strings (BINARY,\nVARBINARY, BLOB). The description of LOWER() shows how to perform\nlettercase conversion of binary strings.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(63, 'FROM_UNIXTIME', 31, 'Syntax:\nFROM_UNIXTIME(unix_timestamp), FROM_UNIXTIME(unix_timestamp,format)\n\nReturns a representation of the unix_timestamp argument as a value in\n\'YYYY-MM-DD HH:MM:SS\' or YYYYMMDDHHMMSS.uuuuuu format, depending on\nwhether the function is used in a string or numeric context. The value\nis expressed in the current time zone. unix_timestamp is an internal\ntimestamp value such as is produced by the UNIX_TIMESTAMP() function.\n\nIf format is given, the result is formatted according to the format\nstring, which is used the same way as listed in the entry for the\nDATE_FORMAT() function.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT FROM_UNIXTIME(1196440219);\n        -> \'2007-11-30 10:30:19\'\nmysql> SELECT FROM_UNIXTIME(1196440219) + 0;\n        -> 20071130103019.000000\nmysql> SELECT FROM_UNIXTIME(UNIX_TIMESTAMP(),\n    ->                      \'%Y %D %M %h:%i:%s %x\');\n        -> \'2007 30th November 10:30:59 2007\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(64, 'MEDIUMBLOB', 22, 'MEDIUMBLOB\n\nA BLOB column with a maximum length of 16,777,215 (224 - 1) bytes. Each\nMEDIUMBLOB value is stored using a three-byte length prefix that\nindicates the number of bytes in the value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(65, 'SHA2', 11, 'Syntax:\nSHA2(str, hash_length)\n\nCalculates the SHA-2 family of hash functions (SHA-224, SHA-256,\nSHA-384, and SHA-512). The first argument is the cleartext string to be\nhashed. The second argument indicates the desired bit length of the\nresult, which must have a value of 224, 256, 384, or 512. If either\nargument is NULL or the hash length is not one of the allowed values,\nthe return value is NULL. Otherwise, the function result is a hash\nvalue containing the desired number of bits, returned as a binary\nstring of hex digits.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'mysql> SELECT SHA2(\'abc\', 224);\n        -> \'23097d223405d8228642a477bda255b32aadbce4bda0b3f7e36c9da7\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(66, 'IFNULL', 7, 'Syntax:\nIFNULL(expr1,expr2)\n\nIf expr1 is not NULL, IFNULL() returns expr1; otherwise it returns\nexpr2. IFNULL() returns a numeric or string value, depending on the\ncontext in which it is used.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html\n\n', 'mysql> SELECT IFNULL(1,0);\n        -> 1\nmysql> SELECT IFNULL(NULL,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,\'yes\');\n        -> \'yes\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html'),
	(67, 'SHOW FUNCTION CODE', 26, 'Syntax:\nSHOW FUNCTION CODE func_name\n\nThis statement is similar to SHOW PROCEDURE CODE but for stored\nfunctions. See [HELP SHOW PROCEDURE CODE].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-function-code.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-function-code.html'),
	(68, 'SHOW ERRORS', 26, 'Syntax:\nSHOW ERRORS [LIMIT [offset,] row_count]\nSHOW COUNT(*) ERRORS\n\nThis statement is similar to SHOW WARNINGS, except that instead of\ndisplaying errors, warnings, and notes, it displays only errors.\n\nThe LIMIT clause has the same syntax as for the SELECT statement. See\nhttp://dev.mysql.com/doc/refman/6.0/en/select.html.\n\nThe SHOW COUNT(*) ERRORS statement displays the number of errors. You\ncan also retrieve this number from the error_count variable:\n\nSHOW COUNT(*) ERRORS;\nSELECT @@error_count;\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-errors.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-errors.html'),
	(69, 'LEAST', 17, 'Syntax:\nLEAST(value1,value2,...)\n\nWith two or more arguments, returns the smallest (minimum-valued)\nargument. The arguments are compared using the following rules:\n\no If the return value is used in an INTEGER context or all arguments\n  are integer-valued, they are compared as integers.\n\no If the return value is used in a REAL context or all arguments are\n  real-valued, they are compared as reals.\n\no If any argument is a case-sensitive string, the arguments are\n  compared as case-sensitive strings.\n\no In all other cases, the arguments are compared as case-insensitive\n  strings.\n\nLEAST() returns NULL if any argument is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT LEAST(2,0);\n        -> 0\nmysql> SELECT LEAST(34.0,3.0,5.0,767.0);\n        -> 3.0\nmysql> SELECT LEAST(\'B\',\'A\',\'C\');\n        -> \'A\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(70, '=', 17, '=\n\nEqual:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 1 = 0;\n        -> 0\nmysql> SELECT \'0\' = 0;\n        -> 1\nmysql> SELECT \'0.0\' = 0;\n        -> 1\nmysql> SELECT \'0.01\' = 0;\n        -> 0\nmysql> SELECT \'.01\' = 0.01;\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(71, 'REVERSE', 36, 'Syntax:\nREVERSE(str)\n\nReturns the string str with the order of the characters reversed.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT REVERSE(\'abc\');\n        -> \'cba\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(72, 'ISNULL', 17, 'Syntax:\nISNULL(expr)\n\nIf expr is NULL, ISNULL() returns 1, otherwise it returns 0.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT ISNULL(1+1);\n        -> 0\nmysql> SELECT ISNULL(1/0);\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(73, 'BINARY', 22, 'BINARY(M)\n\nThe BINARY type is similar to the CHAR type, but stores binary byte\nstrings rather than non-binary character strings. M represents the\ncolumn length in bytes.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(74, 'BLOB DATA TYPE', 22, 'A BLOB is a binary large object that can hold a variable amount of\ndata. The four BLOB types are TINYBLOB, BLOB, MEDIUMBLOB, and LONGBLOB.\nThese differ only in the maximum length of the values they can hold.\nThe four TEXT types are TINYTEXT, TEXT, MEDIUMTEXT, and LONGTEXT. These\ncorrespond to the four BLOB types and have the same maximum lengths and\nstorage requirements. See\nhttp://dev.mysql.com/doc/refman/6.0/en/storage-requirements.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/blob.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/blob.html'),
	(75, 'BOUNDARY', 35, 'Boundary(g)\n\nReturns a geometry that is the closure of the combinatorial boundary of\nthe geometry value g.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions'),
	(76, 'CREATE USER', 9, 'Syntax:\nCREATE USER user [IDENTIFIED BY [PASSWORD] \'password\']\n    [, user [IDENTIFIED BY [PASSWORD] \'password\']] ...\n\nThe CREATE USER statement creates new MySQL accounts. To use it, you\nmust have the global CREATE USER privilege or the INSERT privilege for\nthe mysql database. For each account, CREATE USER creates a new row in\nthe mysql.user table that has no privileges. An error occurs if the\naccount already exists. Each account is named using the same format as\nfor the GRANT statement; for example, \'jeffrey\'@\'localhost\'. If you\nspecify only the user name part of the account name, a host name part\nof \'%\' is used. For additional information about specifying account\nnames, see [HELP GRANT].\n\nThe account can be given a password with the optional IDENTIFIED BY\nclause. The user value and the password are given the same way as for\nthe GRANT statement. In particular, to specify the password in plain\ntext, omit the PASSWORD keyword. To specify the password as the hashed\nvalue as returned by the PASSWORD() function, include the PASSWORD\nkeyword. See [HELP GRANT].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-user.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-user.html'),
	(77, 'POINT', 24, 'Point(x,y)\n\nConstructs a WKB Point using its coordinates.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions'),
	(78, 'CURRENT_USER', 15, 'Syntax:\nCURRENT_USER, CURRENT_USER()\n\nReturns the user name and host name combination for the MySQL account\nthat the server used to authenticate the current client. This account\ndetermines your access privileges. The return value is a string in the\nutf8 character set.\n\nThe value of CURRENT_USER() can differ from the value of USER().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT USER();\n        -> \'davida@localhost\'\nmysql> SELECT * FROM mysql.user;\nERROR 1044: Access denied for user \'\'@\'localhost\' to\ndatabase \'mysql\'\nmysql> SELECT CURRENT_USER();\n        -> \'@localhost\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(79, 'LCASE', 36, 'Syntax:\nLCASE(str)\n\nLCASE() is a synonym for LOWER().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(80, '<=', 17, 'Syntax:\n<=\n\nLess than or equal:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 0.1 <= 2;\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(81, 'SHOW PROFILES', 26, 'Syntax:\nSHOW PROFILE [type [, type] ... ]\n    [FOR QUERY n]\n    [LIMIT row_count [OFFSET offset]]\n\ntype:\n    ALL\n  | BLOCK IO\n  | CONTEXT SWITCHES\n  | CPU\n  | IPC\n  | MEMORY\n  | PAGE FAULTS\n  | SOURCE\n  | SWAPS\n\nThe SHOW PROFILES and SHOW PROFILE statements display profiling\ninformation that indicates resource usage for statements executed\nduring the course of the current session.\n\nProfiling is controlled by the profiling session variable, which has a\ndefault value of 0 (OFF). Profiling is enabled by setting profiling to\n1 or ON:\n\nmysql> SET profiling = 1;\n\nSHOW PROFILES displays a list of the most recent statements sent to the\nmaster. The size of the list is controlled by the\nprofiling_history_size session variable, which has a default value of\n15. The maximum value is 100. Setting the value to 0 has the practical\neffect of disabling profiling.\n\nAll statements are profiled except SHOW PROFILES and SHOW PROFILE, so\nyou will find neither of those statements in the profile list.\nMalformed statements are profiled. For example, SHOW PROFILING is an\nillegal statement, and a syntax error occurs if you try to execute it,\nbut it will show up in the profiling list.\n\nSHOW PROFILE displays detailed information about a single statement.\nWithout the FOR QUERY n clause, the output pertains to the most\nrecently executed statement. If FOR QUERY n is included, SHOW PROFILE\ndisplays information for statement n. The values of n correspond to the\nQuery_ID values displayed by SHOW PROFILES.\n\nThe LIMIT row_count clause may be given to limit the output to\nrow_count rows. If LIMIT is given, OFFSET offset may be added to begin\nthe output offset rows into the full set of rows.\n\nBy default, SHOW PROFILE displays Status and Duration columns. The\nStatus values are like the State values displayed by SHOW PROCESSLIST,\nalthought there might be some minor differences in interpretion for the\ntwo statements for some status values (see\nhttp://dev.mysql.com/doc/refman/6.0/en/thread-information.html).\n\nOptional type values may be specified to display specific additional\ntypes of information:\n\no ALL displays all information\n\no BLOCK IO displays counts for block input and output operations\n\no CONTEXT SWITCHES displays counts for voluntary and involuntary\n  context switches\n\no CPU displays user and system CPU usage times\n\no IPC displays counts for messages sent and received\n\no MEMORY is not currently implemented\n\no PAGE FAULTS displays counts for major and minor page faults\n\no SOURCE displays the names of functions from the source code, together\n  with the name and line number of the file in which the function\n  occurs\n\no SWAPS displays swap counts\n\nProfiling is enabled per session. When a session ends, its profiling\ninformation is lost.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-profiles.html\n\n', 'mysql> SELECT @@profiling;\n+-------------+\n| @@profiling |\n+-------------+\n|           0 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> SET profiling = 1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> DROP TABLE IF EXISTS t1;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> CREATE TABLE T1 (id INT);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SHOW PROFILES;\n+----------+----------+--------------------------+\n| Query_ID | Duration | Query                    |\n+----------+----------+--------------------------+\n|        0 | 0.000088 | SET PROFILING = 1        |\n|        1 | 0.000136 | DROP TABLE IF EXISTS t1  |\n|        2 | 0.011947 | CREATE TABLE t1 (id INT) |\n+----------+----------+--------------------------+\n3 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE;\n+----------------------+----------+\n| Status               | Duration |\n+----------------------+----------+\n| checking permissions | 0.000040 |\n| creating table       | 0.000056 |\n| After create         | 0.011363 |\n| query end            | 0.000375 |\n| freeing items        | 0.000089 |\n| logging slow query   | 0.000019 |\n| cleaning up          | 0.000005 |\n+----------------------+----------+\n7 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE FOR QUERY 1;\n+--------------------+----------+\n| Status             | Duration |\n+--------------------+----------+\n| query end          | 0.000107 |\n| freeing items      | 0.000008 |\n| logging slow query | 0.000015 |\n| cleaning up        | 0.000006 |\n+--------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE CPU FOR QUERY 2;\n+----------------------+----------+----------+------------+\n| Status               | Duration | CPU_user | CPU_system |\n+----------------------+----------+----------+------------+\n| checking permissions | 0.000040 | 0.000038 |   0.000002 |\n| creating table       | 0.000056 | 0.000028 |   0.000028 |\n| After create         | 0.011363 | 0.000217 |   0.001571 |\n| query end            | 0.000375 | 0.000013 |   0.000028 |\n| freeing items        | 0.000089 | 0.000010 |   0.000014 |\n| logging slow query   | 0.000019 | 0.000009 |   0.000010 |\n| cleaning up          | 0.000005 | 0.000003 |   0.000002 |\n+----------------------+----------+----------+------------+\n7 rows in set (0.00 sec)\n', 'http://dev.mysql.com/doc/refman/6.0/en/show-profiles.html'),
	(82, 'UPDATE', 27, 'Syntax:\nSingle-table syntax:\n\nUPDATE [LOW_PRIORITY] [IGNORE] table_reference\n    SET col_name1={expr1|DEFAULT} [, col_name2={expr2|DEFAULT}] ...\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n\nMultiple-table syntax:\n\nUPDATE [LOW_PRIORITY] [IGNORE] table_references\n    SET col_name1={expr1|DEFAULT} [, col_name2={expr2|DEFAULT}] ...\n    [WHERE where_condition]\n\nFor the single-table syntax, the UPDATE statement updates columns of\nexisting rows in the named table with new values. The SET clause\nindicates which columns to modify and the values they should be given.\nEach value can be given as an expression, or the keyword DEFAULT to set\na column explicitly to its default value. The WHERE clause, if given,\nspecifies the conditions that identify which rows to update. With no\nWHERE clause, all rows are updated. If the ORDER BY clause is\nspecified, the rows are updated in the order that is specified. The\nLIMIT clause places a limit on the number of rows that can be updated.\n\nFor the multiple-table syntax, UPDATE updates rows in each table named\nin table_references that satisfy the conditions. In this case, ORDER BY\nand LIMIT cannot be used.\n\nwhere_condition is an expression that evaluates to true for each row to\nbe updated.\n\ntable_references and where_condition are is specified as described in\nhttp://dev.mysql.com/doc/refman/6.0/en/select.html.\n\nThe UPDATE statement supports the following modifiers:\n\no If you use the LOW_PRIORITY keyword, execution of the UPDATE is\n  delayed until no other clients are reading from the table. This\n  affects only storage engines that use only table-level locking\n  (MyISAM, MEMORY, MERGE).\n\no If you use the IGNORE keyword, the update statement does not abort\n  even if errors occur during the update. Rows for which duplicate-key\n  conflicts occur are not updated. Rows for which columns are updated\n  to values that would cause data conversion errors are updated to the\n  closest valid values instead.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/update.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/update.html'),
	(83, 'IS NOT NULL', 17, 'Syntax:\nIS NOT NULL\n\nTests whether a value is not NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 1 IS NOT NULL, 0 IS NOT NULL, NULL IS NOT NULL;\n        -> 1, 1, 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(84, 'CASE STATEMENT', 23, 'Syntax:\nCASE case_value\n    WHEN when_value THEN statement_list\n    [WHEN when_value THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n\nOr:\n\nCASE\n    WHEN search_condition THEN statement_list\n    [WHEN search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n\nThe CASE statement for stored programs implements a complex conditional\nconstruct. If a search_condition evaluates to true, the corresponding\nSQL statement list is executed. If no search condition matches, the\nstatement list in the ELSE clause is executed. Each statement_list\nconsists of one or more statements.\n\nIf no when_value or search_condition matches the value tested and the\nCASE statement contains no ELSE clause, a Case not found for CASE\nstatement error results.\n\nEach statement_list consists of one or more statements; an empty\nstatement_list is not allowed. To handle situations where no value is\nmatched by any WHEN clause, use an ELSE containing an empty BEGIN ...\nEND block, as shown in this example: DELIMITER | CREATE PROCEDURE p()\nBEGIN DECLARE v INT DEFAULT 1; CASE v WHEN 2 THEN SELECT v; WHEN 3 THEN\nSELECT 0; ELSE BEGIN END; END CASE; END; | (The indentation used here\nin the ELSE clause is for purposes of clarity only, and is not\notherwise significant.)\n\n*Note*: The syntax of the CASE statement used inside stored programs\ndiffers slightly from that of the SQL CASE expression described in\nhttp://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html. The\nCASE statement cannot have an ELSE NULL clause, and it is terminated\nwith END CASE instead of END.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/case-statement.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/case-statement.html'),
	(85, 'EXECUTE STATEMENT', 26, 'Syntax:\nEXECUTE stmt_name\n    [USING @var_name [, @var_name] ...]\n\nAfter preparing a statement with PREPARE, you execute it with an\nEXECUTE statement that refers to the prepared statement name. If the\nprepared statement contains any parameter markers, you must supply a\nUSING clause that lists user variables containing the values to be\nbound to the parameters. Parameter values can be supplied only by user\nvariables, and the USING clause must name exactly as many variables as\nthe number of parameter markers in the statement.\n\nYou can execute a given prepared statement multiple times, passing\ndifferent variables to it or setting the variables to different values\nbefore each execution.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/execute.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/execute.html'),
	(86, 'DROP INDEX', 38, 'Syntax:\nDROP INDEX index_name ON tbl_name\n\nDROP INDEX drops the index named index_name from the table tbl_name.\nThis statement is mapped to an ALTER TABLE statement to drop the index.\nSee [HELP ALTER TABLE].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-index.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-index.html'),
	(87, 'MATCH AGAINST', 36, 'Syntax:\nMATCH (col1,col2,...) AGAINST (expr [search_modifier])\n\nMySQL has support for full-text indexing and searching:\n\no A full-text index in MySQL is an index of type FULLTEXT.\n\no Full-text indexes can be used only with MyISAM tables, and can be\n  created only for CHAR, VARCHAR, or TEXT columns.\n\no A FULLTEXT index definition can be given in the CREATE TABLE\n  statement when a table is created, or added later using ALTER TABLE\n  or CREATE INDEX.\n\no For large data sets, it is much faster to load your data into a table\n  that has no FULLTEXT index and then create the index after that, than\n  to load data into a table that has an existing FULLTEXT index.\n\nFull-text searching is performed using MATCH() ... AGAINST syntax.\nMATCH() takes a comma-separated list that names the columns to be\nsearched. AGAINST takes a string to search for, and an optional\nmodifier that indicates what type of search to perform. The search\nstring must be a literal string, not a variable or a column name. There\nare three types of full-text searches:\n\no A boolean search interprets the search string using the rules of a\n  special query language. The string contains the words to search for.\n  It can also contain operators that specify requirements such that a\n  word must be present or absent in matching rows, or that it should be\n  weighted higher or lower than usual. Common words such as "some" or\n  "then" are stopwords and do not match if present in the search\n  string. The IN BOOLEAN MODE modifier specifies a boolean search. For\n  more information, see\n  http://dev.mysql.com/doc/refman/6.0/en/fulltext-boolean.html.\n\no A natural language search interprets the search string as a phrase in\n  natural human language (a phrase in free text). There are no special\n  operators. The stopword list applies. In addition, words that are\n  present in 50% or more of the rows are considered common and do not\n  match. Full-text searches are natural language searches if the IN\n  NATURAL LANGUAGE MODE modifier is given or if no modifier is given.\n\no A query expansion search is a modification of a natural language\n  search. The search string is used to perform a natural language\n  search. Then words from the most relevant rows returned by the search\n  are added to the search string and the search is done again. The\n  query returns the rows from the second search. The IN NATURAL\n  LANGUAGE MODE WITH QUERY EXPANSION or WITH QUERY EXPANSION modifier\n  specifies a query expansion search. For more information, see\n  http://dev.mysql.com/doc/refman/6.0/en/fulltext-query-expansion.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/fulltext-search.html\n\n', 'mysql> SELECT id, body, MATCH (title,body) AGAINST\n    -> (\'Security implications of running MySQL as root\'\n    -> IN NATURAL LANGUAGE MODE) AS score\n    -> FROM articles WHERE MATCH (title,body) AGAINST\n    -> (\'Security implications of running MySQL as root\'\n    -> IN NATURAL LANGUAGE MODE);\n+----+-------------------------------------+-----------------+\n| id | body                                | score           |\n+----+-------------------------------------+-----------------+\n|  4 | 1. Never run mysqld as root. 2. ... | 1.5219271183014 |\n|  6 | When configured properly, MySQL ... | 1.3114095926285 |\n+----+-------------------------------------+-----------------+\n2 rows in set (0.00 sec)\n', 'http://dev.mysql.com/doc/refman/6.0/en/fulltext-search.html'),
	(88, 'CREATE EVENT', 38, 'Syntax:\nCREATE \n    [DEFINER = { user | CURRENT_USER }]\n    EVENT \n    [IF NOT EXISTS]\n    event_name    \n    ON SCHEDULE schedule\n    [ON COMPLETION [NOT] PRESERVE]\n    [ENABLE | DISABLE | DISABLE ON SLAVE]\n    [COMMENT \'comment\']\n    DO sql_statement;\n\nschedule:\n    AT timestamp [+ INTERVAL interval] ...\n  | EVERY interval \n    [STARTS timestamp [+ INTERVAL interval] ...] \n    [ENDS timestamp [+ INTERVAL interval] ...]\n\ninterval:\n    quantity {YEAR | QUARTER | MONTH | DAY | HOUR | MINUTE |\n              WEEK | SECOND | YEAR_MONTH | DAY_HOUR | DAY_MINUTE |\n              DAY_SECOND | HOUR_MINUTE | HOUR_SECOND | MINUTE_SECOND}\n\nThis statement creates and schedules a new event. It requires the EVENT\nprivilege for the schema in which the event is to be created.\n\nThe minimum requirements for a valid CREATE EVENT statement are as\nfollows:\n\no The keywords CREATE EVENT plus an event name, which uniquely\n  identifies the event in the current schema.\n\no An ON SCHEDULE clause, which determines when and how often the event\n  executes.\n\no A DO clause, which contains the SQL statement to be executed by an\n  event.\n\nThis is an example of a minimal CREATE EVENT statement:\n\nCREATE EVENT myevent\n    ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 1 HOUR\n    DO\n      UPDATE myschema.mytable SET mycol = mycol + 1;\n\nThe previous statement creates an event named myevent. This event\nexecutes once --- one hour following its creation --- by running an SQL\nstatement that increments the value of the myschema.mytable table\'s\nmycol column by 1.\n\nThe event_name must be a valid MySQL identifier with a maximum length\nof 64 characters. It may be delimited using back ticks, and may be\nqualified with the name of a database schema. An event is associated\nwith both a MySQL user (the definer) and a schema, and its name must be\nunique among names of events within that schema. In general, the rules\ngoverning event names are the same as those for names of stored\nroutines. See http://dev.mysql.com/doc/refman/6.0/en/identifiers.html.\n\nIf no schema is indicated as part of event_name, the default (current)\nschema is assumed.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-event.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-event.html'),
	(89, 'ABS', 4, 'Syntax:\nABS(X)\n\nReturns the absolute value of X.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT ABS(2);\n        -> 2\nmysql> SELECT ABS(-32);\n        -> 32\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(90, 'POLYFROMWKB', 32, 'PolyFromWKB(wkb[,srid]), PolygonFromWKB(wkb[,srid])\n\nConstructs a POLYGON value using its WKB representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions'),
	(91, 'NOT LIKE', 36, 'Syntax:\nexpr NOT LIKE pat [ESCAPE \'escape_char\']\n\nThis is the same as NOT (expr LIKE pat [ESCAPE \'escape_char\']).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-comparison-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-comparison-functions.html'),
	(92, 'SPACE', 36, 'Syntax:\nSPACE(N)\n\nReturns a string consisting of N space characters.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT SPACE(6);\n        -> \'      \'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(93, 'MBR DEFINITION', 6, 'Its MBR (Minimum Bounding Rectangle), or Envelope. This is the bounding\ngeometry, formed by the minimum and maximum (X,Y) coordinates:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/gis-class-geometry.html\n\n', '((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))\n', 'http://dev.mysql.com/doc/refman/6.0/en/gis-class-geometry.html'),
	(94, 'GEOMETRYCOLLECTION', 24, 'GeometryCollection(g1,g2,...)\n\nConstructs a WKB GeometryCollection. If any argument is not a\nwell-formed WKB representation of a geometry, the return value is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions'),
	(95, 'MAX', 16, 'Syntax:\nMAX([DISTINCT] expr)\n\nReturns the maximum value of expr. MAX() may take a string argument; in\nsuch cases, it returns the maximum string value. See\nhttp://dev.mysql.com/doc/refman/6.0/en/mysql-indexes.html. The DISTINCT\nkeyword can be used to find the maximum of the distinct values of expr,\nhowever, this produces the same result as omitting DISTINCT.\n\nMAX() returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', 'mysql> SELECT student_name, MIN(test_score), MAX(test_score)\n    ->        FROM student\n    ->        GROUP BY student_name;\n', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(96, 'CREATE FUNCTION UDF', 21, 'Syntax:\nCREATE [AGGREGATE] FUNCTION function_name RETURNS {STRING|INTEGER|REAL|DECIMAL}\n    SONAME shared_library_name\n\nA user-defined function (UDF) is a way to extend MySQL with a new\nfunction that works like a native (built-in) MySQL function such as\nABS() or CONCAT().\n\nfunction_name is the name that should be used in SQL statements to\ninvoke the function. The RETURNS clause indicates the type of the\nfunction\'s return value. DECIMAL is a legal value after RETURNS, but\ncurrently DECIMAL functions return string values and should be written\nlike STRING functions.\n\nshared_library_name is the basename of the shared object file that\ncontains the code that implements the function. The file must be\nlocated in the plugin directory. This directory is given by the value\nof the plugin_dir system variable.\n\nTo create a function, you must have the INSERT privilege for the mysql\ndatabase. This is necessary because CREATE FUNCTION adds a row to the\nmysql.func system table that records the function\'s name, type, and\nshared library name. If you do not have this table, you should run the\nmysql_upgrade command to create it. See\nhttp://dev.mysql.com/doc/refman/6.0/en/mysql-upgrade.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-function-udf.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-function-udf.html'),
	(97, '*', 4, 'Syntax:\n*\n\nMultiplication:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html\n\n', 'mysql> SELECT 3*5;\n        -> 15\nmysql> SELECT 18014398509481984*18014398509481984.0;\n        -> 324518553658426726783156020576256.0\nmysql> SELECT 18014398509481984*18014398509481984;\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html'),
	(98, 'TIMESTAMP', 22, 'TIMESTAMP\n\nA timestamp. The range is \'1970-01-01 00:00:01\' UTC to \'2038-01-09\n03:14:07\' UTC. TIMESTAMP values are stored as the number of seconds\nsince the epoch (\'1970-01-01 00:00:00\' UTC). A TIMESTAMP cannot\nrepresent the value \'1970-01-01 00:00:00\' because that is equivalent to\n0 seconds from the epoch and the value 0 is reserved for representing\n\'0000-00-00 00:00:00\', the "zero" TIMESTAMP value.\n\nA TIMESTAMP column is useful for recording the date and time of an\nINSERT or UPDATE operation. By default, the first TIMESTAMP column in a\ntable is automatically set to the date and time of the most recent\noperation if you do not assign it a value yourself. You can also set\nany TIMESTAMP column to the current date and time by assigning it a\nNULL value. Variations on automatic initialization and update\nproperties are described in\nhttp://dev.mysql.com/doc/refman/6.0/en/timestamp.html.\n\nA TIMESTAMP value is returned as a string in the format \'YYYY-MM-DD\nHH:MM:SS\' with a display width fixed at 19 characters. To obtain the\nvalue as a number, you should add +0 to the timestamp column.\n\n*Note*: The TIMESTAMP format that was used prior to MySQL 4.1 is not\nsupported in MySQL 6.0; see MySQL 3.23, 4.0, 4.1 Reference Manual for\ninformation regarding the old format.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html'),
	(99, 'DES_DECRYPT', 11, 'Syntax:\nDES_DECRYPT(crypt_str[,key_str])\n\nDecrypts a string encrypted with DES_ENCRYPT(). If an error occurs,\nthis function returns NULL.\n\nThis function works only if MySQL has been configured with SSL support.\nSee http://dev.mysql.com/doc/refman/6.0/en/secure-connections.html.\n\nIf no key_str argument is given, DES_DECRYPT() examines the first byte\nof the encrypted string to determine the DES key number that was used\nto encrypt the original string, and then reads the key from the DES key\nfile to decrypt the message. For this to work, the user must have the\nSUPER privilege. The key file can be specified with the --des-key-file\nserver option.\n\nIf you pass this function a key_str argument, that string is used as\nthe key for decrypting the message.\n\nIf the crypt_str argument does not appear to be an encrypted string,\nMySQL returns the given crypt_str.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(100, 'CACHE INDEX', 26, 'Syntax:\nCACHE INDEX\n  tbl_index_list [, tbl_index_list] ...\n  IN key_cache_name\n\ntbl_index_list:\n  tbl_name [[INDEX|KEY] (index_name[, index_name] ...)]\n\nThe CACHE INDEX statement assigns table indexes to a specific key\ncache. It is used only for MyISAM tables.\n\nThe following statement assigns indexes from the tables t1, t2, and t3\nto the key cache named hot_cache:\n\nmysql> CACHE INDEX t1, t2, t3 IN hot_cache;\n+---------+--------------------+----------+----------+\n| Table   | Op                 | Msg_type | Msg_text |\n+---------+--------------------+----------+----------+\n| test.t1 | assign_to_keycache | status   | OK       |\n| test.t2 | assign_to_keycache | status   | OK       |\n| test.t3 | assign_to_keycache | status   | OK       |\n+---------+--------------------+----------+----------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/cache-index.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/cache-index.html'),
	(101, 'ENDPOINT', 12, 'EndPoint(ls)\n\nReturns the Point that is the endpoint of the LineString value ls.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions\n\n', 'mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT AsText(EndPoint(GeomFromText(@ls)));\n+-------------------------------------+\n| AsText(EndPoint(GeomFromText(@ls))) |\n+-------------------------------------+\n| POINT(3 3)                          |\n+-------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions'),
	(102, 'COMPRESS', 11, 'Syntax:\nCOMPRESS(string_to_compress)\n\nCompresses a string and returns the result as a binary string. This\nfunction requires MySQL to have been compiled with a compression\nlibrary such as zlib. Otherwise, the return value is always NULL. The\ncompressed string can be uncompressed with UNCOMPRESS().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'mysql> SELECT LENGTH(COMPRESS(REPEAT(\'a\',1000)));\n        -> 21\nmysql> SELECT LENGTH(COMPRESS(\'\'));\n        -> 0\nmysql> SELECT LENGTH(COMPRESS(\'a\'));\n        -> 13\nmysql> SELECT LENGTH(COMPRESS(REPEAT(\'a\',16)));\n        -> 15\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(103, 'INSERT', 27, 'Syntax:\nINSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name [(col_name,...)]\n    {VALUES | VALUE} ({expr | DEFAULT},...),(...),...\n    [ ON DUPLICATE KEY UPDATE\n      col_name=expr\n        [, col_name=expr] ... ]\n\nOr:\n\nINSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    SET col_name={expr | DEFAULT}, ...\n    [ ON DUPLICATE KEY UPDATE\n      col_name=expr\n        [, col_name=expr] ... ]\n\nOr:\n\nINSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name [(col_name,...)]\n    SELECT ...\n    [ ON DUPLICATE KEY UPDATE\n      col_name=expr\n        [, col_name=expr] ... ]\n\nINSERT inserts new rows into an existing table. The INSERT ... VALUES\nand INSERT ... SET forms of the statement insert rows based on\nexplicitly specified values. The INSERT ... SELECT form inserts rows\nselected from another table or tables. INSERT ... SELECT is discussed\nfurther in [HELP INSERT SELECT].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/insert.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/insert.html'),
	(104, 'COUNT', 16, 'Syntax:\nCOUNT(expr)\n\nReturns a count of the number of non-NULL values of expr in the rows\nretrieved by a SELECT statement. The result is a BIGINT value.\n\nCOUNT() returns 0 if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', 'mysql> SELECT student.student_name,COUNT(*)\n    ->        FROM student,course\n    ->        WHERE student.student_id=course.student_id\n    ->        GROUP BY student_name;\n', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(105, 'HANDLER', 27, 'Syntax:\nHANDLER tbl_name OPEN [ [AS] alias]\nHANDLER tbl_name READ index_name { = | >= | <= | < } (value1,value2,...)\n    [ WHERE where_condition ] [LIMIT ... ]\nHANDLER tbl_name READ index_name { FIRST | NEXT | PREV | LAST }\n    [ WHERE where_condition ] [LIMIT ... ]\nHANDLER tbl_name READ { FIRST | NEXT }\n    [ WHERE where_condition ] [LIMIT ... ]\nHANDLER tbl_name CLOSE\n\nThe HANDLER statement provides direct access to table storage engine\ninterfaces. It is available for MyISAM and InnoDB tables.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/handler.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/handler.html'),
	(106, 'MLINEFROMTEXT', 3, 'MLineFromText(wkt[,srid]), MultiLineStringFromText(wkt[,srid])\n\nConstructs a MULTILINESTRING value using its WKT representation and\nSRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions'),
	(107, 'GEOMCOLLFROMWKB', 32, 'GeomCollFromWKB(wkb[,srid]), GeometryCollectionFromWKB(wkb[,srid])\n\nConstructs a GEOMETRYCOLLECTION value using its WKB representation and\nSRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions'),
	(108, 'RENAME TABLE', 38, 'Syntax:\nRENAME TABLE tbl_name TO new_tbl_name\n    [, tbl_name2 TO new_tbl_name2] ...\n\nThis statement renames one or more tables.\n\nThe rename operation is done atomically, which means that no other\nsession can access any of the tables while the rename is running. For\nexample, if you have an existing table old_table, you can create\nanother table new_table that has the same structure but is empty, and\nthen replace the existing table with the empty one as follows (assuming\nthat backup_table does not already exist):\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/rename-table.html\n\n', 'CREATE TABLE new_table (...);\nRENAME TABLE old_table TO backup_table, new_table TO old_table;\n', 'http://dev.mysql.com/doc/refman/6.0/en/rename-table.html'),
	(109, 'BOOLEAN', 22, 'BOOL, BOOLEAN\n\nThese types are synonyms for TINYINT(1). A value of zero is considered\nfalse. Non-zero values are considered true:\n\nmysql> SELECT IF(0, \'true\', \'false\');\n+------------------------+\n| IF(0, \'true\', \'false\') |\n+------------------------+\n| false                  |\n+------------------------+\n\nmysql> SELECT IF(1, \'true\', \'false\');\n+------------------------+\n| IF(1, \'true\', \'false\') |\n+------------------------+\n| true                   |\n+------------------------+\n\nmysql> SELECT IF(2, \'true\', \'false\');\n+------------------------+\n| IF(2, \'true\', \'false\') |\n+------------------------+\n| true                   |\n+------------------------+\n\nHowever, the values TRUE and FALSE are merely aliases for 1 and 0,\nrespectively, as shown here:\n\nmysql> SELECT IF(0 = FALSE, \'true\', \'false\');\n+--------------------------------+\n| IF(0 = FALSE, \'true\', \'false\') |\n+--------------------------------+\n| true                           |\n+--------------------------------+\n\nmysql> SELECT IF(1 = TRUE, \'true\', \'false\');\n+-------------------------------+\n| IF(1 = TRUE, \'true\', \'false\') |\n+-------------------------------+\n| true                          |\n+-------------------------------+\n\nmysql> SELECT IF(2 = TRUE, \'true\', \'false\');\n+-------------------------------+\n| IF(2 = TRUE, \'true\', \'false\') |\n+-------------------------------+\n| false                         |\n+-------------------------------+\n\nmysql> SELECT IF(2 = FALSE, \'true\', \'false\');\n+--------------------------------+\n| IF(2 = FALSE, \'true\', \'false\') |\n+--------------------------------+\n| false                          |\n+--------------------------------+\n\nThe last two statements display the results shown because 2 is equal to\nneither 1 nor 0.\n\nWe intend to implement full boolean type handling, in accordance with\nstandard SQL, in a future MySQL release.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(110, 'DEFAULT', 14, 'Syntax:\nDEFAULT(col_name)\n\nReturns the default value for a table column. An error results if the\ncolumn has no default value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', 'mysql> UPDATE t SET i = DEFAULT(i)+1 WHERE id < 100;\n', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(111, 'MOD', 4, 'Syntax:\nMOD(N,M), N % M, N MOD M\n\nModulo operation. Returns the remainder of N divided by M.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT MOD(234, 10);\n        -> 4\nmysql> SELECT 253 % 7;\n        -> 1\nmysql> SELECT MOD(29,9);\n        -> 2\nmysql> SELECT 29 MOD 9;\n        -> 2\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(112, 'TINYTEXT', 22, 'TINYTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 255 (28 - 1) characters. The\neffective maximum length is less if the value contains multi-byte\ncharacters. Each TINYTEXT value is stored using a one-byte length\nprefix that indicates the number of bytes in the value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(113, 'OPTIMIZE TABLE', 20, 'Syntax:\nOPTIMIZE [NO_WRITE_TO_BINLOG | LOCAL] TABLE\n    tbl_name [, tbl_name] ...\n\nOPTIMIZE TABLE should be used if you have deleted a large part of a\ntable or if you have made many changes to a table with variable-length\nrows (tables that have VARCHAR, VARBINARY, BLOB, or TEXT columns).\nDeleted rows are maintained in a linked list and subsequent INSERT\noperations reuse old row positions. You can use OPTIMIZE TABLE to\nreclaim the unused space and to defragment the data file.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nBeginning with MySQL 6.0.6, OPTIMIZE TABLE is also supported for\npartitioned tables. Also beginning with MySQL 6.0.6, you can use ALTER\nTABLE ... OPTIMIZE PARTITION to optimize one or more partitions; for\nmore information, see [HELP ALTER TABLE], and\nhttp://dev.mysql.com/doc/refman/6.0/en/partitioning-maintenance.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/optimize-table.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/optimize-table.html'),
	(114, 'DECODE', 11, 'Syntax:\nDECODE(crypt_str,pass_str)\n\nDecrypts the encrypted string crypt_str using pass_str as the password.\ncrypt_str should be a string returned from ENCODE().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(115, '<=>', 17, 'Syntax:\n<=>\n\nNULL-safe equal. This operator performs an equality comparison like the\n= operator, but returns 1 rather than NULL if both operands are NULL,\nand 0 rather than NULL if one operand is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 1 <=> 1, NULL <=> NULL, 1 <=> NULL;\n        -> 1, 1, 0\nmysql> SELECT 1 = 1, NULL = NULL, 1 = NULL;\n        -> 1, NULL, NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(116, 'RESET', 26, 'Syntax:\nRESET reset_option [, reset_option] ...\n\nThe RESET statement is used to clear the state of various server\noperations. You must have the RELOAD privilege to execute RESET.\n\nRESET acts as a stronger version of the FLUSH statement. See [HELP\nFLUSH].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/reset.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/reset.html'),
	(117, 'HELP STATEMENT', 28, 'Syntax:\nHELP \'search_string\'\n\nThe HELP statement returns online information from the MySQL Reference\nmanual. Its proper operation requires that the help tables in the mysql\ndatabase be initialized with help topic information (see\nhttp://dev.mysql.com/doc/refman/6.0/en/server-side-help-support.html).\n\nThe HELP statement searches the help tables for the given search string\nand displays the result of the search. The search string is not case\nsensitive.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/help.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/help.html'),
	(118, 'GET_LOCK', 14, 'Syntax:\nGET_LOCK(str,timeout)\n\nTries to obtain a lock with a name given by the string str, using a\ntimeout of timeout seconds. Returns 1 if the lock was obtained\nsuccessfully, 0 if the attempt timed out (for example, because another\nclient has previously locked the name), or NULL if an error occurred\n(such as running out of memory or the thread was killed with mysqladmin\nkill). If you have a lock obtained with GET_LOCK(), it is released when\nyou execute RELEASE_LOCK(), execute a new GET_LOCK(), or your\nconnection terminates (either normally or abnormally). Locks obtained\nwith GET_LOCK() do not interact with transactions. That is, committing\na transaction does not release any such locks obtained during the\ntransaction.\n\nThis function can be used to implement application locks or to simulate\nrecord locks. Names are locked on a server-wide basis. If a name has\nbeen locked by one client, GET_LOCK() blocks any request by another\nclient for a lock with the same name. This allows clients that agree on\na given lock name to use the name to perform cooperative advisory\nlocking. But be aware that it also allows a client that is not among\nthe set of cooperating clients to lock a name, either inadvertently or\ndeliberately, and thus prevent any of the cooperating clients from\nlocking that name. One way to reduce the likelihood of this is to use\nlock names that are database-specific or application-specific. For\nexample, use lock names of the form db_name.str or app_name.str.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', 'mysql> SELECT GET_LOCK(\'lock1\',10);\n        -> 1\nmysql> SELECT IS_FREE_LOCK(\'lock2\');\n        -> 1\nmysql> SELECT GET_LOCK(\'lock2\',10);\n        -> 1\nmysql> SELECT RELEASE_LOCK(\'lock2\');\n        -> 1\nmysql> SELECT RELEASE_LOCK(\'lock1\');\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(119, 'UCASE', 36, 'Syntax:\nUCASE(str)\n\nUCASE() is a synonym for UPPER().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(120, 'SHOW BINLOG EVENTS', 26, 'Syntax:\nSHOW BINLOG EVENTS\n   [IN \'log_name\'] [FROM pos] [LIMIT [offset,] row_count]\n\nShows the events in the binary log. If you do not specify \'log_name\',\nthe first binary log is displayed.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-binlog-events.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-binlog-events.html'),
	(121, 'MPOLYFROMWKB', 32, 'MPolyFromWKB(wkb[,srid]), MultiPolygonFromWKB(wkb[,srid])\n\nConstructs a MULTIPOLYGON value using its WKB representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions'),
	(122, 'ITERATE', 23, 'Syntax:\nITERATE label\n\nITERATE can appear only within LOOP, REPEAT, and WHILE statements.\nITERATE means "do the loop again."\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/iterate-statement.html\n\n', 'CREATE PROCEDURE doiterate(p1 INT)\nBEGIN\n  label1: LOOP\n    SET p1 = p1 + 1;\n    IF p1 < 10 THEN ITERATE label1; END IF;\n    LEAVE label1;\n  END LOOP label1;\n  SET @x = p1;\nEND\n', 'http://dev.mysql.com/doc/refman/6.0/en/iterate-statement.html'),
	(123, 'DO', 27, 'Syntax:\nDO expr [, expr] ...\n\nDO executes the expressions but does not return any results. In most\nrespects, DO is shorthand for SELECT expr, ..., but has the advantage\nthat it is slightly faster when you do not care about the result.\n\nDO is useful primarily with functions that have side effects, such as\nRELEASE_LOCK().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/do.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/do.html'),
	(124, 'CURTIME', 31, 'Syntax:\nCURTIME()\n\nReturns the current time as a value in \'HH:MM:SS\' or HHMMSS.uuuuuu\nformat, depending on whether the function is used in a string or\nnumeric context. The value is expressed in the current time zone.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT CURTIME();\n        -> \'23:50:26\'\nmysql> SELECT CURTIME() + 0;\n        -> 235026.000000\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(125, 'CHAR_LENGTH', 36, 'Syntax:\nCHAR_LENGTH(str)\n\nReturns the length of the string str, measured in characters. A\nmulti-byte character counts as a single character. This means that for\na string containing five two-byte characters, LENGTH() returns 10,\nwhereas CHAR_LENGTH() returns 5.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(126, 'BIGINT', 22, 'BIGINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA large integer. The signed range is -9223372036854775808 to\n9223372036854775807. The unsigned range is 0 to 18446744073709551615.\n\nSERIAL is an alias for BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(127, 'SET', 26, 'Syntax:\nSET variable_assignment [, variable_assignment] ...\n\nvariable_assignment:\n      user_var_name = expr\n    | [GLOBAL | SESSION] system_var_name = expr\n    | [@@global. | @@session. | @@]system_var_name = expr\n\nThe SET statement assigns values to different types of variables that\naffect the operation of the server or your client. Older versions of\nMySQL employed SET OPTION, but this syntax is deprecated in favor of\nSET without OPTION.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/set-option.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/set-option.html'),
	(128, 'LOAD XML', 27, 'Syntax:\nLOAD XML [LOW_PRIORITY | CONCURRENT] [LOCAL] INFILE \'file_name\'\n[REPLACE | IGNORE]\nINTO TABLE [db_name.]tbl_name\n[CHARACTER SET charset_name]\n[ROWS IDENTIFIED BY \'<tagname>\']\n[IGNORE number [LINES | ROWS]]\n[(column_or_user_var,...)]\n[SET col_name = expr,...]\n\nThe LOAD XML statement reads data from an XML file into a table. The\nfile_name must be given as a literal string. The tagname in the\noptional ROWS IDENTIFIED BY clause must also be given as a literal\nstring, and must be surrounded by angle brackets (< and >).\n\nLOAD XML acts as the complement of running the mysql client in XML\noutput mode (that is, starting the client with the --xml option). To\nwrite data from a table to an XML file, use a command such as the\nfollowing one from the system shell:\n\nshell> mysql --xml -e \'SELECT * FROM mytable\' > file.xml\n\nTo read the file back into a table, use LOAD XML INFILE. By default,\nthe <row> element is considered to be the equivalent of a database\ntable row; this can be changed using the ROWS IDENTIFIED BY clause.\n\nThis statement supports three different XML formats:\n\no Column names as attributes and column values as attribute values:\n\n<row column1="value1" column2="value2" .../>\n\no Column names as tags and column values as the content of these tags:\n\n<row>\n  <column1>value1</column1>\n  <column2>value2</column2>\n</row>\n\no Column names are the name attributes of <field> tags, and values are\n  the contents of these tags:\n\n<row>\n  <field name=\'column1\'>value1</field>\n  <field name=\'column2\'>value2</field>\n</row>\n\n  This is the format used by other MySQL tools, such as mysqldump.\n\nAll 3 formats can be used in the same XML file; the import routine\nautomatically detects the format for each row and interpets it\ncorrectly. Tags are matched based on the tag or attribute name and the\ncolumn name.\n\nThe following clauses work essentially the same way for LOAD XML as\nthey do for LOAD DATA:\n\no LOW_PRIORITY or CONCURRENT\n\no LOCAL\n\no REPLACE or IGNORE\n\no CHARACTER SET\n\no (column_or_user_var,...)\n\no SET\n\nSee [HELP LOAD DATA], for more information about these clauses.\n\nThe IGNORE number LINES or IGNORE number ROWS clause causes the first\nnumber rows in the XML file to be skipped. It is analogous to the LOAD\nDATA statement\'s IGNORE ... LINES clause.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/load-xml.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/load-xml.html'),
	(129, 'CONV', 4, 'Syntax:\nCONV(N,from_base,to_base)\n\nConverts numbers between different number bases. Returns a string\nrepresentation of the number N, converted from base from_base to base\nto_base. Returns NULL if any argument is NULL. The argument N is\ninterpreted as an integer, but may be specified as an integer or a\nstring. The minimum base is 2 and the maximum base is 36. If to_base is\na negative number, N is regarded as a signed number. Otherwise, N is\ntreated as unsigned. CONV() works with 64-bit precision.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT CONV(\'a\',16,2);\n        -> \'1010\'\nmysql> SELECT CONV(\'6E\',18,8);\n        -> \'172\'\nmysql> SELECT CONV(-17,10,-18);\n        -> \'-H\'\nmysql> SELECT CONV(10+\'10\'+\'10\'+0xa,10,10);\n        -> \'40\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(130, 'DATE', 22, 'DATE\n\nA date. The supported range is \'1000-01-01\' to \'9999-12-31\'. MySQL\ndisplays DATE values in \'YYYY-MM-DD\' format, but allows assignment of\nvalues to DATE columns using either strings or numbers.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html'),
	(131, 'SHOW OPEN TABLES', 26, 'Syntax:\nSHOW OPEN TABLES [FROM db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW OPEN TABLES lists the non-TEMPORARY tables that are currently open\nin the table cache. See\nhttp://dev.mysql.com/doc/refman/6.0/en/table-cache.html. The LIKE\nclause, if present, indicates which table names to match. The WHERE\nclause can be given to select rows using more general conditions, as\ndiscussed in http://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-open-tables.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-open-tables.html'),
	(132, 'EXTRACT', 31, 'Syntax:\nEXTRACT(unit FROM date)\n\nThe EXTRACT() function uses the same kinds of unit specifiers as\nDATE_ADD() or DATE_SUB(), but extracts parts from the date rather than\nperforming date arithmetic.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT EXTRACT(YEAR FROM \'2009-07-02\');\n       -> 2009\nmysql> SELECT EXTRACT(YEAR_MONTH FROM \'2009-07-02 01:02:03\');\n       -> 200907\nmysql> SELECT EXTRACT(DAY_MINUTE FROM \'2009-07-02 01:02:03\');\n       -> 20102\nmysql> SELECT EXTRACT(MICROSECOND\n    ->                FROM \'2003-01-02 10:30:00.000123\');\n        -> 123\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(133, 'ENCRYPT', 11, 'Syntax:\nENCRYPT(str[,salt])\n\nEncrypts str using the Unix crypt() system call and returns a binary\nstring. The salt argument should be a string with at least two\ncharacters. If no salt argument is given, a random value is used.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'mysql> SELECT ENCRYPT(\'hello\');\n        -> \'VxuFAJXVARROc\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(134, 'SHOW STATUS', 26, 'Syntax:\nSHOW [GLOBAL | SESSION] STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW STATUS provides server status information. This information also\ncan be obtained using the mysqladmin extended-status command. The LIKE\nclause, if present, indicates which variable names to match. The WHERE\nclause can be given to select rows using more general conditions, as\ndiscussed in http://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\nWith a LIKE clause, the statement displays only rows for those\nvariables with names that match the pattern:\n\nmysql> SHOW STATUS LIKE \'Key%\';\n+--------------------+----------+\n| Variable_name      | Value    |\n+--------------------+----------+\n| Key_blocks_used    | 14955    |\n| Key_read_requests  | 96854827 |\n| Key_reads          | 162040   |\n| Key_write_requests | 7589728  |\n| Key_writes         | 3813196  |\n+--------------------+----------+\n\nWith the GLOBAL modifier, SHOW STATUS displays the status values for\nall connections to MySQL. With SESSION, it displays the status values\nfor the current connection. If no modifier is present, the default is\nSESSION. LOCAL is a synonym for SESSION.\n\nSome status variables have only a global value. For these, you get the\nsame value for both GLOBAL and SESSION. The scope for each status\nvariable is listed at\nhttp://dev.mysql.com/doc/refman/6.0/en/server-status-variables.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-status.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-status.html'),
	(135, 'EXTRACTVALUE', 36, 'Syntax:\nExtractValue(xml_frag, xpath_expr)\n\nExtractValue() takes two string arguments, a fragment of XML markup\nxml_frag and an XPath expression xpath_expr (also known as a locator);\nit returns the text (CDATA) of the first text node which is a child of\nthe element(s) matched by the XPath expression. It is the equivalent of\nperforming a match using the xpath_expr after appending /text(). In\nother words, ExtractValue(\'<a><b>Sakila</b></a>\', \'/a/b\') and\nExtractValue(\'<a><b>Sakila</b></a>\', \'/a/b/text()\') produce the same\nresult.\n\nIf multiple matches are found, then the content of the first child text\nnode of each matching element is returned (in the order matched) as a\nsingle, space-delimited string.\n\nIf no matching text node is found for the expression (including the\nimplicit /text()) --- for whatever reason, as long as xpath_expr is\nvalid, and xml_frag consists of elements which are properly nested and\nclosed --- an empty string is returned. No distinction is made between\na match on an empty element and no match at all. This is by design.\n\nIf you need to determine whether no matching element was found in\nxml_frag or such an element was found but contained no child text\nnodes, you should test the result of an expression that uses the XPath\ncount() function. For example, both of these statements return an empty\nstring, as shown here:\n\nmysql> SELECT ExtractValue(\'<a><b/></a>\', \'/a/b\');\n+-------------------------------------+\n| ExtractValue(\'<a><b/></a>\', \'/a/b\') |\n+-------------------------------------+\n|                                     |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT ExtractValue(\'<a><c/></a>\', \'/a/b\');\n+-------------------------------------+\n| ExtractValue(\'<a><c/></a>\', \'/a/b\') |\n+-------------------------------------+\n|                                     |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nHowever, you can determine whether there was actually a matching\nelement using the following:\n\nmysql> SELECT ExtractValue(\'<a><b/></a>\', \'count(/a/b)\');\n+-------------------------------------+\n| ExtractValue(\'<a><b/></a>\', \'count(/a/b)\') |\n+-------------------------------------+\n| 1                                   |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT ExtractValue(\'<a><c/></a>\', \'count(/a/b)\');\n+-------------------------------------+\n| ExtractValue(\'<a><c/></a>\', \'count(/a/b)\') |\n+-------------------------------------+\n| 0                                   |\n+-------------------------------------+\n1 row in set (0.01 sec)\n\n*Important*: ExtractValue() returns only CDATA, and does not return any\ntags that might be contained within a matching tag, nor any of their\ncontent (see the result returned as val1 in the following example).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/xml-functions.html\n\n', 'mysql> SELECT\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/a\') AS val1,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/a/b\') AS val2,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'//b\') AS val3,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/b\') AS val4,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b><b>eee</b></a>\', \'//b\') AS val5;\n\n+------+------+------+------+---------+\n| val1 | val2 | val3 | val4 | val5    |\n+------+------+------+------+---------+\n| ccc  | ddd  | ddd  |      | ddd eee |\n+------+------+------+------+---------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/xml-functions.html'),
	(136, 'OLD_PASSWORD', 11, 'Syntax:\nOLD_PASSWORD(str)\n\nOLD_PASSWORD() was added to MySQL when the implementation of PASSWORD()\nwas changed to improve security. OLD_PASSWORD() returns the value of\nthe old (pre-4.1) implementation of PASSWORD() as a binary string, and\nis intended to permit you to reset passwords for any pre-4.1 clients\nthat need to connect to your version 6.0 MySQL server without locking\nthem out. See\nhttp://dev.mysql.com/doc/refman/6.0/en/password-hashing.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(137, 'SET VARIABLE', 23, 'Syntax:\nSET var_name = expr [, var_name = expr] ...\n\nThe SET statement in stored programs is an extended version of the\ngeneral SET statement (see [HELP SET]). Referenced variables may be\nones declared inside a stored program, global system variables, or\nuser-defined variables.\n\nThe SET statement in stored programs is implemented as part of the\npre-existing SET syntax. This allows an extended syntax of SET a=x,\nb=y, ... where different variable types (locally declared variables,\nglobal and session server variables, user-defined variables) can be\nmixed. This also allows combinations of local variables and some\noptions that make sense only for system variables; in that case, the\noptions are recognized but ignored.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/set-statement.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/set-statement.html'),
	(138, 'FORMAT', 36, 'Syntax:\nFORMAT(X,D)\n\nFormats the number X to a format like \'#,###,###.##\', rounded to D\ndecimal places, and returns the result as a string. If D is 0, the\nresult has no decimal point or fractional part.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT FORMAT(12332.123456, 4);\n        -> \'12,332.1235\'\nmysql> SELECT FORMAT(12332.1,4);\n        -> \'12,332.1000\'\nmysql> SELECT FORMAT(12332.2,0);\n        -> \'12,332\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(139, '||', 13, 'Syntax:\nOR, ||\n\nLogical OR. When both operands are non-NULL, the result is 1 if any\noperand is non-zero, and 0 otherwise. With a NULL operand, the result\nis 1 if the other operand is non-zero, and NULL otherwise. If both\noperands are NULL, the result is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/logical-operators.html\n\n', 'mysql> SELECT 1 || 1;\n        -> 1\nmysql> SELECT 1 || 0;\n        -> 1\nmysql> SELECT 0 || 0;\n        -> 0\nmysql> SELECT 0 || NULL;\n        -> NULL\nmysql> SELECT 1 || NULL;\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/logical-operators.html'),
	(140, 'BIT_LENGTH', 36, 'Syntax:\nBIT_LENGTH(str)\n\nReturns the length of the string str in bits.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT BIT_LENGTH(\'text\');\n        -> 32\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(141, 'EXTERIORRING', 2, 'ExteriorRing(poly)\n\nReturns the exterior ring of the Polygon value poly as a LineString.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#polygon-property-functions\n\n', 'mysql> SET @poly =\n    -> \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT AsText(ExteriorRing(GeomFromText(@poly)));\n+-------------------------------------------+\n| AsText(ExteriorRing(GeomFromText(@poly))) |\n+-------------------------------------------+\n| LINESTRING(0 0,0 3,3 3,3 0,0 0)           |\n+-------------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#polygon-property-functions'),
	(142, 'GEOMFROMWKB', 32, 'GeomFromWKB(wkb[,srid]), GeometryFromWKB(wkb[,srid])\n\nConstructs a geometry value of any type using its WKB representation\nand SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions'),
	(143, 'SHOW SLAVE HOSTS', 26, 'Syntax:\nSHOW SLAVE HOSTS\n\nDisplays a list of replication slaves currently registered with the\nmaster. Only slaves started with the --report-host=host_name option are\nvisible in this list.\n\nThe list is displayed on any server (not just the master server). The\noutput looks like this:\n\nmysql> SHOW SLAVE HOSTS;\n+------------+-----------+------+-----------+\n| Server_id  | Host      | Port | Master_id |\n+------------+-----------+------+-----------+\n|  192168010 | iconnect2 | 3306 | 192168011 |\n| 1921680101 | athena    | 3306 | 192168011 |\n+------------+-----------+------+-----------+\n\no Server_id: The unique server ID of the slave server, as configured in\n  the server\'s option file, or on the command line with\n  --server-id=value.\n\no Host: The host name of the slave server, as configured in the\n  server\'s option file, or on the command line with\n  --report-host=host_name. Note that this can differ from the machine\n  name as configured in the operating system.\n\no Port: The port the slave server is listening on.\n\no Master_id: The unique server ID of the master server that the slave\n  server is replicating from.\n\nSome MySQL versions report another variable, Rpl_recovery_rank. This\nvariable was never used, and was eventually removed.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-slave-hosts.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-slave-hosts.html'),
	(144, 'START TRANSACTION', 8, 'Syntax:\nSTART TRANSACTION [WITH CONSISTENT SNAPSHOT] | BEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThe START TRANSACTION or BEGIN statement begins a new transaction.\nCOMMIT commits the current transaction, making its changes permanent.\nROLLBACK rolls back the current transaction, canceling its changes. The\nSET autocommit statement disables or enables the default autocommit\nmode for the current session.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttp://dev.mysql.com/doc/refman/6.0/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The RELEASE clause causes the\nserver to disconnect the current client session after terminating the\ncurrent transaction. Including the NO keyword suppresses CHAIN or\nRELEASE completion, which can be useful if the completion_type system\nvariable is set to cause chaining or release completion by default.\n\nBy default, MySQL runs with autocommit mode enabled. This means that as\nsoon as you execute a statement that updates (modifies) a table, MySQL\nstores the update on disk to make it permanent. To disable autocommit\nmode, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDBCLUSTER) are not made permanent immediately. You must use COMMIT to\nstore your changes to disk or ROLLBACK to ignore the changes.\n\nTo disable autocommit mode for a single series of statements, use the\nSTART TRANSACTION statement:\n\n*Note*: The NDBCLUSTER storage engine is currently not supported in\nMySQL 6.0. If you are interested in using MySQL Cluster, see MySQL\nCluster NDB 6.x\n(http://dev.mysql.com/doc/refman/5.1/en/mysql-cluster.html), which\nprovides information about MySQL Cluster NDB 6.2 and 6.3 (based on\nMySQL 5.1 but containing the latest improvements and fixes for\nNDBCLUSTER).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/commit.html\n\n', 'START TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n', 'http://dev.mysql.com/doc/refman/6.0/en/commit.html'),
	(145, 'BETWEEN AND', 17, 'Syntax:\nexpr BETWEEN min AND max\n\nIf expr is greater than or equal to min and expr is less than or equal\nto max, BETWEEN returns 1, otherwise it returns 0. This is equivalent\nto the expression (min <= expr AND expr <= max) if all the arguments\nare of the same type. Otherwise type conversion takes place according\nto the rules described in\nhttp://dev.mysql.com/doc/refman/6.0/en/type-conversion.html, but\napplied to all the three arguments.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 1 BETWEEN 2 AND 3;\n        -> 0\nmysql> SELECT \'b\' BETWEEN \'a\' AND \'c\';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND \'3\';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND \'x-3\';\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(146, 'MULTIPOLYGON', 24, 'MultiPolygon(poly1,poly2,...)\n\nConstructs a WKB MultiPolygon value from a set of WKB Polygon\narguments. If any argument is not a WKB Polygon, the return value is\nNULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions'),
	(147, 'TIME_FORMAT', 31, 'Syntax:\nTIME_FORMAT(time,format)\n\nThis is used like the DATE_FORMAT() function, but the format string may\ncontain format specifiers only for hours, minutes, and seconds. Other\nspecifiers produce a NULL value or 0.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT TIME_FORMAT(\'100:00:00\', \'%H %k %h %I %l\');\n        -> \'100 100 04 04 4\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(148, 'LEFT', 36, 'Syntax:\nLEFT(str,len)\n\nReturns the leftmost len characters from the string str, or NULL if any\nargument is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT LEFT(\'foobarbar\', 5);\n        -> \'fooba\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(149, 'FLUSH QUERY CACHE', 26, 'You can defragment the query cache to better utilize its memory with\nthe FLUSH QUERY CACHE statement. The statement does not remove any\nqueries from the cache.\n\nThe RESET QUERY CACHE statement removes all query results from the\nquery cache. The FLUSH TABLES statement also does this.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/query-cache-status-and-maintenance.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/query-cache-status-and-maintenance.html'),
	(150, 'SET DATA TYPE', 22, 'SET(\'value1\',\'value2\',...) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA set. A string object that can have zero or more values, each of which\nmust be chosen from the list of values \'value1\', \'value2\', ... A SET\ncolumn can have a maximum of 64 members. SET values are represented\ninternally as integers.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(151, 'RAND', 4, 'Syntax:\nRAND(), RAND(N)\n\nReturns a random floating-point value v in the range 0 <= v < 1.0. If a\nconstant integer argument N is specified, it is used as the seed value,\nwhich produces a repeatable sequence of column values. In the following\nexample, note that the sequences of values produced by RAND(3) is the\nsame both places where it occurs.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> CREATE TABLE t (i INT);\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.61914388706828 | \n|    2 | 0.93845168309142 | \n|    3 | 0.83482678498591 | \n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 | \n|    2 | 0.37307905813035 | \n|    3 | 0.14808605345719 | \n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.35877890638893 | \n|    2 | 0.28941420772058 | \n|    3 | 0.37073435016976 | \n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 | \n|    2 | 0.37307905813035 | \n|    3 | 0.14808605345719 | \n+------+------------------+\n3 rows in set (0.01 sec)\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(152, 'RPAD', 36, 'Syntax:\nRPAD(str,len,padstr)\n\nReturns the string str, right-padded with the string padstr to a length\nof len characters. If str is longer than len, the return value is\nshortened to len characters.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT RPAD(\'hi\',5,\'?\');\n        -> \'hi???\'\nmysql> SELECT RPAD(\'hi\',1,\'?\');\n        -> \'h\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(153, 'RESTORE', 19, 'Syntax:\nRESTORE FROM \'image_file_name\' [OVERWRITE];\n\nGiven a backup image file created by the BACKUP DATABASE statement,\nRESTORE restores the databases contained in the image. The image file\nmust be named as a literal string. Its location must be in a directory\nwhere the server can read files. If the secure_file_priv system\nvariable is set to a non-empty directory name, the image file must be\nlocated in that directory.\n\nAs of MySQL 6.0.7, the backupdir system variable value is the default\nimage file directory for RESTORE operations. If an image file is named\nas a relative path name, it is interpreted relative to the value of\nbackupdir. The default value is the data directory. Before MySQL 6.0.7,\nthe file should be specified as a full path name.\n\nRESTORE requires the SUPER privilege.\n\nThe RESTORE statement takes no database names specifying which\ndatabases to restore. It restores the entire contents of the image\nfile. The databases are restored to their state at the time that the\nimage file was created. Restoring the image file can be combined with\nuse of the binary log to achieve point-in-time recovery (see\nhttp://dev.mysql.com/doc/refman/6.0/en/point-in-time-recovery.html).\n\nUpon successful completion, the RESTORE statement returns a result set\nwith the backup number. Warnings produced during the operation can be\ndisplayed with SHOW WARNINGS. If the restore operation fails, it\nreturns an error.\n\nmysql> RESTORE FROM \'/tmp/world.backup\';\n+-----------+\n| backup_id |\n+-----------+\n| 9         | \n+-----------+\n\nWhile the operation is in progress, it can be monitored as described in\nhttp://dev.mysql.com/doc/refman/6.0/en/backup-database-restore-monitori\nng.html.\n\nRESTORE detects whether the image file is compressed and uncompresses\nit automatically as necessary. (Compressed image files can be produced\nby using the WITH COMPRESSION clause in the BACKUP DATABASE statement.)\n\nAs of MySQL 6.0.9, RESTORE aborts with an error if the backup image\ncontains any databases that currently exist on the server, unless the\noptional keyword OVERWRITE is given following the image file name. With\nOVERWRITE, RESTORE is a destructive operation. Each restored database\nis first dropped and then created and populated with the tables\ncontained in the backup image. There is no warning about existing data\nbeing overwritten.\n\n*Caution*: The OVERWRITE is not available before MySQL 6.0.9 and\nRESTORE is always a destructive operation.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/restore.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/restore.html'),
	(154, 'CREATE DATABASE', 38, 'Syntax:\nCREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n    [create_specification] ...\n\ncreate_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nCREATE DATABASE creates a database with the given name. To use this\nstatement, you need the CREATE privilege for the database. CREATE\nSCHEMA is a synonym for CREATE DATABASE.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-database.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-database.html'),
	(155, 'DEC', 22, 'DEC[(M[,D])] [UNSIGNED] [ZEROFILL], NUMERIC[(M[,D])] [UNSIGNED]\n[ZEROFILL], FIXED[(M[,D])] [UNSIGNED] [ZEROFILL]\n\nThese types are synonyms for DECIMAL. The FIXED synonym is available\nfor compatibility with other database systems.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(156, 'VAR_POP', 16, 'Syntax:\nVAR_POP(expr)\n\nReturns the population standard variance of expr. It considers rows as\nthe whole population, not as a sample, so it has the number of rows as\nthe denominator. You can also use VARIANCE(), which is equivalent but\nis not standard SQL.\n\nVAR_POP() returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(157, 'ELT', 36, 'Syntax:\nELT(N,str1,str2,str3,...)\n\nReturns str1 if N = 1, str2 if N = 2, and so on. Returns NULL if N is\nless than 1 or greater than the number of arguments. ELT() is the\ncomplement of FIELD().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT ELT(1, \'ej\', \'Heja\', \'hej\', \'foo\');\n        -> \'ej\'\nmysql> SELECT ELT(4, \'ej\', \'Heja\', \'hej\', \'foo\');\n        -> \'foo\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(158, 'ALTER VIEW', 38, 'Syntax:\nALTER\n    [ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]\n    [DEFINER = { user | CURRENT_USER }]\n    [SQL SECURITY { DEFINER | INVOKER }]\n    VIEW view_name [(column_list)]\n    AS select_statement\n    [WITH [CASCADED | LOCAL] CHECK OPTION]\n\nThis statement changes the definition of a view, which must exist. The\nsyntax is similar to that for CREATE VIEW and the effect is the same as\nfor CREATE OR REPLACE VIEW. See [HELP CREATE VIEW]. This statement\nrequires the CREATE VIEW and DROP privileges for the view, and some\nprivilege for each column referred to in the SELECT statement. As of\nMySQL 6.0.4, ALTER VIEW is allowed only to the definer or users with\nthe SUPER privilege.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/alter-view.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/alter-view.html'),
	(159, 'SHOW DATABASES', 26, 'Syntax:\nSHOW {DATABASES | SCHEMAS}\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW DATABASES lists the databases on the MySQL server host. SHOW\nSCHEMAS is a synonym for SHOW DATABASES. The LIKE clause, if present,\nindicates which database names to match. The WHERE clause can be given\nto select rows using more general conditions, as discussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\n\nYou see only those databases for which you have some kind of privilege,\nunless you have the global SHOW DATABASES privilege. You can also get\nthis list using the mysqlshow command.\n\nIf the server was started with the --skip-show-database option, you\ncannot use this statement at all unless you have the SHOW DATABASES\nprivilege.\n\nSHOW SCHEMAS can also be used.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-databases.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-databases.html'),
	(160, '~', 18, 'Syntax:\n~\n\nInvert all bits.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html\n\n', 'mysql> SELECT 5 & ~1;\n        -> 4\n', 'http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html'),
	(161, 'TEXT', 22, 'TEXT[(M)] [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 65,535 (216 - 1) characters. The\neffective maximum length is less if the value contains multi-byte\ncharacters. Each TEXT value is stored using a two-byte length prefix\nthat indicates the number of bytes in the value.\n\nAn optional length M can be given for this type. If this is done, MySQL\ncreates the column as the smallest TEXT type large enough to hold\nvalues M characters long.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(162, 'CONCAT_WS', 36, 'Syntax:\nCONCAT_WS(separator,str1,str2,...)\n\nCONCAT_WS() stands for Concatenate With Separator and is a special form\nof CONCAT(). The first argument is the separator for the rest of the\narguments. The separator is added between the strings to be\nconcatenated. The separator can be a string, as can the rest of the\narguments. If the separator is NULL, the result is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT CONCAT_WS(\',\',\'First name\',\'Second name\',\'Last Name\');\n        -> \'First name,Second name,Last Name\'\nmysql> SELECT CONCAT_WS(\',\',\'First name\',NULL,\'Last Name\');\n        -> \'First name,Last Name\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(163, 'ROW_COUNT', 15, 'Syntax:\nROW_COUNT()\n\nROW_COUNT() returns the number of rows updated, inserted, or deleted by\nthe preceding statement. This is the same as the row count that the\nmysql client displays and the value from the mysql_affected_rows() C\nAPI function.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           3 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> DELETE FROM t WHERE i IN(1,2);\nQuery OK, 2 rows affected (0.00 sec)\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           2 |\n+-------------+\n1 row in set (0.00 sec)\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(164, 'ASIN', 4, 'Syntax:\nASIN(X)\n\nReturns the arc sine of X, that is, the value whose sine is X. Returns\nNULL if X is not in the range -1 to 1.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT ASIN(0.2);\n        -> 0.20135792079033\nmysql> SELECT ASIN(\'foo\');\n\n+-------------+\n| ASIN(\'foo\') |\n+-------------+\n|           0 |\n+-------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+-----------------------------------------+\n| Level   | Code | Message                                 |\n+---------+------+-----------------------------------------+\n| Warning | 1292 | Truncated incorrect DOUBLE value: \'foo\' |\n+---------+------+-----------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(165, 'SIGN', 4, 'Syntax:\nSIGN(X)\n\nReturns the sign of the argument as -1, 0, or 1, depending on whether X\nis negative, zero, or positive.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT SIGN(-32);\n        -> -1\nmysql> SELECT SIGN(0);\n        -> 0\nmysql> SELECT SIGN(234);\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(166, 'SEC_TO_TIME', 31, 'Syntax:\nSEC_TO_TIME(seconds)\n\nReturns the seconds argument, converted to hours, minutes, and seconds,\nas a TIME value. The range of the result is constrained to that of the\nTIME data type. A warning occurs if the argument corresponds to a value\noutside that range.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT SEC_TO_TIME(2378);\n        -> \'00:39:38\'\nmysql> SELECT SEC_TO_TIME(2378) + 0;\n        -> 3938\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(167, 'FLOAT', 22, 'FLOAT[(M,D)] [UNSIGNED] [ZEROFILL]\n\nA small (single-precision) floating-point number. Allowable values are\n-3.402823466E+38 to -1.175494351E-38, 0, and 1.175494351E-38 to\n3.402823466E+38. These are the theoretical limits, based on the IEEE\nstandard. The actual range might be slightly smaller depending on your\nhardware or operating system.\n\nM is the total number of digits and D is the number of digits following\nthe decimal point. If M and D are omitted, values are stored to the\nlimits allowed by the hardware. A single-precision floating-point\nnumber is accurate to approximately 7 decimal places.\n\nUNSIGNED, if specified, disallows negative values.\n\nUsing FLOAT might give you some unexpected problems because all\ncalculations in MySQL are done with double precision. See\nhttp://dev.mysql.com/doc/refman/6.0/en/no-matching-rows.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(168, 'LOCATE', 36, 'Syntax:\nLOCATE(substr,str), LOCATE(substr,str,pos)\n\nThe first syntax returns the position of the first occurrence of\nsubstring substr in string str. The second syntax returns the position\nof the first occurrence of substring substr in string str, starting at\nposition pos. Returns 0 if substr is not in str.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT LOCATE(\'bar\', \'foobarbar\');\n        -> 4\nmysql> SELECT LOCATE(\'xbar\', \'foobar\');\n        -> 0\nmysql> SELECT LOCATE(\'bar\', \'foobarbar\', 5);\n        -> 7\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(169, 'CHARSET', 15, 'Syntax:\nCHARSET(str)\n\nReturns the character set of the string argument.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT CHARSET(\'abc\');\n        -> \'latin1\'\nmysql> SELECT CHARSET(CONVERT(\'abc\' USING utf8));\n        -> \'utf8\'\nmysql> SELECT CHARSET(USER());\n        -> \'utf8\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(170, 'SUBDATE', 31, 'Syntax:\nSUBDATE(date,INTERVAL expr unit), SUBDATE(expr,days)\n\nWhen invoked with the INTERVAL form of the second argument, SUBDATE()\nis a synonym for DATE_SUB(). For information on the INTERVAL unit\nargument, see the discussion for DATE_ADD().\n\nmysql> SELECT DATE_SUB(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2007-12-02\'\nmysql> SELECT SUBDATE(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2007-12-02\'\n\nThe second form allows the use of an integer value for days. In such\ncases, it is interpreted as the number of days to be subtracted from\nthe date or datetime expression expr.\n\nmysql> SELECT SUBDATE(\'2008-01-02 12:00:00\', 31);\n        -> \'2007-12-02 12:00:00\'\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(171, 'DAYOFYEAR', 31, 'Syntax:\nDAYOFYEAR(date)\n\nReturns the day of the year for date, in the range 1 to 366.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT DAYOFYEAR(\'2007-02-03\');\n        -> 34\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(172, 'LONGTEXT', 22, 'LONGTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 4,294,967,295 or 4GB (232 - 1)\ncharacters. The effective maximum length is less if the value contains\nmulti-byte characters. The effective maximum length of LONGTEXT columns\nalso depends on the configured maximum packet size in the client/server\nprotocol and available memory. Each LONGTEXT value is stored using a\nfour-byte length prefix that indicates the number of bytes in the\nvalue.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(173, '%', 4, 'Syntax:\nN % M\n\nModulo operation. Returns the remainder of N divided by M. For more\ninformation, see the description for the MOD() function in\nhttp://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html'),
	(174, 'KILL', 26, 'Syntax:\nKILL [CONNECTION | QUERY] thread_id\n\nEach connection to mysqld runs in a separate thread. You can see which\nthreads are running with the SHOW PROCESSLIST statement and kill a\nthread with the KILL thread_id statement.\n\nKILL allows the optional CONNECTION or QUERY modifier:\n\no KILL CONNECTION is the same as KILL with no modifier: It terminates\n  the connection associated with the given thread_id.\n\no KILL QUERY terminates the statement that the connection is currently\n  executing, but leaves the connection itself intact.\n\nIf you have the PROCESS privilege, you can see all threads. If you have\nthe SUPER privilege, you can kill all threads and statements.\nOtherwise, you can see and kill only your own threads and statements.\n\nYou can also use the mysqladmin processlist and mysqladmin kill\ncommands to examine and kill threads.\n\n*Note*: You cannot use KILL with the Embedded MySQL Server library,\nbecause the embedded server merely runs inside the threads of the host\napplication. It does not create any connection threads of its own.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/kill.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/kill.html'),
	(175, 'DISJOINT', 30, 'Disjoint(g1,g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially disjoint from (does\nnot intersect) g2.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html'),
	(176, 'ASTEXT', 3, 'AsText(g), AsWKT(g)\n\nConverts a value in internal geometry format to its WKT representation\nand returns the string result.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-to-convert-geometries-between-formats.html\n\n', 'mysql> SET @g = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT AsText(GeomFromText(@g));\n+--------------------------+\n| AsText(GeomFromText(@g)) |\n+--------------------------+\n| LINESTRING(1 1,2 2,3 3)  |\n+--------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/functions-to-convert-geometries-between-formats.html'),
	(177, 'LPAD', 36, 'Syntax:\nLPAD(str,len,padstr)\n\nReturns the string str, left-padded with the string padstr to a length\nof len characters. If str is longer than len, the return value is\nshortened to len characters.\n\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT LPAD(\'hi\',4,\'??\');\n        -> \'??hi\'\nmysql> SELECT LPAD(\'hi\',1,\'??\');\n        -> \'h\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(178, 'DECLARE CONDITION', 23, 'Syntax:\nDECLARE condition_name CONDITION FOR condition_value\n\ncondition_value:\n    SQLSTATE [VALUE] sqlstate_value\n  | mysql_error_code\n\nThe DECLARE ... CONDITION statement defines a named error condition. It\nspecifies a condition that needs specific handling and associates a\nname with that condition. The name can be referred to in a subsequence\nDECLARE ... HANDLER statement. See [HELP DECLARE HANDLER].\n\nA condition_value for DECLARE ... CONDITION can be an SQLSTATE value (a\n5-character string literal) or a MySQL error code (a number). You\nshould not use SQLSTATE value \'00000\' or MySQL error code 0, because\nthose indicate sucess rather than an error condition. For a list of\nSQLSTATE values and MySQL error codes, see\nhttp://dev.mysql.com/doc/refman/6.0/en/error-messages-server.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/declare-condition.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/declare-condition.html'),
	(179, 'OVERLAPS', 30, 'Overlaps(g1,g2)\n\nReturns 1 or 0 to indicate whether g1 spatially overlaps g2. The term\nspatially overlaps is used if two geometries intersect and their\nintersection results in a geometry of the same dimension but not equal\nto either of the given geometries.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html'),
	(180, 'SET GLOBAL SQL_SLAVE_SKIP_COUNTER', 26, 'Syntax:\nSET GLOBAL SQL_SLAVE_SKIP_COUNTER = N\n\nThis statement skips the next N events from the master. This is useful\nfor recovering from replication stops caused by a statement.\n\nThis statement is valid only when the slave thread is not running.\nOtherwise, it produces an error.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/set-global-sql-slave-skip-counter.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/set-global-sql-slave-skip-counter.html'),
	(181, 'NUMGEOMETRIES', 25, 'NumGeometries(gc)\n\nReturns the number of geometries in the GeometryCollection value gc.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#geometrycollection-property-functions\n\n', 'mysql> SET @gc = \'GeometryCollection(Point(1 1),LineString(2 2, 3 3))\';\nmysql> SELECT NumGeometries(GeomFromText(@gc));\n+----------------------------------+\n| NumGeometries(GeomFromText(@gc)) |\n+----------------------------------+\n|                                2 |\n+----------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#geometrycollection-property-functions'),
	(182, 'MONTHNAME', 31, 'Syntax:\nMONTHNAME(date)\n\nReturns the full name of the month for date. The language used for the\nname is controlled by the value of the lc_time_names system variable\n(http://dev.mysql.com/doc/refman/6.0/en/locale-support.html).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT MONTHNAME(\'2008-02-03\');\n        -> \'February\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(183, 'PROCEDURE ANALYSE', 37, 'Syntax:\nanalyse([max_elements[,max_memory]])\n\nThis procedure is defined in the sql/sql_analyse.cc file. It examines\nthe result from a query and returns an analysis of the results that\nsuggests optimal data types for each column. To obtain this analysis,\nappend PROCEDURE ANALYSE to the end of a SELECT statement:\n\nSELECT ... FROM ... WHERE ... PROCEDURE ANALYSE([max_elements,[max_memory]])\n\nFor example:\n\nSELECT col1, col2 FROM table1 PROCEDURE ANALYSE(10, 2000);\n\nThe results show some statistics for the values returned by the query,\nand propose an optimal data type for the columns. This can be helpful\nfor checking your existing tables, or after importing new data. You may\nneed to try different settings for the arguments so that PROCEDURE\nANALYSE() does not suggest the ENUM data type when it is not\nappropriate.\n\nThe arguments are optional and are used as follows:\n\no max_elements (default 256) is the maximum number of distinct values\n  that analyse notices per column. This is used by analyse to check\n  whether the optimal data type should be of type ENUM; if there are\n  more than max_elements distinct values, then ENUM is not a suggested\n  type.\n\no max_memory (default 8192) is the maximum amount of memory that\n  analyse should allocate per column while trying to find all distinct\n  values.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/procedure-analyse.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/procedure-analyse.html'),
	(184, 'CHANGE MASTER TO', 26, 'Syntax:\nCHANGE MASTER TO master_def [, master_def] ...\n\nmaster_def:\n    MASTER_HOST = \'host_name\'\n  | MASTER_USER = \'user_name\'\n  | MASTER_PASSWORD = \'password\'\n  | MASTER_PORT = port_num\n  | MASTER_CONNECT_RETRY = interval\n  | MASTER_HEARTBEAT_PERIOD = interval\n  | MASTER_LOG_FILE = \'master_log_name\'\n  | MASTER_LOG_POS = master_log_pos\n  | RELAY_LOG_FILE = \'relay_log_name\'\n  | RELAY_LOG_POS = relay_log_pos\n  | MASTER_SSL = {0|1}\n  | MASTER_SSL_CA = \'ca_file_name\'\n  | MASTER_SSL_CAPATH = \'ca_directory_name\'\n  | MASTER_SSL_CERT = \'cert_file_name\'\n  | MASTER_SSL_KEY = \'key_file_name\'\n  | MASTER_SSL_CIPHER = \'cipher_list\'\n  | MASTER_SSL_VERIFY_SERVER_CERT = {0|1}\n  | IGNORE_SERVER_IDS = (server_id_list)\n\nserver_id_list:\n    [server_id_1[, server_id_2[ ... ]]]\n\nCHANGE MASTER TO changes the parameters that the slave server uses for\nconnecting to and communicating with the master server. It also updates\nthe contents of the master.info and relay-log.info files.\n\nMASTER_USER, MASTER_PASSWORD, MASTER_SSL, MASTER_SSL_CA,\nMASTER_SSL_CAPATH, MASTER_SSL_CERT, MASTER_SSL_KEY, MASTER_SSL_CIPHER,\nand MASTER_SSL_VERIFY_SERVER_CERT provide information to the slave\nabout how to connect to its master. See\nhttp://dev.mysql.com/doc/refman/6.0/en/ssl-options.html.\n\nMASTER_CONNECT_RETRY specifies how many seconds to wait between connect\nretries. The default is 60. The number of reconnection attempts is\nlimited by the --master-retry-count server option; for more\ninformation, see\nhttp://dev.mysql.com/doc/refman/6.0/en/replication-options.html.\n\nThe SSL options (MASTER_SSL, MASTER_SSL_CA, MASTER_SSL_CAPATH,\nMASTER_SSL_CERT, MASTER_SSL_KEY, MASTER_SSL_CIPHER), and\nMASTER_SSL_VERIFY_SERVER_CERT can be changed even on slaves that are\ncompiled without SSL support. They are saved to the master.info file,\nbut are ignored unless you use a server that has SSL support enabled.\n\nIf you don\'t specify a given parameter, it keeps its old value, except\nas indicated in the following discussion. For example, if the password\nto connect to your MySQL master has changed, you just need to issue\nthese statements to tell the slave about the new password:\n\nSTOP SLAVE; -- if replication was running\nCHANGE MASTER TO MASTER_PASSWORD=\'new3cret\';\nSTART SLAVE; -- if you want to restart replication\n\nThere is no need to specify the parameters that do not change (host,\nport, user, and so forth).\n\nMASTER_HOST and MASTER_PORT are the host name (or IP address) of the\nmaster host and its TCP/IP port.\n\nMASTER_HEARTBEAT_PERIOD is used to set the interval in seconds between\nreplication heartbeats. Whenever the master\'s binlog is updated with an\nevent, the waiting period for the next heartbeat is reset. interval is\na decimal value having the range 0 to 4294967 seconds and a resolution\nto hundredths of a second; the smallest nonzero value is 0.001.\nHeartbeats are sent by the master only if there are no unsent events in\nthe binlog file for a period longer than interval.\n\nMASTER_HEARTBEAT_PERIOD was added in MySQL 6.0.4.\n\nSetting interval to 0 disables heartbeats altogether. The default value\nfor interval is equal to the value of slave_net_timeout\n(http://dev.mysql.com/doc/refman/5.1/en/replication-options-master.html\n#sysvar_slave_net_timeout) divided by 2.\n\n*Note*: Setting @@global.slave_net_timeout to a value less than that of\nthe current heartbeat interval results in a warning being issued.\n\nIssuing RESET SLAVE resets the heartbeat interval to the default.\n\n*Note*: Replication cannot use Unix socket files. You must be able to\nconnect to the master MySQL server using TCP/IP.\n\nIf you specify MASTER_HOST or MASTER_PORT, the slave assumes that the\nmaster server is different from before (even if you specify a host or\nport value that is the same as the current value.) In this case, the\nold values for the master binary log name and position are considered\nno longer applicable, so if you do not specify MASTER_LOG_FILE and\nMASTER_LOG_POS in the statement, MASTER_LOG_FILE=\'\' and\nMASTER_LOG_POS=4 are silently appended to it.\n\nMASTER_LOG_FILE and MASTER_LOG_POS are the coordinates at which the\nslave I/O thread should begin reading from the master the next time the\nthread starts. If you specify either of them, you cannot specify\nRELAY_LOG_FILE or RELAY_LOG_POS. If neither of MASTER_LOG_FILE or\nMASTER_LOG_POS are specified, the slave uses the last coordinates of\nthe slave SQL thread before CHANGE MASTER TO was issued. This ensures\nthat there is no discontinuity in replication, even if the slave SQL\nthread was late compared to the slave I/O thread, when you merely want\nto change, say, the password to use.\n\nIGNORE_SERVER_IDS was added in MySQL 6.0.10. This option takes a\ncomma-separated list of 0 or more server IDs; events from the\ncorresponding servers are ignored, with the exception of log rotation\nand deletion events, which are still recorded in the relay log.\n\nIn circular replication, the originating server normally acts as the\nterminator of its own events, so that they are not applied more than\nonce. Thus, this option is useful in circular replication when one of\nthe servers in the circle is removed. For example, suppose that you\nhave a circular replication setup with 4 servers, having server IDs 1,\n2, 3, and 4, and server 3 fails. When bridging the gap by starting\nreplication from server 2 to server 4, you can include\nIGNORE_SERVER_IDS = (3) in the CHANGE MASTER TO statement that you\nissue on server 4 to tell it to use server 2 as its master instead of\nserver 3. Doing so causes it to ignore and not to propagate any\nstatements that originated with the server that is no longer in use.\n\nIf a CHANGE MASTER TO statement is issued without any IGNORE_SERVER_IDS\noption, any existing list is preserved; RESET SLAVE also has no effect\non the server ID list. To clear the list of servers that are ignored,\nit is necessary to use the option with an empty list (that is, as\nIGNORE_SERVER_IDS = ()).\n\nIf IGNORE_SERVER_IDS contains the server\'s own ID and the server was\nstarted with the --replicate-same-server-id option enabled, an error\nresults.\n\nAlso beginning with MySQL 6.0.10, the master.info file and the output\nof SHOW SLAVE STATUS are extended to provide the list of servers that\nare currently ignored. For more information, see\nhttp://dev.mysql.com/doc/refman/6.0/en/slave-logs-status.html, and\n[HELP SHOW SLAVE STATUS].\n\nCHANGE MASTER TO deletes all relay log files and starts a new one,\nunless you specify RELAY_LOG_FILE or RELAY_LOG_POS. In that case, relay\nlogs are kept; the relay_log_purge global variable is set silently to\n0.\n\nCHANGE MASTER TO is useful for setting up a slave when you have the\nsnapshot of the master and have recorded the log and the offset\ncorresponding to it. After loading the snapshot into the slave, you can\nrun CHANGE MASTER TO MASTER_LOG_FILE=\'log_name_on_master\',\nMASTER_LOG_POS=log_offset_on_master on the slave.\n\nThe following example changes the master and master\'s binary log\ncoordinates. This is used when you want to set up the slave to\nreplicate the master:\n\nCHANGE MASTER TO\n  MASTER_HOST=\'master2.mycompany.com\',\n  MASTER_USER=\'replication\',\n  MASTER_PASSWORD=\'bigs3cret\',\n  MASTER_PORT=3306,\n  MASTER_LOG_FILE=\'master2-bin.001\',\n  MASTER_LOG_POS=4,\n  MASTER_CONNECT_RETRY=10;\n\nThe next example shows an operation that is less frequently employed.\nIt is used when the slave has relay logs that you want it to execute\nagain for some reason. To do this, the master need not be reachable.\nYou need only use CHANGE MASTER TO and start the SQL thread (START\nSLAVE SQL_THREAD):\n\nCHANGE MASTER TO\n  RELAY_LOG_FILE=\'slave-relay-bin.006\',\n  RELAY_LOG_POS=4025;\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/change-master-to.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/change-master-to.html'),
	(185, 'DROP DATABASE', 38, 'Syntax:\nDROP {DATABASE | SCHEMA} [IF EXISTS] db_name\n\nDROP DATABASE drops all tables in the database and deletes the\ndatabase. Be very careful with this statement! To use DROP DATABASE,\nyou need the DROP privilege on the database. DROP SCHEMA is a synonym\nfor DROP DATABASE.\n\n*Important*: When a database is dropped, user privileges on the\ndatabase are not automatically dropped. See [HELP GRANT].\n\nIF EXISTS is used to prevent an error from occurring if the database\ndoes not exist.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-database.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-database.html'),
	(186, 'MBREQUAL', 6, 'MBREqual(g1,g2)\n\nReturns 1 or 0 to indicate whether the Minimum Bounding Rectangles of\nthe two geometries g1 and g2 are the same.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html'),
	(187, 'TIMESTAMP FUNCTION', 31, 'Syntax:\nTIMESTAMP(expr), TIMESTAMP(expr1,expr2)\n\nWith a single argument, this function returns the date or datetime\nexpression expr as a datetime value. With two arguments, it adds the\ntime expression expr2 to the date or datetime expression expr1 and\nreturns the result as a datetime value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT TIMESTAMP(\'2003-12-31\');\n        -> \'2003-12-31 00:00:00\'\nmysql> SELECT TIMESTAMP(\'2003-12-31 12:00:00\',\'12:00:00\');\n        -> \'2004-01-01 00:00:00\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(188, 'CHARACTER_LENGTH', 36, 'Syntax:\nCHARACTER_LENGTH(str)\n\nCHARACTER_LENGTH() is a synonym for CHAR_LENGTH().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(189, 'SHOW GRANTS', 26, 'Syntax:\nSHOW GRANTS [FOR user]\n\nThis statement lists the GRANT statement or statements that must be\nissued to duplicate the privileges that are granted to a MySQL user\naccount. The account is named using the same format as for the GRANT\nstatement; for example, \'jeffrey\'@\'localhost\'. If you specify only the\nuser name part of the account name, a host name part of \'%\' is used.\nFor additional information about specifying account names, see [HELP\nGRANT].\n\nmysql> SHOW GRANTS FOR \'root\'@\'localhost\';\n+---------------------------------------------------------------------+\n| Grants for root@localhost                                           |\n+---------------------------------------------------------------------+\n| GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'localhost\' WITH GRANT OPTION |\n+---------------------------------------------------------------------+\n\nTo list the privileges granted to the account that you are using to\nconnect to the server, you can use any of the following statements:\n\nSHOW GRANTS;\nSHOW GRANTS FOR CURRENT_USER;\nSHOW GRANTS FOR CURRENT_USER();\n\nSHOW GRANTS FOR CURRENT_USER (or any of the equivalent syntaxes) is\nused in DEFINER context, such as within a stored procedure that is\ndefined with SQL SECURITY DEFINER), the grants displayed are those of\nthe definer and not the invoker.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-grants.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-grants.html'),
	(190, 'SHOW PRIVILEGES', 26, 'Syntax:\nSHOW PRIVILEGES\n\nSHOW PRIVILEGES shows the list of system privileges that the MySQL\nserver supports. The exact list of privileges depends on the version of\nyour server.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-privileges.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-privileges.html'),
	(191, 'INSERT FUNCTION', 36, 'Syntax:\nINSERT(str,pos,len,newstr)\n\nReturns the string str, with the substring beginning at position pos\nand len characters long replaced by the string newstr. Returns the\noriginal string if pos is not within the length of the string. Replaces\nthe rest of the string from position pos if len is not within the\nlength of the rest of the string. Returns NULL if any argument is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT INSERT(\'Quadratic\', 3, 4, \'What\');\n        -> \'QuWhattic\'\nmysql> SELECT INSERT(\'Quadratic\', -1, 4, \'What\');\n        -> \'Quadratic\'\nmysql> SELECT INSERT(\'Quadratic\', 3, 100, \'What\');\n        -> \'QuWhat\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(192, 'CRC32', 4, 'Syntax:\nCRC32(expr)\n\nComputes a cyclic redundancy check value and returns a 32-bit unsigned\nvalue. The result is NULL if the argument is NULL. The argument is\nexpected to be a string and (if possible) is treated as one if it is\nnot.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT CRC32(\'MySQL\');\n        -> 3259397556\nmysql> SELECT CRC32(\'mysql\');\n        -> 2501908538\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(193, 'XOR', 13, 'Syntax:\nXOR\n\nLogical XOR. Returns NULL if either operand is NULL. For non-NULL\noperands, evaluates to 1 if an odd number of operands is non-zero,\notherwise 0 is returned.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/logical-operators.html\n\n', 'mysql> SELECT 1 XOR 1;\n        -> 0\nmysql> SELECT 1 XOR 0;\n        -> 1\nmysql> SELECT 1 XOR NULL;\n        -> NULL\nmysql> SELECT 1 XOR 1 XOR 1;\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/logical-operators.html'),
	(194, 'STARTPOINT', 12, 'StartPoint(ls)\n\nReturns the Point that is the start point of the LineString value ls.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions\n\n', 'mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT AsText(StartPoint(GeomFromText(@ls)));\n+---------------------------------------+\n| AsText(StartPoint(GeomFromText(@ls))) |\n+---------------------------------------+\n| POINT(1 1)                            |\n+---------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions'),
	(195, 'DECLARE VARIABLE', 23, 'Syntax:\nDECLARE var_name [, var_name] ... type [DEFAULT value]\n\nThis statement is used to declare local variables within stored\nprograms. To provide a default value for the variable, include a\nDEFAULT clause. The value can be specified as an expression; it need\nnot be a constant. If the DEFAULT clause is missing, the initial value\nis NULL.\n\nLocal variables are treated like stored routine parameters with respect\nto data type and overflow checking. See [HELP CREATE PROCEDURE].\n\nLocal variable names are not case sensitive.\n\nThe scope of a local variable is within the BEGIN ... END block where\nit is declared. The variable can be referred to in blocks nested within\nthe declaring block, except those blocks that declare a variable with\nthe same name.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/declare-local-variable.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/declare-local-variable.html'),
	(196, 'GRANT', 9, 'Syntax:\nGRANT\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    TO user [IDENTIFIED BY [PASSWORD] \'password\']\n        [, user [IDENTIFIED BY [PASSWORD] \'password\']] ...\n    [REQUIRE {NONE | ssl_option [[AND] ssl_option] ...}]\n    [WITH with_option [with_option] ...]\n\nobject_type:\n    TABLE\n  | FUNCTION\n  | PROCEDURE\n\npriv_level:\n    *\n  | *.*\n  | db_name.*\n  | db_name.tbl_name\n  | tbl_name\n  | db_name.routine_name\n\nwith_option:\n    GRANT OPTION\n  | MAX_QUERIES_PER_HOUR count\n  | MAX_UPDATES_PER_HOUR count\n  | MAX_CONNECTIONS_PER_HOUR count\n  | MAX_USER_CONNECTIONS count\n\nssl_option:\n    SSL\n  | X509\n  | CIPHER \'cipher\'\n  | ISSUER \'issuer\'\n  | SUBJECT \'subject\'\n\nThe GRANT statement enables system administrators to create MySQL user\naccounts and to grant rights to accounts. To use GRANT, you must have\nthe GRANT OPTION privilege, and you must have the privileges that you\nare granting. The REVOKE statement is related and enables\nadministrators to remove account privileges. To determine what\nprivileges an account has, use SHOW GRANTS. See [HELP REVOKE], and\n[HELP SHOW GRANTS].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/grant.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/grant.html'),
	(197, 'MPOLYFROMTEXT', 3, 'MPolyFromText(wkt[,srid]), MultiPolygonFromText(wkt[,srid])\n\nConstructs a MULTIPOLYGON value using its WKT representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions'),
	(198, 'MBRINTERSECTS', 6, 'MBRIntersects(g1,g2)\n\nReturns 1 or 0 to indicate whether the Minimum Bounding Rectangles of\nthe two geometries g1 and g2 intersect.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html'),
	(199, 'BIT_OR', 16, 'Syntax:\nBIT_OR(expr)\n\nReturns the bitwise OR of all bits in expr. The calculation is\nperformed with 64-bit (BIGINT) precision.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(200, 'YEARWEEK', 31, 'Syntax:\nYEARWEEK(date), YEARWEEK(date,mode)\n\nReturns year and week for a date. The mode argument works exactly like\nthe mode argument to WEEK(). The year in the result may be different\nfrom the year in the date argument for the first and the last week of\nthe year.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT YEARWEEK(\'1987-01-01\');\n        -> 198653\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(201, 'NOT BETWEEN', 17, 'Syntax:\nexpr NOT BETWEEN min AND max\n\nThis is the same as NOT (expr BETWEEN min AND max).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(202, 'IS NOT', 17, 'Syntax:\nIS NOT boolean_value\n\nTests a value against a boolean value, where boolean_value can be TRUE,\nFALSE, or UNKNOWN.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 1 IS NOT UNKNOWN, 0 IS NOT UNKNOWN, NULL IS NOT UNKNOWN;\n        -> 1, 1, 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(203, 'LOG10', 4, 'Syntax:\nLOG10(X)\n\nReturns the base-10 logarithm of X.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT LOG10(2);\n        -> 0.30102999566398\nmysql> SELECT LOG10(100);\n        -> 2\nmysql> SELECT LOG10(-100);\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(204, 'SQRT', 4, 'Syntax:\nSQRT(X)\n\nReturns the square root of a non-negative number X.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT SQRT(4);\n        -> 2\nmysql> SELECT SQRT(20);\n        -> 4.4721359549996\nmysql> SELECT SQRT(-16);\n        -> NULL        \n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(205, 'DECIMAL', 22, 'DECIMAL[(M[,D])] [UNSIGNED] [ZEROFILL]\n\nA packed "exact" fixed-point number. M is the total number of digits\n(the precision) and D is the number of digits after the decimal point\n(the scale). The decimal point and (for negative numbers) the "-" sign\nare not counted in M. If D is 0, values have no decimal point or\nfractional part. The maximum number of digits (M) for DECIMAL is 65.\nThe maximum number of supported decimals (D) is 30. If D is omitted,\nthe default is 0. If M is omitted, the default is 10.\n\nUNSIGNED, if specified, disallows negative values.\n\nAll basic calculations (+, -, *, /) with DECIMAL columns are done with\na precision of 65 digits.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(206, 'CREATE INDEX', 38, 'Syntax:\nCREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name\n    [index_type]\n    ON tbl_name (index_col_name,...)\n    [index_option] ...\n\nindex_col_name:\n    col_name [(length)] [ASC | DESC]\n\nindex_type:\n    USING {BTREE | HASH | RTREE}\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n\nCREATE INDEX is mapped to an ALTER TABLE statement to create indexes.\nSee [HELP ALTER TABLE]. CREATE INDEX cannot be used to create a PRIMARY\nKEY; use ALTER TABLE instead. For more information about indexes, see\nhttp://dev.mysql.com/doc/refman/6.0/en/mysql-indexes.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-index.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-index.html'),
	(207, 'CREATE FUNCTION', 38, 'The CREATE FUNCTION statement is used to create stored functions and\nuser-defined functions (UDFs):\n\no For information about creating stored functions, see [HELP CREATE\n  PROCEDURE].\n\no For information about creating user-defined functions, see [HELP\n  CREATE FUNCTION UDF].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-function.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-function.html'),
	(208, 'ALTER DATABASE', 38, 'Syntax:\nALTER {DATABASE | SCHEMA} [db_name]\n    alter_specification ...\nALTER {DATABASE | SCHEMA} db_name\n    UPGRADE DATA DIRECTORY NAME\n\nalter_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nALTER DATABASE enables you to change the overall characteristics of a\ndatabase. These characteristics are stored in the db.opt file in the\ndatabase directory. To use ALTER DATABASE, you need the ALTER privilege\non the database. ALTER SCHEMA is a synonym for ALTER DATABASE.\n\nThe CHARACTER SET clause changes the default database character set.\nThe COLLATE clause changes the default database collation.\nhttp://dev.mysql.com/doc/refman/6.0/en/charset.html, discusses\ncharacter set and collation names.\n\nYou can see what character sets and collations are available using,\nrespectively, the SHOW CHARACTER SET and SHOW COLLATION statements. See\n[HELP SHOW CHARACTER SET], and [HELP SHOW COLLATION], for more\ninformation.\n\nThe database name can be omitted from the first syntax, in which case\nthe statement applies to the default database.\n\nThe syntax that includes the UPGRADE DATA DIRECTORY NAME clause updates\nthe name of the directory associated with the database to use the\nencoding implemented in MySQL 5.1 for mapping database names to\ndatabase directory names (see\nhttp://dev.mysql.com/doc/refman/6.0/en/identifier-mapping.html). This\nclause is for use under these conditions:\n\no It is intended when upgrading MySQL to 5.1 or later from older\n  versions.\n\no It is intended to update a database directory name to the current\n  encoding format if the name contains special characters that need\n  encoding.\n\no The statement is used by mysqlcheck (as invoked by mysql_upgrade).\n\nFor example,if a database in MySQL 5.0 has a name of a-b-c, the name\ncontains instance of the `-\' character. In 5.0, the database directory\nis also named a-b-c, which is not necessarily safe for all file\nsystems. In MySQL 5.1 and up, the same database name is encoded as\na@002db@002dc to produce a file system-neutral directory name.\n\nWhen a MySQL installation is upgraded to MySQL 5.1 or later from an\nolder version,the server displays a name such as a-b-c (which is in the\nold format) as #mysql50#a-b-c, and you must refer to the name using the\n#mysql50# prefix. Use UPGRADE DATA DIRECTORY NAME in this case to\nexplicitly tell the server to re-encode the database directory name to\nthe current encoding format:\n\nALTER DATABASE `#mysql50#a-b-c` UPGRADE DATA DIRECTORY NAME;\n\nAfter executing this statement, you can refer to the database as a-b-c\nwithout the special #mysql50# prefix.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/alter-database.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/alter-database.html'),
	(209, 'GEOMETRYN', 25, 'GeometryN(gc,N)\n\nReturns the N-th geometry in the GeometryCollection value gc.\nGeometries are numbered beginning with 1.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#geometrycollection-property-functions\n\n', 'mysql> SET @gc = \'GeometryCollection(Point(1 1),LineString(2 2, 3 3))\';\nmysql> SELECT AsText(GeometryN(GeomFromText(@gc),1));\n+----------------------------------------+\n| AsText(GeometryN(GeomFromText(@gc),1)) |\n+----------------------------------------+\n| POINT(1 1)                             |\n+----------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#geometrycollection-property-functions'),
	(210, '<<', 18, 'Syntax:\n<<\n\nShifts a longlong (BIGINT) number to the left.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html\n\n', 'mysql> SELECT 1 << 2;\n        -> 4\n', 'http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html'),
	(211, 'SHOW TABLE STATUS', 26, 'Syntax:\nSHOW TABLE STATUS [FROM db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TABLE STATUS works likes SHOW TABLES, but provides a lot of\ninformation about each non-TEMPORARY table. You can also get this list\nusing the mysqlshow --status db_name command. The LIKE clause, if\npresent, indicates which table names to match. The WHERE clause can be\ngiven to select rows using more general conditions, as discussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-table-status.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-table-status.html'),
	(212, 'MD5', 11, 'Syntax:\nMD5(str)\n\nCalculates an MD5 128-bit checksum for the string. The value is\nreturned as a binary string of 32 hex digits, or NULL if the argument\nwas NULL. The return value can, for example, be used as a hash key.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'mysql> SELECT MD5(\'testing\');\n        -> \'ae2b1fca515949e5d54fb22b8ed95575\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(213, '<', 17, 'Syntax:\n<\n\nLess than:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 2 < 2;\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(214, 'UNIX_TIMESTAMP', 31, 'Syntax:\nUNIX_TIMESTAMP(), UNIX_TIMESTAMP(date)\n\nIf called with no argument, returns a Unix timestamp (seconds since\n\'1970-01-01 00:00:00\' UTC) as an unsigned integer. If UNIX_TIMESTAMP()\nis called with a date argument, it returns the value of the argument as\nseconds since \'1970-01-01 00:00:00\' UTC. date may be a DATE string, a\nDATETIME string, a TIMESTAMP, or a number in the format YYMMDD or\nYYYYMMDD. The server interprets date as a value in the current time\nzone and converts it to an internal value in UTC. Clients can set their\ntime zone as described in\nhttp://dev.mysql.com/doc/refman/6.0/en/time-zone-support.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT UNIX_TIMESTAMP();\n        -> 1196440210\nmysql> SELECT UNIX_TIMESTAMP(\'2007-11-30 10:30:19\');\n        -> 1196440219\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(215, 'DAYOFMONTH', 31, 'Syntax:\nDAYOFMONTH(date)\n\nReturns the day of the month for date, in the range 1 to 31, or 0 for\ndates such as \'0000-00-00\' or \'2008-00-00\' that have a zero day part.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT DAYOFMONTH(\'2007-02-03\');\n        -> 3\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(216, 'ASCII', 36, 'Syntax:\nASCII(str)\n\nReturns the numeric value of the leftmost character of the string str.\nReturns 0 if str is the empty string. Returns NULL if str is NULL.\nASCII() works for 8-bit characters.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT ASCII(\'2\');\n        -> 50\nmysql> SELECT ASCII(2);\n        -> 50\nmysql> SELECT ASCII(\'dx\');\n        -> 100\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(217, 'DIV', 4, 'Syntax:\nDIV\n\nInteger division. Similar to FLOOR(), but is safe with BIGINT values.\n\nAs of MySQL 6.0.10, if either operand has a non-integer type, the\noperands are converted to DECIMAL and divided using DECIMAL arithmetic\nbefore converting the result to BIGINT. If the result exceeds BIGINT\nrange, an error occurs. Before MySQL 6.0.10, incorrect results may\noccur for non-integer operands that exceed BIGINT range.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html\n\n', 'mysql> SELECT 5 DIV 2;\n        -> 2\n', 'http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html'),
	(218, 'RENAME USER', 9, 'Syntax:\nRENAME USER old_user TO new_user\n    [, old_user TO new_user] ...\n\nThe RENAME USER statement renames existing MySQL accounts. To use it,\nyou must have the global CREATE USER privilege or the UPDATE privilege\nfor the mysql database. An error occurs if any old account does not\nexist or any new account exists. Each account is named using the same\nformat as for the GRANT statement; for example, \'jeffrey\'@\'localhost\'.\nIf you specify only the user name part of the account name, a host name\npart of \'%\' is used. For additional information about specifying\naccount names, see [HELP GRANT].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/rename-user.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/rename-user.html'),
	(219, 'SHOW SLAVE STATUS', 26, 'Syntax:\nSHOW SLAVE STATUS\n\nThis statement provides status information on essential parameters of\nthe slave threads. If you issue this statement using the mysql client,\nyou can use a \\G statement terminator rather than a semicolon to obtain\na more readable vertical layout:\n\nmysql> SHOW SLAVE STATUS\\G\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: localhost\n                  Master_User: root\n                  Master_Port: 3306\n                Connect_Retry: 3\n              Master_Log_File: gbichot-bin.005\n          Read_Master_Log_Pos: 79\n               Relay_Log_File: gbichot-relay-bin.005\n                Relay_Log_Pos: 548\n        Relay_Master_Log_File: gbichot-bin.005\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n                   Last_Errno: 0\n                   Last_Error:\n                 Skip_Counter: 0\n          Exec_Master_Log_Pos: 79\n              Relay_Log_Space: 552\n              Until_Condition: None\n               Until_Log_File:\n                Until_Log_Pos: 0\n           Master_SSL_Allowed: No\n           Master_SSL_CA_File:\n           Master_SSL_CA_Path:\n              Master_SSL_Cert:\n            Master_SSL_Cipher:\n               Master_SSL_Key:\n        Seconds_Behind_Master: 8\nMaster_SSL_Verify_Server_Cert: No\n                Last_IO_Errno: 0\n                Last_IO_Error:\n               Last_SQL_Errno: 0\n               Last_SQL_Error:\n  Replicate_Ignore_Server_Ids: 0                  \n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-slave-status.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-slave-status.html'),
	(220, 'GEOMETRY', 33, 'MySQL provides a standard way of creating spatial columns for geometry\ntypes, for example, with CREATE TABLE or ALTER TABLE. Currently,\nspatial columns are supported for MyISAM, InnoDB, NDB, and ARCHIVE\ntables. See also the annotations about spatial indexes under [HELP\nSPATIAL].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-columns.html\n\n', 'CREATE TABLE geom (g GEOMETRY);\n', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-columns.html'),
	(221, 'NUMPOINTS', 12, 'NumPoints(ls)\n\nReturns the number of Point objects in the LineString value ls.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions\n\n', 'mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT NumPoints(GeomFromText(@ls));\n+------------------------------+\n| NumPoints(GeomFromText(@ls)) |\n+------------------------------+\n|                            3 |\n+------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions'),
	(222, '&', 18, 'Syntax:\n&\n\nBitwise AND:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html\n\n', 'mysql> SELECT 29 & 15;\n        -> 13\n', 'http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html'),
	(223, 'LOCALTIMESTAMP', 31, 'Syntax:\nLOCALTIMESTAMP, LOCALTIMESTAMP()\n\nLOCALTIMESTAMP and LOCALTIMESTAMP() are synonyms for NOW().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(224, 'CONVERT', 36, 'Syntax:\nCONVERT(expr,type), CONVERT(expr USING transcoding_name)\n\nThe CONVERT() and CAST() functions take a value of one type and produce\na value of another type.\n\nThe type can be one of the following values:\n\no BINARY[(N)]\n\no CHAR[(N)]\n\no DATE\n\no DATETIME\n\no DECIMAL[(M[,D])]\n\no SIGNED [INTEGER]\n\no TIME\n\no UNSIGNED [INTEGER]\n\nBINARY produces a string with the BINARY data type. See\nhttp://dev.mysql.com/doc/refman/6.0/en/binary-varbinary.html for a\ndescription of how this affects comparisons. If the optional length N\nis given, BINARY(N) causes the cast to use no more than N bytes of the\nargument. Values shorter than N bytes are padded with 0x00 bytes to a\nlength of N.\n\nCHAR(N) causes the cast to use no more than N characters of the\nargument.\n\nCAST() and CONVERT(... USING ...) are standard SQL syntax. The\nnon-USING form of CONVERT() is ODBC syntax.\n\nCONVERT() with USING is used to convert data between different\ncharacter sets. In MySQL, transcoding names are the same as the\ncorresponding character set names. For example, this statement converts\nthe string \'abc\' in the default character set to the corresponding\nstring in the utf8 character set:\n\nSELECT CONVERT(\'abc\' USING utf8);\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/cast-functions.html\n\n', 'SELECT enum_col FROM tbl_name ORDER BY CAST(enum_col AS CHAR);\n', 'http://dev.mysql.com/doc/refman/6.0/en/cast-functions.html'),
	(225, 'ADDDATE', 31, 'Syntax:\nADDDATE(date,INTERVAL expr unit), ADDDATE(expr,days)\n\nWhen invoked with the INTERVAL form of the second argument, ADDDATE()\nis a synonym for DATE_ADD(). The related function SUBDATE() is a\nsynonym for DATE_SUB(). For information on the INTERVAL unit argument,\nsee the discussion for DATE_ADD().\n\nmysql> SELECT DATE_ADD(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2008-02-02\'\nmysql> SELECT ADDDATE(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2008-02-02\'\n\nWhen invoked with the days form of the second argument, MySQL treats it\nas an integer number of days to be added to expr.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT ADDDATE(\'2008-01-02\', 31);\n        -> \'2008-02-02\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(226, 'REPEAT LOOP', 23, 'Syntax:\n[begin_label:] REPEAT\n    statement_list\nUNTIL search_condition\nEND REPEAT [end_label]\n\nThe statement list within a REPEAT statement is repeated until the\nsearch_condition is true. Thus, a REPEAT always enters the loop at\nleast once. statement_list consists of one or more statements, each\nterminated by a semicolon (;) statement delimiter.\n\nA REPEAT statement can be labeled. end_label cannot be given unless\nbegin_label also is present. If both are present, they must be the\nsame.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/repeat-statement.html\n\n', 'mysql> delimiter //\n\nmysql> CREATE PROCEDURE dorepeat(p1 INT)\n    -> BEGIN\n    ->   SET @x = 0;\n    ->   REPEAT SET @x = @x + 1; UNTIL @x > p1 END REPEAT;\n    -> END\n    -> //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL dorepeat(1000)//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n+------+\n| @x   |\n+------+\n| 1001 |\n+------+\n1 row in set (0.00 sec)\n', 'http://dev.mysql.com/doc/refman/6.0/en/repeat-statement.html'),
	(227, 'ALTER FUNCTION', 38, 'Syntax:\nALTER FUNCTION func_name [characteristic ...]\n\ncharacteristic:\n    { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n  | COMMENT \'string\'\n\nThis statement can be used to change the characteristics of a stored\nfunction. More than one change may be specified in an ALTER FUNCTION\nstatement. However, you cannot change the parameters or body of a\nstored function using this statement; to make such changes, you must\ndrop and re-create the function using DROP FUNCTION and CREATE\nFUNCTION.\n\nYou must have the ALTER ROUTINE privilege for the function. (That\nprivilege is granted automatically to the function creator.) If binary\nlogging is enabled, the ALTER FUNCTION statement might also require the\nSUPER privilege, as described in\nhttp://dev.mysql.com/doc/refman/6.0/en/stored-programs-logging.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/alter-function.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/alter-function.html'),
	(228, 'SMALLINT', 22, 'SMALLINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA small integer. The signed range is -32768 to 32767. The unsigned\nrange is 0 to 65535.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(229, 'DOUBLE PRECISION', 22, 'DOUBLE PRECISION[(M,D)] [UNSIGNED] [ZEROFILL], REAL[(M,D)] [UNSIGNED]\n[ZEROFILL]\n\nThese types are synonyms for DOUBLE. Exception: If the REAL_AS_FLOAT\nSQL mode is enabled, REAL is a synonym for FLOAT rather than DOUBLE.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(230, 'ORD', 36, 'Syntax:\nORD(str)\n\nIf the leftmost character of the string str is a multi-byte character,\nreturns the code for that character, calculated from the numeric values\nof its constituent bytes using this formula:\n\n  (1st byte code)\n+ (2nd byte code x 256)\n+ (3rd byte code x 2562) ...\n\nIf the leftmost character is not a multi-byte character, ORD() returns\nthe same value as the ASCII() function.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT ORD(\'2\');\n        -> 50\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(231, 'DEALLOCATE PREPARE', 26, 'Syntax:\n{DEALLOCATE | DROP} PREPARE stmt_name\n\nTo deallocate a prepared statement produced with PREPARE, use a\nDEALLOCATE PREPARE statement that refers to the prepared statement\nname. Attempting to execute a prepared statement after deallocating it\nresults in an error.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/deallocate-prepare.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/deallocate-prepare.html'),
	(232, 'ENVELOPE', 35, 'Envelope(g)\n\nReturns the Minimum Bounding Rectangle (MBR) for the geometry value g.\nThe result is returned as a Polygon value.\n\nThe polygon is defined by the corner points of the bounding box:\n\nPOLYGON((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions\n\n', 'mysql> SELECT AsText(Envelope(GeomFromText(\'LineString(1 1,2 2)\')));\n+-------------------------------------------------------+\n| AsText(Envelope(GeomFromText(\'LineString(1 1,2 2)\'))) |\n+-------------------------------------------------------+\n| POLYGON((1 1,2 1,2 2,1 2,1 1))                        |\n+-------------------------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions'),
	(233, 'IS_FREE_LOCK', 14, 'Syntax:\nIS_FREE_LOCK(str)\n\nChecks whether the lock named str is free to use (that is, not locked).\nReturns 1 if the lock is free (no one is using the lock), 0 if the lock\nis in use, and NULL if an error occurs (such as an incorrect argument).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(234, 'TOUCHES', 30, 'Touches(g1,g2)\n\nReturns 1 or 0 to indicate whether g1 spatially touches g2. Two\ngeometries spatially touch if the interiors of the geometries do not\nintersect, but the boundary of one of the geometries intersects either\nthe boundary or the interior of the other.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html'),
	(235, 'INET_ATON', 14, 'Syntax:\nINET_ATON(expr)\n\nGiven the dotted-quad representation of a network address as a string,\nreturns an integer that represents the numeric value of the address.\nAddresses may be 4- or 8-byte addresses.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', 'mysql> SELECT INET_ATON(\'209.207.224.40\');\n        -> 3520061480\n', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(236, 'UNCOMPRESS', 11, 'Syntax:\nUNCOMPRESS(string_to_uncompress)\n\nUncompresses a string compressed by the COMPRESS() function. If the\nargument is not a compressed value, the result is NULL. This function\nrequires MySQL to have been compiled with a compression library such as\nzlib. Otherwise, the return value is always NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'mysql> SELECT UNCOMPRESS(COMPRESS(\'any string\'));\n        -> \'any string\'\nmysql> SELECT UNCOMPRESS(\'any string\');\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(237, 'AUTO_INCREMENT', 22, 'The AUTO_INCREMENT attribute can be used to generate a unique identity\nfor new rows:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/example-auto-increment.html\n\n', 'CREATE TABLE animals (\n     id MEDIUMINT NOT NULL AUTO_INCREMENT,\n     name CHAR(30) NOT NULL,\n     PRIMARY KEY (id)\n );\n\nINSERT INTO animals (name) VALUES \n    (\'dog\'),(\'cat\'),(\'penguin\'),\n    (\'lax\'),(\'whale\'),(\'ostrich\');\n\nSELECT * FROM animals;\n', 'http://dev.mysql.com/doc/refman/6.0/en/example-auto-increment.html'),
	(238, 'ISSIMPLE', 35, 'IsSimple(g)\n\nCurrently, this function is a placeholder and should not be used. If\nimplemented, its behavior will be as described in the next paragraph.\n\nReturns 1 if the geometry value g has no anomalous geometric points,\nsuch as self-intersection or self-tangency. IsSimple() returns 0 if the\nargument is not simple, and -1 if it is NULL.\n\nThe description of each instantiable geometric class given earlier in\nthe chapter includes the specific conditions that cause an instance of\nthat class to be classified as not simple. (See [HELP Geometry\nhierarchy].)\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions'),
	(239, '- BINARY', 4, 'Syntax:\n-\n\nSubtraction:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html\n\n', 'mysql> SELECT 3-5;\n        -> -2\n', 'http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html'),
	(240, 'GEOMCOLLFROMTEXT', 3, 'GeomCollFromText(wkt[,srid]), GeometryCollectionFromText(wkt[,srid])\n\nConstructs a GEOMETRYCOLLECTION value using its WKT representation and\nSRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions'),
	(241, 'WKT DEFINITION', 3, 'The Well-Known Text (WKT) representation of Geometry is designed to\nexchange geometry data in ASCII form.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/gis-wkt-format.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/gis-wkt-format.html'),
	(242, 'CURRENT_TIME', 31, 'Syntax:\nCURRENT_TIME, CURRENT_TIME()\n\nCURRENT_TIME and CURRENT_TIME() are synonyms for CURTIME().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(243, 'REVOKE', 9, 'Syntax:\nREVOKE\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    FROM user [, user] ...\n\nREVOKE ALL PRIVILEGES, GRANT OPTION\n    FROM user [, user] ...\n\nThe REVOKE statement enables system administrators to revoke privileges\nfrom MySQL accounts. Each account is named using the same format as for\nthe GRANT statement; for example, \'jeffrey\'@\'localhost\'. If you specify\nonly the user name part of the account name, a host name part of \'%\' is\nused. For details on the levels at which privileges exist, the\nallowable priv_type and priv_level values, and the syntax for\nspecifying users and passwords, see [HELP GRANT]\n\nTo use the first REVOKE syntax, you must have the GRANT OPTION\nprivilege, and you must have the privileges that you are revoking.\n\nTo revoke all privileges, use the second syntax, which drops all\nglobal, database, table, column, and routine privileges for the named\nuser or users:\n\nREVOKE ALL PRIVILEGES, GRANT OPTION FROM user [, user] ...\n\nTo use this REVOKE syntax, you must have the global CREATE USER\nprivilege or the UPDATE privilege for the mysql database.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/revoke.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/revoke.html'),
	(244, 'LAST_INSERT_ID', 15, 'Syntax:\nLAST_INSERT_ID(), LAST_INSERT_ID(expr)\n\nLAST_INSERT_ID() (no arguments) returns the first automatically\ngenerated value successfully inserted for an AUTO_INCREMENT column as a\nresult of the most recently executed INSERT statement. The value of\nLAST_INSERT_ID() remains unchanged if no rows are successfully\ninserted.\n\nFor example, after inserting a row that generates an AUTO_INCREMENT\nvalue, you can get the value like this:\n\nmysql> SELECT LAST_INSERT_ID();\n        -> 195\n\nThe value of LAST_INSERT_ID() will be consistent across all versions if\nall rows in the INSERT or UPDATE statement were successful.\n\nThe currently executing statement does not affect the value of\nLAST_INSERT_ID(). Suppose that you generate an AUTO_INCREMENT value\nwith one statement, and then refer to LAST_INSERT_ID() in a\nmultiple-row INSERT statement that inserts rows into a table with its\nown AUTO_INCREMENT column. The value of LAST_INSERT_ID() will remain\nstable in the second statement; its value for the second and later rows\nis not affected by the earlier row insertions. (However, if you mix\nreferences to LAST_INSERT_ID() and LAST_INSERT_ID(expr), the effect is\nundefined.)\n\nIf the previous statement returned an error, the value of\nLAST_INSERT_ID() is undefined. For transactional tables, if the\nstatement is rolled back due to an error, the value of LAST_INSERT_ID()\nis left undefined. For manual ROLLBACK, the value of LAST_INSERT_ID()\nis not restored to that before the transaction; it remains as it was at\nthe point of the ROLLBACK.\n\nWithin the body of a stored routine (procedure or function) or a\ntrigger, the value of LAST_INSERT_ID() changes the same way as for\nstatements executed outside the body of these kinds of objects. The\neffect of a stored routine or trigger upon the value of\nLAST_INSERT_ID() that is seen by following statements depends on the\nkind of routine:\n\no If a stored procedure executes statements that change the value of\n  LAST_INSERT_ID(), the changed value will be seen by statements that\n  follow the procedure call.\n\no For stored functions and triggers that change the value, the value is\n  restored when the function or trigger ends, so following statements\n  will not see a changed value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(245, 'LAST_DAY', 31, 'Syntax:\nLAST_DAY(date)\n\nTakes a date or datetime value and returns the corresponding value for\nthe last day of the month. Returns NULL if the argument is invalid.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT LAST_DAY(\'2003-02-05\');\n        -> \'2003-02-28\'\nmysql> SELECT LAST_DAY(\'2004-02-05\');\n        -> \'2004-02-29\'\nmysql> SELECT LAST_DAY(\'2004-01-01 01:01:01\');\n        -> \'2004-01-31\'\nmysql> SELECT LAST_DAY(\'2003-03-32\');\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(246, 'MEDIUMINT', 22, 'MEDIUMINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA medium-sized integer. The signed range is -8388608 to 8388607. The\nunsigned range is 0 to 16777215.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(247, 'FLOOR', 4, 'Syntax:\nFLOOR(X)\n\nReturns the largest integer value not greater than X.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT FLOOR(1.23);\n        -> 1\nmysql> SELECT FLOOR(-1.23);\n        -> -2\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(248, 'RTRIM', 36, 'Syntax:\nRTRIM(str)\n\nReturns the string str with trailing space characters removed.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT RTRIM(\'barbar   \');\n        -> \'barbar\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(249, 'EXPLAIN', 28, 'Syntax:\nEXPLAIN tbl_name\n\nOr:\n\nEXPLAIN [EXTENDED | PARTITIONS] SELECT select_options\n\nThe EXPLAIN statement can be used either as a synonym for DESCRIBE or\nas a way to obtain information about how MySQL executes a SELECT\nstatement:\n\no EXPLAIN tbl_name is synonymous with DESCRIBE tbl_name or SHOW COLUMNS\n  FROM tbl_name.\n\n  For a description of the DESCRIBE and SHOW COLUMNS statements, see\n  [HELP DESCRIBE], and [HELP SHOW COLUMNS].\n\no When you precede a SELECT statement with the keyword EXPLAIN, MySQL\n  displays information from the optimizer about the query execution\n  plan. That is, MySQL explains how it would process the SELECT,\n  including information about how tables are joined and in which order.\n  EXPLAIN EXTENDED can be used to provide additional information.\n\n  For information regarding the use of EXPLAIN and EXPLAIN EXTENDED for\n  obtaining query execution plan information, see\n  http://dev.mysql.com/doc/refman/6.0/en/using-explain.html.\n\no EXPLAIN PARTITIONS is available beginning with MySQL 5.1.5. It is\n  useful only when examining queries involving partitioned tables.\n\n  For details, see\n  http://dev.mysql.com/doc/refman/6.0/en/partitioning-info.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/explain.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/explain.html'),
	(250, 'DEGREES', 4, 'Syntax:\nDEGREES(X)\n\nReturns the argument X, converted from radians to degrees.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT DEGREES(PI());\n        -> 180\nmysql> SELECT DEGREES(PI() / 2);\n        -> 90\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(251, 'VARCHAR', 22, '[NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA variable-length string. M represents the maximum column length in\ncharacters. The range of M is 0 to 65,535. The effective maximum length\nof a VARCHAR is subject to the maximum row size (65,535 bytes, which is\nshared among all columns) and the character set used. For example, utf8\ncharacters can require up to four bytes per character, so a VARCHAR\ncolumn that uses the utf8 character set can be declared to be a maximum\nof 16,383 characters.\n\nMySQL stores VARCHAR values as a one-byte or two-byte length prefix\nplus data. The length prefix indicates the number of bytes in the\nvalue. A VARCHAR column uses one length byte if values require no more\nthan 255 bytes, two length bytes if values may require more than 255\nbytes.\n\n*Note*: MySQL 6.0 follows the standard SQL specification, and does not\nremove trailing spaces from VARCHAR values.\n\nVARCHAR is shorthand for CHARACTER VARYING. NATIONAL VARCHAR is the\nstandard SQL way to define that a VARCHAR column should use some\npredefined character set. MySQL 4.1 and up uses utf8 as this predefined\ncharacter set.\nhttp://dev.mysql.com/doc/refman/6.0/en/charset-national.html. NVARCHAR\nis shorthand for NATIONAL VARCHAR.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(252, 'UNHEX', 36, 'Syntax:\n\nUNHEX(str)\n\nPerforms the inverse operation of HEX(str). That is, it interprets each\npair of hexadecimal digits in the argument as a number and converts it\nto the character represented by the number. The resulting characters\nare returned as a binary string.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT UNHEX(\'4D7953514C\');\n        -> \'MySQL\'\nmysql> SELECT 0x4D7953514C;\n        -> \'MySQL\'\nmysql> SELECT UNHEX(HEX(\'string\'));\n        -> \'string\'\nmysql> SELECT HEX(UNHEX(\'1267\'));\n        -> \'1267\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(253, '- UNARY', 4, 'Syntax:\n-\n\nUnary minus. This operator changes the sign of the argument.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html\n\n', 'mysql> SELECT - 2;\n        -> -2\n', 'http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html'),
	(254, 'SELECT INTO', 23, 'Syntax:\nSELECT col_name [, col_name] ...\n    INTO var_name [, var_name] ...\n    table_expr\n\nSELECT ... INTO syntax enables selected columns to be stored directly\ninto variables. The statement must retrieve only a single row. If it is\npossible that the statement may retrieve multiple rows, you can use\nLIMIT 1 to limit the result set to a single row.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/select-into-statement.html\n\n', 'SELECT id,data INTO x,y FROM test.t1 LIMIT 1;\n', 'http://dev.mysql.com/doc/refman/6.0/en/select-into-statement.html'),
	(255, 'STD', 16, 'Syntax:\nSTD(expr)\n\nReturns the population standard deviation of expr. This is an extension\nto standard SQL. The standard SQL function STDDEV_POP() can be used\ninstead.\n\nThis function returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(256, 'COS', 4, 'Syntax:\nCOS(X)\n\nReturns the cosine of X, where X is given in radians.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT COS(PI());\n        -> -1\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(257, 'DATE FUNCTION', 31, 'Syntax:\nDATE(expr)\n\nExtracts the date part of the date or datetime expression expr.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT DATE(\'2003-12-31 01:02:03\');\n        -> \'2003-12-31\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(258, 'DROP TRIGGER', 38, 'Syntax:\nDROP TRIGGER [IF EXISTS] [schema_name.]trigger_name\n\nThis statement drops a trigger. The schema (database) name is optional.\nIf the schema is omitted, the trigger is dropped from the default\nschema. DROP TRIGGER was added in MySQL 5.0.2. Its use requires the\nTRIGGER privilege for the table associated with the trigger.\n\nUse IF EXISTS to prevent an error from occurring for a trigger that\ndoes not exist. A NOTE is generated for a non-existent trigger when\nusing IF EXISTS. See [HELP SHOW WARNINGS].\n\nTriggers for a table are also dropped if you drop the table.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-trigger.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-trigger.html'),
	(259, 'RESET MASTER', 26, 'Syntax:\nRESET MASTER\n\nDeletes all binary logs listed in the index file, resets the binary log\nindex file to be empty, and creates a new binary log file. It is\nintended to be used only when the master is started for the first time.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/reset-master.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/reset-master.html'),
	(260, 'TAN', 4, 'Syntax:\nTAN(X)\n\nReturns the tangent of X, where X is given in radians.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT TAN(PI());\n        -> -1.2246063538224e-16\nmysql> SELECT TAN(PI()+1);\n        -> 1.5574077246549\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(261, 'PI', 4, 'Syntax:\nPI()\n\nReturns the value of π (pi). The default number of decimal places\ndisplayed is seven, but MySQL uses the full double-precision value\ninternally.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT PI();\n        -> 3.141593\nmysql> SELECT PI()+0.000000000000000000;\n        -> 3.141592653589793116\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(262, 'WEEKOFYEAR', 31, 'Syntax:\nWEEKOFYEAR(date)\n\nReturns the calendar week of the date as a number in the range from 1\nto 53. WEEKOFYEAR() is a compatibility function that is equivalent to\nWEEK(date,3).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT WEEKOFYEAR(\'2008-02-20\');\n        -> 8\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(263, '/', 4, 'Syntax:\n/\n\nDivision:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html\n\n', 'mysql> SELECT 3/5;\n        -> 0.60\n', 'http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html'),
	(264, 'PURGE BINARY LOGS', 26, 'Syntax:\nPURGE { BINARY | MASTER } LOGS\n    { TO \'log_name\' | BEFORE datetime_expr }\n\nThe binary log is a set of files that contain information about data\nmodifications made by the MySQL server. The log consists of a set of\nbinary log files, plus an index file.\n\nThe PURGE BINARY LOGS statement deletes all the binary log files listed\nin the log index file prior to the specified log file name or date. The\nlog files also are removed from the list recorded in the index file, so\nthat the given log file becomes the first.\n\nThis statement has no effect if the --log-bin option has not been\nenabled.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/purge-binary-logs.html\n\n', 'PURGE BINARY LOGS TO \'mysql-bin.010\';\nPURGE BINARY LOGS BEFORE \'2008-04-02 22:46:26\';\n', 'http://dev.mysql.com/doc/refman/6.0/en/purge-binary-logs.html'),
	(265, 'STDDEV_SAMP', 16, 'Syntax:\nSTDDEV_SAMP(expr)\n\nReturns the sample standard deviation of expr (the square root of\nVAR_SAMP().\n\nSTDDEV_SAMP() returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(266, 'SCHEMA', 15, 'Syntax:\nSCHEMA()\n\nThis function is a synonym for DATABASE().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(267, 'MLINEFROMWKB', 32, 'MLineFromWKB(wkb[,srid]), MultiLineStringFromWKB(wkb[,srid])\n\nConstructs a MULTILINESTRING value using its WKB representation and\nSRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions'),
	(268, 'LOG2', 4, 'Syntax:\nLOG2(X)\n\nReturns the base-2 logarithm of X.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT LOG2(65536);\n        -> 16\nmysql> SELECT LOG2(-100);\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(269, 'SUBTIME', 31, 'Syntax:\nSUBTIME(expr1,expr2)\n\nSUBTIME() returns expr1 - expr2 expressed as a value in the same format\nas expr1. expr1 is a time or datetime expression, and expr2 is a time\nexpression.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT SUBTIME(\'2007-12-31 23:59:59.999999\',\'1 1:1:1.000002\');\n        -> \'2007-12-30 22:58:58.999997\'\nmysql> SELECT SUBTIME(\'01:00:00.999999\', \'02:00:00.999998\');\n        -> \'-00:59:59.999999\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(270, 'UNCOMPRESSED_LENGTH', 11, 'Syntax:\nUNCOMPRESSED_LENGTH(compressed_string)\n\nReturns the length that the compressed string had before being\ncompressed.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'mysql> SELECT UNCOMPRESSED_LENGTH(COMPRESS(REPEAT(\'a\',30)));\n        -> 30\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(271, 'DROP TABLE', 38, 'Syntax:\nDROP [TEMPORARY] TABLE [IF EXISTS]\n    tbl_name [, tbl_name] ...\n    [RESTRICT | CASCADE]\n\nDROP TABLE removes one or more tables. You must have the DROP privilege\nfor each table. All table data and the table definition are removed, so\nbe careful with this statement! If any of the tables named in the\nargument list do not exist, MySQL returns an error indicating by name\nwhich non-existing tables it was unable to drop, but it also drops all\nof the tables in the list that do exist.\n\n*Important*: When a table is dropped, user privileges on the table are\nnot automatically dropped. See [HELP GRANT].\n\nNote that for a partitioned table, DROP TABLE permanently removes the\ntable definition, all of its partitions, and all of the data which was\nstored in those partitions. It also removes the partitioning definition\n(.par) file associated with the dropped table.\n\nUse IF EXISTS to prevent an error from occurring for tables that do not\nexist. A NOTE is generated for each non-existent table when using IF\nEXISTS. See [HELP SHOW WARNINGS].\n\nRESTRICT and CASCADE are allowed to make porting easier. In MySQL 6.0,\nthey do nothing.\n\n*Note*: DROP TABLE automatically commits the current active\ntransaction, unless you use the TEMPORARY keyword.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-table.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-table.html'),
	(272, 'POW', 4, 'Syntax:\nPOW(X,Y)\n\nReturns the value of X raised to the power of Y.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT POW(2,2);\n        -> 4\nmysql> SELECT POW(2,-2);\n        -> 0.25\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(273, 'SHOW CREATE TABLE', 26, 'Syntax:\nSHOW CREATE TABLE tbl_name\n\nShows the CREATE TABLE statement that creates the given table. It\nrequires some privilege for the table. This statement also works with\nviews.\nSHOW CREATE TABLE quotes table and column names according to the value\nof the sql_quote_show_create option. See\nhttp://dev.mysql.com/doc/refman/6.0/en/server-session-variables.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-create-table.html\n\n', 'mysql> SHOW CREATE TABLE t\\G\n*************************** 1. row ***************************\n       Table: t\nCreate Table: CREATE TABLE t (\n  id INT(11) default NULL auto_increment,\n  s char(60) default NULL,\n  PRIMARY KEY (id)\n) ENGINE=MyISAM\n', 'http://dev.mysql.com/doc/refman/6.0/en/show-create-table.html'),
	(274, 'DUAL', 27, 'You are allowed to specify DUAL as a dummy table name in situations\nwhere no tables are referenced:\n\nmysql> SELECT 1 + 1 FROM DUAL;\n        -> 2\n\nDUAL is purely for the convenience of people who require that all\nSELECT statements should have FROM and possibly other clauses. MySQL\nmay ignore the clauses. MySQL does not require FROM DUAL if no tables\nare referenced.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/select.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/select.html'),
	(275, 'INSTR', 36, 'Syntax:\nINSTR(str,substr)\n\nReturns the position of the first occurrence of substring substr in\nstring str. This is the same as the two-argument form of LOCATE(),\nexcept that the order of the arguments is reversed.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT INSTR(\'foobarbar\', \'bar\');\n        -> 4\nmysql> SELECT INSTR(\'xbar\', \'foobar\');\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(276, 'NOW', 31, 'Syntax:\nNOW()\n\nReturns the current date and time as a value in \'YYYY-MM-DD HH:MM:SS\'\nor YYYYMMDDHHMMSS.uuuuuu format, depending on whether the function is\nused in a string or numeric context. The value is expressed in the\ncurrent time zone.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT NOW();\n        -> \'2007-12-15 23:50:26\'\nmysql> SELECT NOW() + 0;\n        -> 20071215235026.000000\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(277, 'SHOW ENGINES', 26, 'Syntax:\nSHOW [STORAGE] ENGINES\n\nSHOW ENGINES displays status information about the server\'s storage\nengines. This is particularly useful for checking whether a storage\nengine is supported, or to see what the default engine is.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-engines.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-engines.html'),
	(278, '>=', 17, 'Syntax:\n>=\n\nGreater than or equal:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 2 >= 2;\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(279, 'EXP', 4, 'Syntax:\nEXP(X)\n\nReturns the value of e (the base of natural logarithms) raised to the\npower of X. The inverse of this function is LOG() (using a single\nargument only) or LN().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT EXP(2);\n        -> 7.3890560989307\nmysql> SELECT EXP(-2);\n        -> 0.13533528323661\nmysql> SELECT EXP(0);\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(280, 'LONGBLOB', 22, 'LONGBLOB\n\nA BLOB column with a maximum length of 4,294,967,295 or 4GB (232 - 1)\nbytes. The effective maximum length of LONGBLOB columns depends on the\nconfigured maximum packet size in the client/server protocol and\navailable memory. Each LONGBLOB value is stored using a four-byte\nlength prefix that indicates the number of bytes in the value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(281, 'POINTN', 12, 'PointN(ls,N)\n\nReturns the N-th Point in the Linestring value ls. Points are numbered\nbeginning with 1.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions\n\n', 'mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT AsText(PointN(GeomFromText(@ls),2));\n+-------------------------------------+\n| AsText(PointN(GeomFromText(@ls),2)) |\n+-------------------------------------+\n| POINT(2 2)                          |\n+-------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions'),
	(282, 'YEAR DATA TYPE', 22, 'YEAR[(2|4)]\n\nA year in two-digit or four-digit format. The default is four-digit\nformat. In four-digit format, the allowable values are 1901 to 2155,\nand 0000. In two-digit format, the allowable values are 70 to 69,\nrepresenting years from 1970 to 2069. MySQL displays YEAR values in\nYYYY format, but allows you to assign values to YEAR columns using\neither strings or numbers.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html'),
	(283, 'SUM', 16, 'Syntax:\nSUM([DISTINCT] expr)\n\nReturns the sum of expr. If the return set has no rows, SUM() returns\nNULL. The DISTINCT keyword can be used in MySQL 6.0 to sum only the\ndistinct values of expr.\n\nSUM() returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(284, 'OCT', 4, 'Syntax:\nOCT(N)\n\nReturns a string representation of the octal value of N, where N is a\nlonglong (BIGINT) number. This is equivalent to CONV(N,10,8). Returns\nNULL if N is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT OCT(12);\n        -> \'14\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(285, 'SYSDATE', 31, 'Syntax:\nSYSDATE()\n\nReturns the current date and time as a value in \'YYYY-MM-DD HH:MM:SS\'\nor YYYYMMDDHHMMSS.uuuuuu format, depending on whether the function is\nused in a string or numeric context.\n\nSYSDATE() returns the time at which it executes. This differs from the\nbehavior for NOW(), which returns a constant time that indicates the\ntime at which the statement began to execute. (Within a stored routine\nor trigger, NOW() returns the time at which the routine or triggering\nstatement began to execute.)\n\nmysql> SELECT NOW(), SLEEP(2), NOW();\n+---------------------+----------+---------------------+\n| NOW()               | SLEEP(2) | NOW()               |\n+---------------------+----------+---------------------+\n| 2006-04-12 13:47:36 |        0 | 2006-04-12 13:47:36 |\n+---------------------+----------+---------------------+\n\nmysql> SELECT SYSDATE(), SLEEP(2), SYSDATE();\n+---------------------+----------+---------------------+\n| SYSDATE()           | SLEEP(2) | SYSDATE()           |\n+---------------------+----------+---------------------+\n| 2006-04-12 13:47:44 |        0 | 2006-04-12 13:47:46 |\n+---------------------+----------+---------------------+\n\nIn addition, the SET TIMESTAMP statement affects the value returned by\nNOW() but not by SYSDATE(). This means that timestamp settings in the\nbinary log have no effect on invocations of SYSDATE().\n\nBecause SYSDATE() can return different values even within the same\nstatement, and is not affected by SET TIMESTAMP, it is\nnon-deterministic and therefore unsafe for replication if\nstatement-based binary logging is used. If that is a problem, you can\nuse row-based logging, or start the server with the --sysdate-is-now\noption to cause SYSDATE() to be an alias for NOW(). The\nnon-deterministic nature of SYSDATE() also means that indexes cannot be\nused for evaluating expressions that refer to it.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(286, 'UNINSTALL PLUGIN', 5, 'Syntax:\nUNINSTALL PLUGIN plugin_name\n\nThis statement removes an installed plugin. You cannot uninstall a\nplugin if any table that uses it is open.\n\nplugin_name must be the name of some plugin that is listed in the\nmysql.plugin table. The server executes the plugin\'s deinitialization\nfunction and removes the row for the plugin from the mysql.plugin\ntable, so that subsequent server restarts will not load and initialize\nthe plugin. UNINSTALL PLUGIN does not remove the plugin\'s shared\nlibrary file.\n\nTo use UNINSTALL PLUGIN, you must have the DELETE privilege for the\nmysql.plugin table.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/uninstall-plugin.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/uninstall-plugin.html'),
	(287, 'ASBINARY', 32, 'AsBinary(g), AsWKB(g)\n\nConverts a value in internal geometry format to its WKB representation\nand returns the binary result.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-to-convert-geometries-between-formats.html\n\n', 'SELECT AsBinary(g) FROM geom;\n', 'http://dev.mysql.com/doc/refman/6.0/en/functions-to-convert-geometries-between-formats.html'),
	(288, 'REPEAT FUNCTION', 36, 'Syntax:\nREPEAT(str,count)\n\nReturns a string consisting of the string str repeated count times. If\ncount is less than 1, returns an empty string. Returns NULL if str or\ncount are NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT REPEAT(\'MySQL\', 3);\n        -> \'MySQLMySQLMySQL\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(289, 'SHOW TABLES', 26, 'Syntax:\nSHOW [FULL] TABLES [FROM db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TABLES lists the non-TEMPORARY tables in a given database. You can\nalso get this list using the mysqlshow db_name command. The LIKE\nclause, if present, indicates which table names to match. The WHERE\nclause can be given to select rows using more general conditions, as\ndiscussed in http://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\n\nThis statement also lists any views in the database. The FULL modifier\nis supported such that SHOW FULL TABLES displays a second output\ncolumn. Values for the second column are BASE TABLE for a table and\nVIEW for a view.\n\nIf you have no privileges for a base table or view, it does not show up\nin the output from SHOW TABLES or mysqlshow db_name.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-tables.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-tables.html'),
	(290, 'MAKEDATE', 31, 'Syntax:\nMAKEDATE(year,dayofyear)\n\nReturns a date, given year and day-of-year values. dayofyear must be\ngreater than 0 or the result is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT MAKEDATE(2011,31), MAKEDATE(2011,32);\n        -> \'2011-01-31\', \'2011-02-01\'\nmysql> SELECT MAKEDATE(2011,365), MAKEDATE(2014,365);\n        -> \'2011-12-31\', \'2014-12-31\'\nmysql> SELECT MAKEDATE(2011,0);\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(291, 'BINARY OPERATOR', 36, 'Syntax:\nBINARY\n\nThe BINARY operator casts the string following it to a binary string.\nThis is an easy way to force a column comparison to be done byte by\nbyte rather than character by character. This causes the comparison to\nbe case sensitive even if the column isn\'t defined as BINARY or BLOB.\nBINARY also causes trailing spaces to be significant.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/cast-functions.html\n\n', 'mysql> SELECT \'a\' = \'A\';\n        -> 1\nmysql> SELECT BINARY \'a\' = \'A\';\n        -> 0\nmysql> SELECT \'a\' = \'a \';\n        -> 1\nmysql> SELECT BINARY \'a\' = \'a \';\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/cast-functions.html'),
	(292, 'MBROVERLAPS', 6, 'MBROverlaps(g1,g2)\n\nReturns 1 or 0 to indicate whether the Minimum Bounding Rectangles of\nthe two geometries g1 and g2 overlap. The term spatially overlaps is\nused if two geometries intersect and their intersection results in a\ngeometry of the same dimension but not equal to either of the given\ngeometries.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html'),
	(293, 'SOUNDEX', 36, 'Syntax:\nSOUNDEX(str)\n\nReturns a soundex string from str. Two strings that sound almost the\nsame should have identical soundex strings. A standard soundex string\nis four characters long, but the SOUNDEX() function returns an\narbitrarily long string. You can use SUBSTRING() on the result to get a\nstandard soundex string. All non-alphabetic characters in str are\nignored. All international alphabetic characters outside the A-Z range\nare treated as vowels.\n\n*Important*: When using SOUNDEX(), you should be aware of the following\nlimitations:\n\no This function, as currently implemented, is intended to work well\n  with strings that are in the English language only. Strings in other\n  languages may not produce reliable results.\n\no This function is not guaranteed to provide consistent results with\n  strings that use multi-byte character sets, including utf-8.\n\n  We hope to remove these limitations in a future release. See\n  Bug#22638 (http://bugs.mysql.com/22638) for more information.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT SOUNDEX(\'Hello\');\n        -> \'H400\'\nmysql> SELECT SOUNDEX(\'Quadratically\');\n        -> \'Q36324\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(294, 'MBRTOUCHES', 6, 'MBRTouches(g1,g2)\n\nReturns 1 or 0 to indicate whether the Minimum Bounding Rectangles of\nthe two geometries g1 and g2 touch. Two geometries spatially touch if\nthe interiors of the geometries do not intersect, but the boundary of\none of the geometries intersects either the boundary or the interior of\nthe other.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html'),
	(295, 'DROP EVENT', 38, 'Syntax:\nDROP EVENT [IF EXISTS] event_name\n\nThis statement drops the event named event_name. The event immediately\nceases being active, and is deleted completely from the server.\n\nIf the event does not exist, the error ERROR 1517 (HY000): Unknown\nevent \'event_name\' results. You can override this and cause the\nstatement to generate a warning for non-existent events instead using\nIF EXISTS.\n\nThis statement requires the EVENT privilege for the schema to which the\nevent to be dropped belongs.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-event.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-event.html'),
	(296, 'INSERT SELECT', 27, 'Syntax:\nINSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name [(col_name,...)]\n    SELECT ...\n    [ ON DUPLICATE KEY UPDATE col_name=expr, ... ]\n\nWith INSERT ... SELECT, you can quickly insert many rows into a table\nfrom one or many tables. For example:\n\nINSERT INTO tbl_temp2 (fld_id)\n  SELECT tbl_temp1.fld_order_id\n  FROM tbl_temp1 WHERE tbl_temp1.fld_order_id > 100;\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/insert-select.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/insert-select.html'),
	(297, 'CREATE PROCEDURE', 38, 'Syntax:\nCREATE\n    [DEFINER = { user | CURRENT_USER }]\n    PROCEDURE sp_name ([proc_parameter[,...]])\n    [characteristic ...] routine_body\n\nCREATE\n    [DEFINER = { user | CURRENT_USER }]\n    FUNCTION sp_name ([func_parameter[,...]])\n    RETURNS type\n    [characteristic ...] routine_body\n    \nproc_parameter:\n    [ IN | OUT | INOUT ] param_name type\n    \nfunc_parameter:\n    param_name type\n\ntype:\n    Any valid MySQL data type\n\ncharacteristic:\n    LANGUAGE SQL\n  | [NOT] DETERMINISTIC\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n  | COMMENT \'string\'\n\nroutine_body:\n    Valid SQL procedure statement\n\nThese statements create stored routines. By default, a routine is\nassociated with the default database. To associate the routine\nexplicitly with a given database, specify the name as db_name.sp_name\nwhen you create it.\n\nThe CREATE FUNCTION statement is also used in MySQL to support UDFs\n(user-defined functions). See\nhttp://dev.mysql.com/doc/refman/6.0/en/adding-functions.html. A UDF can\nbe regarded as an external stored function. However, do note that\nstored functions share their namespace with UDFs. See\nhttp://dev.mysql.com/doc/refman/6.0/en/function-resolution.html, for\nthe rules describing how the server interprets references to different\nkinds of functions.\n\nWhen the routine is invoked, an implicit USE db_name is performed (and\nundone when the routine terminates). The causes the routine to have the\ngiven default database while it executes. USE statements within stored\nroutines are disallowed.\n\nWhen a stored function has been created, you invoke it by referring to\nit in an expression. The function returns a value during expression\nevaluation. When a stored procedure has been created, you invoke it by\nusing the CALL statement (see [HELP CALL]).\n\nTo execute the CREATE PROCEDURE or CREATE FUNCTION statement, it is\nnecessary to have the CREATE ROUTINE privilege. By default, MySQL\nautomatically grants the ALTER ROUTINE and EXECUTE privileges to the\nroutine creator. See also\nhttp://dev.mysql.com/doc/refman/6.0/en/stored-routines-privileges.html.\nIf binary logging is enabled, the CREATE FUNCTION statement might also\nrequire the SUPER privilege, as described in\nhttp://dev.mysql.com/doc/refman/6.0/en/stored-programs-logging.html.\n\nThe DEFINER and SQL SECURITY clauses specify the security context to be\nused when checking access privileges at routine execution time, as\ndescribed later.\n\nIf the routine name is the same as the name of a built-in SQL function,\nyou must use a space between the name and the following parenthesis\nwhen defining the routine, or a syntax error occurs. This is also true\nwhen you invoke the routine later. For this reason, we suggest that it\nis better to avoid re-using the names of existing SQL functions for\nyour own stored routines.\n\nThe IGNORE_SPACE SQL mode applies to built-in functions, not to stored\nroutines. It is always allowable to have spaces after a routine name,\nregardless of whether IGNORE_SPACE is enabled.\n\nThe parameter list enclosed within parentheses must always be present.\nIf there are no parameters, an empty parameter list of () should be\nused. Parameter names are not case sensitive.\n\nEach parameter can be declared to use any valid data type, except that\nthe COLLATE attribute cannot be used.\n\nEach parameter is an IN parameter by default. To specify otherwise for\na parameter, use the keyword OUT or INOUT before the parameter name.\n\n*Note*: Specifying a parameter as IN, OUT, or INOUT is valid only for a\nPROCEDURE. (FUNCTION parameters are always regarded as IN parameters.)\n\nAn IN parameter passes a value into a procedure. The procedure might\nmodify the value, but the modification is not visible to the caller\nwhen the procedure returns. An OUT parameter passes a value from the\nprocedure back to the caller. Its initial value is NULL within the\nprocedure, and its value is visible to the caller when the procedure\nreturns. An INOUT parameter is initialized by the caller, can be\nmodified by the procedure, and any change made by the procedure is\nvisible to the caller when the procedure returns.\n\nFor each OUT or INOUT parameter, pass a user-defined variable in the\nCALL statement that invokes the procedure so that you can obtain its\nvalue when the procedure returns. If you are calling the procedure from\nwithin another stored procedure or function, you can also pass a\nroutine parameter or local routine variable as an IN or INOUT\nparameter.\n\nThe RETURNS clause may be specified only for a FUNCTION, for which it\nis mandatory. It indicates the return type of the function, and the\nfunction body must contain a RETURN value statement. If the RETURN\nstatement returns a value of a different type, the value is coerced to\nthe proper type. For example, if a function specifies an ENUM or SET\nvalue in the RETURNS clause, but the RETURN statement returns an\ninteger, the value returned from the function is the string for the\ncorresponding ENUM member of set of SET members.\n\nThe routine_body consists of a valid SQL procedure statement. This can\nbe a simple statement such as SELECT or INSERT, or it can be a compound\nstatement written using BEGIN and END. Compound statements can contain\ndeclarations, loops, and other control structure statements. The syntax\nfor these statements is described in\nhttp://dev.mysql.com/doc/refman/6.0/en/sql-syntax-compound-statements.h\ntml.\n\nMySQL allows routines to contain DDL statements, such as CREATE and\nDROP. MySQL also allows stored procedures (but not stored functions) to\ncontain SQL transaction statements such as COMMIT. Stored functions may\nnot contain statements that perform explicit or implicit commit or\nrollback. Support for these statements is not required by the SQL\nstandard, which states that each DBMS vendor may decide whether to\nallow them.\n\nStatements that return a result set cannot be used within a stored\nfunction. This includes SELECT statements that do not have an INTO\nvar_list clause and other statements such as SHOW, EXPLAIN, and CHECK\nTABLE. For statements that can be determined at function definition\ntime to return a result set, a Not allowed to return a result set from\na function error occurs (ER_SP_NO_RETSET). For statements that can be\ndetermined only at runtime to return a result set, a PROCEDURE %s can\'t\nreturn a result set in the given context error occurs\n(ER_SP_BADSELECT).\n\nFor additional information about statements that are not allowed in\nstored routines, see\nhttp://dev.mysql.com/doc/refman/6.0/en/stored-program-restrictions.html\n.\n\nThe following example shows a simple stored procedure that uses an OUT\nparameter:\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE simpleproc (OUT param1 INT)\n    -> BEGIN\n    ->   SELECT COUNT(*) INTO param1 FROM t;\n    -> END;\n    -> //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter ;\n\nmysql> CALL simpleproc(@a);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @a;\n+------+\n| @a   |\n+------+\n| 3    |\n+------+\n1 row in set (0.00 sec)\n\nThe example uses the mysql client delimiter command to change the\nstatement delimiter from ; to // while the procedure is being defined.\nThis allows the ; delimiter used in the procedure body to be passed\nthrough to the server rather than being interpreted by mysql itself.\nSee\nhttp://dev.mysql.com/doc/refman/6.0/en/stored-programs-defining.html.\n\nFor information about invoking stored procedures from within programs\nwritten in a language that has a MySQL interface, see [HELP CALL].\n\nThe following example function takes a parameter, performs an operation\nusing an SQL function, and returns the result. In this case, it is\nunnecessary to use delimiter because the function definition contains\nno internal ; statement delimiters:\n\nmysql> CREATE FUNCTION hello (s CHAR(20))\nmysql> RETURNS CHAR(50) DETERMINISTIC\n    -> RETURN CONCAT(\'Hello, \',s,\'!\');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT hello(\'world\');\n+----------------+\n| hello(\'world\') |\n+----------------+\n| Hello, world!  |\n+----------------+\n1 row in set (0.00 sec)\n\nMySQL stores the sql_mode system variable setting that is in effect at\nthe time a routine is created, and always executes the routine with\nthis setting in force, regardless of the server SQL mode in effect when\nthe routine is invoked.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-procedure.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-procedure.html'),
	(298, 'VARBINARY', 22, 'VARBINARY(M)\n\nThe VARBINARY type is similar to the VARCHAR type, but stores binary\nbyte strings rather than non-binary character strings. M represents the\nmaximum column length in bytes.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(299, 'LOAD INDEX', 26, 'Syntax:\nLOAD INDEX INTO CACHE\n  tbl_index_list [, tbl_index_list] ...\n\ntbl_index_list:\n  tbl_name\n    [[INDEX|KEY] (index_name[, index_name] ...)]\n    [IGNORE LEAVES]\n\nThe LOAD INDEX INTO CACHE statement preloads a table index into the key\ncache to which it has been assigned by an explicit CACHE INDEX\nstatement, or into the default key cache otherwise. LOAD INDEX INTO\nCACHE is used only for MyISAM tables. It is not supported for tables\nhaving user-defined partitioning (see\nhttp://dev.mysql.com/doc/refman/6.0/en/partitioning-limitations.html.)\n\nThe IGNORE LEAVES modifier causes only blocks for the non-leaf nodes of\nthe index to be preloaded.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/load-index.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/load-index.html'),
	(300, 'UNION', 27, 'Syntax:\nSELECT ...\nUNION [ALL | DISTINCT] SELECT ...\n[UNION [ALL | DISTINCT] SELECT ...]\n\nUNION is used to combine the result from multiple SELECT statements\ninto a single result set.\n\nThe column names from the first SELECT statement are used as the column\nnames for the results returned. Selected columns listed in\ncorresponding positions of each SELECT statement should have the same\ndata type. (For example, the first column selected by the first\nstatement should have the same type as the first column selected by the\nother statements.)\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/union.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/union.html'),
	(301, 'TO_DAYS', 31, 'Syntax:\nTO_DAYS(date)\n\nGiven a date date, returns a day number (the number of days since year\n0).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT TO_DAYS(950501);\n        -> 728779\nmysql> SELECT TO_DAYS(\'2007-10-07\');\n        -> 733321\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(302, 'NOT REGEXP', 36, 'Syntax:\nexpr NOT REGEXP pat, expr NOT RLIKE pat\n\nThis is the same as NOT (expr REGEXP pat).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/regexp.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/regexp.html'),
	(303, 'SHOW INDEX', 26, 'Syntax:\nSHOW INDEX FROM tbl_name [FROM db_name]\n\nSHOW INDEX returns table index information. The format resembles that\nof the SQLStatistics call in ODBC. This statement requires some\nprivilege for any column in the table.\nYou can use db_name.tbl_name as an alternative to the tbl_name FROM\ndb_name syntax. These two statements are equivalent:\n\nSHOW INDEX FROM mytable FROM mydb;\nSHOW INDEX FROM mydb.mytable;\n\nSHOW KEYS is a synonym for SHOW INDEX. You can also list a table\'s\nindexes with the mysqlshow -k db_name tbl_name command.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-index.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-index.html'),
	(304, 'SHOW CREATE DATABASE', 26, 'Syntax:\nSHOW CREATE {DATABASE | SCHEMA} db_name\n\nShows the CREATE DATABASE statement that creates the given database.\nSHOW CREATE SCHEMA is a synonym for SHOW CREATE DATABASE.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-create-database.html\n\n', 'mysql> SHOW CREATE DATABASE test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n\nmysql> SHOW CREATE SCHEMA test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n', 'http://dev.mysql.com/doc/refman/6.0/en/show-create-database.html'),
	(305, 'LEAVE', 23, 'Syntax:\nLEAVE label\n\nThis statement is used to exit the flow control construct that has the\ngiven label. It can be used within BEGIN ... END or loop constructs\n(LOOP, REPEAT, WHILE).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/leave-statement.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/leave-statement.html'),
	(306, 'NOT IN', 17, 'Syntax:\nexpr NOT IN (value,...)\n\nThis is the same as NOT (expr IN (value,...)).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(307, '!', 13, 'Syntax:\nNOT, !\n\nLogical NOT. Evaluates to 1 if the operand is 0, to 0 if the operand is\nnon-zero, and NOT NULL returns NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/logical-operators.html\n\n', 'mysql> SELECT NOT 10;\n        -> 0\nmysql> SELECT NOT 0;\n        -> 1\nmysql> SELECT NOT NULL;\n        -> NULL\nmysql> SELECT ! (1+1);\n        -> 0\nmysql> SELECT ! 1+1;\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/logical-operators.html'),
	(308, 'DECLARE HANDLER', 23, 'Syntax:\nDECLARE handler_type HANDLER\n    FOR condition_value [, condition_value] ...\n    statement\n\nhandler_type:\n    CONTINUE\n  | EXIT\n  | UNDO\n\ncondition_value:\n    SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n  | SQLWARNING\n  | NOT FOUND\n  | SQLEXCEPTION\n  | mysql_error_code\n\nThe DECLARE ... HANDLER statement specifies handlers that each may deal\nwith one or more conditions. If one of these conditions occurs, the\nspecified statement is executed. statement can be a simple statement\n(for example, SET var_name = value), or it can be a compound statement\nwritten using BEGIN and END (see [HELP BEGIN END]).\n\nFor a CONTINUE handler, execution of the current program continues\nafter execution of the handler statement. For an EXIT handler,\nexecution terminates for the BEGIN ... END compound statement in which\nthe handler is declared. (This is true even if the condition occurs in\nan inner block.) The UNDO handler type statement is not supported.\n\nIf a condition occurs for which no handler has been declared, the\ndefault action is EXIT.\n\nA condition_value for DECLARE ... HANDLER can be any of the following\nvalues:\n\no An SQLSTATE value (a 5-character string literal) or a MySQL error\n  code (a number). You should not use SQLSTATE value \'00000\' or MySQL\n  error code 0, because those indicate sucess rather than an error\n  condition. For a list of SQLSTATE values and MySQL error codes, see\n  http://dev.mysql.com/doc/refman/6.0/en/error-messages-server.html.\n\no A condition name previously specified with DECLARE ... CONDITION. See\n  [HELP DECLARE CONDITION].\n\no SQLWARNING is shorthand for the class of SQLSTATE values that begin\n  with \'01\'.\n\no NOT FOUND is shorthand for the class of SQLSTATE values that begin\n  with \'02\'. This is relevant only within the context of cursors and is\n  used to control what happens when a cursor reaches the end of a data\n  set.\n\no SQLEXCEPTION is shorthand for the class of SQLSTATE values that do\n  not begin with \'00\', \'01\', or \'02\'.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/declare-handler.html\n\n', 'mysql> CREATE TABLE test.t (s1 INT, PRIMARY KEY (s1));\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE handlerdemo ()\n    -> BEGIN\n    ->   DECLARE CONTINUE HANDLER FOR SQLSTATE \'23000\' SET @x2 = 1;\n    ->   SET @x = 1;\n    ->   INSERT INTO test.t VALUES (1);\n    ->   SET @x = 2;\n    ->   INSERT INTO test.t VALUES (1);\n    ->   SET @x = 3;\n    -> END;\n    -> //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL handlerdemo()//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n    +------+\n    | @x   |\n    +------+\n    | 3    |\n    +------+\n    1 row in set (0.00 sec)\n', 'http://dev.mysql.com/doc/refman/6.0/en/declare-handler.html'),
	(309, 'DOUBLE', 22, 'DOUBLE[(M,D)] [UNSIGNED] [ZEROFILL]\n\nA normal-size (double-precision) floating-point number. Allowable\nvalues are -1.7976931348623157E+308 to -2.2250738585072014E-308, 0, and\n2.2250738585072014E-308 to 1.7976931348623157E+308. These are the\ntheoretical limits, based on the IEEE standard. The actual range might\nbe slightly smaller depending on your hardware or operating system.\n\nM is the total number of digits and D is the number of digits following\nthe decimal point. If M and D are omitted, values are stored to the\nlimits allowed by the hardware. A double-precision floating-point\nnumber is accurate to approximately 15 decimal places.\n\nUNSIGNED, if specified, disallows negative values.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(310, 'TIME', 22, 'TIME\n\nA time. The range is \'-838:59:59\' to \'838:59:59\'. MySQL displays TIME\nvalues in \'HH:MM:SS\' format, but allows assignment of values to TIME\ncolumns using either strings or numbers.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-type-overview.html'),
	(311, '&&', 13, 'Syntax:\nAND, &&\n\nLogical AND. Evaluates to 1 if all operands are non-zero and not NULL,\nto 0 if one or more operands are 0, otherwise NULL is returned.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/logical-operators.html\n\n', 'mysql> SELECT 1 && 1;\n        -> 1\nmysql> SELECT 1 && 0;\n        -> 0\nmysql> SELECT 1 && NULL;\n        -> NULL\nmysql> SELECT 0 && NULL;\n        -> 0\nmysql> SELECT NULL && 0;\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/logical-operators.html'),
	(312, 'X', 10, 'X(p)\n\nReturns the X-coordinate value for the point p as a double-precision\nnumber.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#point-property-functions\n\n', 'mysql> SET @pt = \'Point(56.7 53.34)\';\nmysql> SELECT X(GeomFromText(@pt));\n+----------------------+\n| X(GeomFromText(@pt)) |\n+----------------------+\n|                 56.7 |\n+----------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#point-property-functions'),
	(313, 'FOUND_ROWS', 15, 'Syntax:\nFOUND_ROWS()\n\nA SELECT statement may include a LIMIT clause to restrict the number of\nrows the server returns to the client. In some cases, it is desirable\nto know how many rows the statement would have returned without the\nLIMIT, but without running the statement again. To obtain this row\ncount, include a SQL_CALC_FOUND_ROWS option in the SELECT statement,\nand then invoke FOUND_ROWS() afterward:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT SQL_CALC_FOUND_ROWS * FROM tbl_name\n    -> WHERE id > 100 LIMIT 10;\nmysql> SELECT FOUND_ROWS();\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(314, 'SYSTEM_USER', 15, 'Syntax:\nSYSTEM_USER()\n\nSYSTEM_USER() is a synonym for USER().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(315, 'CROSSES', 30, 'Crosses(g1,g2)\n\nReturns 1 if g1 spatially crosses g2. Returns NULL if g1 is a Polygon\nor a MultiPolygon, or if g2 is a Point or a MultiPoint. Otherwise,\nreturns 0.\n\nThe term spatially crosses denotes a spatial relation between two given\ngeometries that has the following properties:\n\no The two geometries intersect\n\no Their intersection results in a geometry that has a dimension that is\n  one less than the maximum dimension of the two given geometries\n\no Their intersection is not equal to either of the two given geometries\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html'),
	(316, 'TRUNCATE TABLE', 27, 'Syntax:\nTRUNCATE [TABLE] tbl_name\n\nTRUNCATE TABLE empties a table completely. Logically, this is\nequivalent to a DELETE statement that deletes all rows, but there are\npractical differences under some circumstances.\n\nFor an InnoDB table, InnoDB processes TRUNCATE TABLE by deleting rows\none by one if there are any FOREIGN KEY constraints that reference the\ntable. If there are no FOREIGN KEY constraints, InnoDB performs fast\ntruncation by dropping the original table and creating an empty one\nwith the same definition, which is much faster than deleting rows one\nby one. The AUTO_INCREMENT counter is reset by TRUNCATE TABLE,\nregardless of whether there is a FOREIGN KEY constraint.\n\nIn the case that FOREIGN KEY constraints reference the table, InnoDB\ndeletes rows one by one and processes the constraints on each one. If\nthe FOREIGN KEY constraint specifies DELETE CASCADE, rows from the\nchild (referenced) table are deleted, and the truncated table becomes\nempty. If the FOREIGN KEY constraint does not specify CASCADE, the\nTRUNCATE statement deletes rows one by one and stops if it encounters a\nparent row that is referenced by the child, returning this error:\n\nERROR 1451 (23000): Cannot delete or update a parent row: a foreign\nkey constraint fails (`test`.`child`, CONSTRAINT `child_ibfk_1`\nFOREIGN KEY (`parent_id`) REFERENCES `parent` (`id`))\n\nThis is the same as a DELETE statement with no WHERE clause.\n\nBeginning with MySQL 6.0.10, TRUNCATE is treated for purposes of binary\nlogging and replication as DROP TABLE followed by CREATE TABLE --- that\nis, as DDL rather than DML. This is due to the fact that, when using\nInnoDB and other transactional storage engines where the transaction\nisolation level does not allow for statement-based logging (READ\nCOMMITTED or READ UNCOMMITTED), the statement was not logged and\nreplicated when using STATEMENT or MIXED logging mode. (Bug#36763\n(http://bugs.mysql.com/36763)) However, it is still applied on\nreplication slaves using InnoDB in the manner described previously.\n\nThe count of rows affected by TRUNCATE TABLE is accurate only when it\nis mapped to a DELETE statement.\n\nFor other storage engines, TRUNCATE TABLE differs from DELETE in the\nfollowing ways in MySQL 6.0:\n\no Truncate operations drop and re-create the table, which is much\n  faster than deleting rows one by one, particularly for large tables.\n\no Truncate operations are not transaction-safe; an error occurs when\n  attempting one in the course of an active transaction or active table\n  lock.\n\no Truncation operations do not return the number of deleted rows.\n\no As long as the table format file tbl_name.frm is valid, the table can\n  be re-created as an empty table with TRUNCATE TABLE, even if the data\n  or index files have become corrupted.\n\no The table handler does not remember the last used AUTO_INCREMENT\n  value, but starts counting from the beginning. This is true even for\n  MyISAM and InnoDB, which normally do not reuse sequence values.\n\no When used with partitioned tables, TRUNCATE TABLE preserves the\n  partitioning; that is, the data and index files are dropped and\n  re-created, while the partition definitions (.par) file is\n  unaffected.\n\no Since truncation of a table does not make any use of DELETE, the\n  TRUNCATE statement does not invoke ON DELETE triggers.\n\nTRUNCATE TABLE requires the DROP privilege.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/truncate.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/truncate.html'),
	(317, 'BIT_XOR', 16, 'Syntax:\nBIT_XOR(expr)\n\nReturns the bitwise XOR of all bits in expr. The calculation is\nperformed with 64-bit (BIGINT) precision.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(318, 'CURRENT_DATE', 31, 'Syntax:\nCURRENT_DATE, CURRENT_DATE()\n\nCURRENT_DATE and CURRENT_DATE() are synonyms for CURDATE().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(319, 'START SLAVE', 26, 'Syntax:\nSTART SLAVE [thread_type [, thread_type] ... ]\nSTART SLAVE [SQL_THREAD] UNTIL\n    MASTER_LOG_FILE = \'log_name\', MASTER_LOG_POS = log_pos\nSTART SLAVE [SQL_THREAD] UNTIL\n    RELAY_LOG_FILE = \'log_name\', RELAY_LOG_POS = log_pos\n\nthread_type: IO_THREAD | SQL_THREAD\n\nSTART SLAVE with no thread_type options starts both of the slave\nthreads. The I/O thread reads queries from the master server and stores\nthem in the relay log. The SQL thread reads the relay log and executes\nthe queries. START SLAVE requires the SUPER privilege.\n\nIf START SLAVE succeeds in starting the slave threads, it returns\nwithout any error. However, even in that case, it might be that the\nslave threads start and then later stop (for example, because they do\nnot manage to connect to the master or read its binary logs, or some\nother problem). START SLAVE does not warn you about this. You must\ncheck the slave\'s error log for error messages generated by the slave\nthreads, or check that they are running satisfactorily with SHOW SLAVE\nSTATUS.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/start-slave.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/start-slave.html'),
	(320, 'AREA', 2, 'Area(poly)\n\nReturns as a double-precision number the area of the Polygon value\npoly, as measured in its spatial reference system.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#polygon-property-functions\n\n', 'mysql> SET @poly = \'Polygon((0 0,0 3,3 0,0 0),(1 1,1 2,2 1,1 1))\';\nmysql> SELECT Area(GeomFromText(@poly));\n+---------------------------+\n| Area(GeomFromText(@poly)) |\n+---------------------------+\n|                         4 |\n+---------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#polygon-property-functions'),
	(321, 'BEGIN END', 23, 'Syntax:\n[begin_label:] BEGIN\n    [statement_list]\nEND [end_label]\n\nBEGIN ... END syntax is used for writing compound statements, which can\nappear within stored programs. A compound statement can contain\nmultiple statements, enclosed by the BEGIN and END keywords.\nstatement_list represents a list of one or more statements, each\nterminated by a semicolon (;) statement delimiter. statement_list is\noptional, which means that the empty compound statement (BEGIN END) is\nlegal.\n\nUse of multiple statements requires that a client is able to send\nstatement strings containing the ; statement delimiter. This is handled\nin the mysql command-line client with the delimiter command. Changing\nthe ; end-of-statement delimiter (for example, to //) allows ; to be\nused in a program body. For an example, see\nhttp://dev.mysql.com/doc/refman/6.0/en/stored-programs-defining.html.\n\nA compound statement can be labeled. end_label cannot be given unless\nbegin_label also is present. If both are present, they must be the\nsame.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/begin-end.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/begin-end.html'),
	(322, 'FLUSH', 26, 'Syntax:\nFLUSH [NO_WRITE_TO_BINLOG | LOCAL]\n    flush_option [, flush_option] ...\n\nThe FLUSH statement clears or reloads various internal caches used by\nMySQL. To execute FLUSH, you must have the RELOAD privilege.\n\nThe RESET statement is similar to FLUSH. See [HELP RESET].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/flush.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/flush.html'),
	(323, 'SHOW PROCEDURE STATUS', 26, 'Syntax:\nSHOW PROCEDURE STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement is a MySQL extension. It returns characteristics of a\nstored procedure, such as the database, name, type, creator, creation\nand modification dates, and character set information. A similar\nstatement, SHOW FUNCTION STATUS, displays information about stored\nfunctions (see [HELP SHOW FUNCTION STATUS]).\n\nThe LIKE clause, if present, indicates which procedure or function\nnames to match. The WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-procedure-status.html\n\n', 'mysql> SHOW PROCEDURE STATUS LIKE \'sp1\'\\G\n*************************** 1. row ***************************\n                  Db: test\n                Name: sp1\n                Type: PROCEDURE\n             Definer: testuser@localhost\n            Modified: 2004-08-03 15:29:37\n             Created: 2004-08-03 15:29:37\n       Security_type: DEFINER\n             Comment:\ncharacter_set_client: latin1\ncollation_connection: latin1_swedish_ci\n  Database Collation: latin1_swedish_ci\n', 'http://dev.mysql.com/doc/refman/6.0/en/show-procedure-status.html'),
	(324, 'SHOW WARNINGS', 26, 'Syntax:\nSHOW WARNINGS [LIMIT [offset,] row_count]\nSHOW COUNT(*) WARNINGS\n\nSHOW WARNINGS shows the error, warning, and note messages that resulted\nfrom the last statement that generated messages in the current session.\nIt shows nothing if the last statement used a table and generated no\nmessages. (That is, a statement that uses a table but generates no\nmessages clears the message list.) Statements that do not use tables\nand do not generate messages have no effect on the message list.\n\nA related statement, SHOW ERRORS, shows only the errors. See [HELP SHOW\nERRORS].\n\nThe SHOW COUNT(*) WARNINGS statement displays the total number of\nerrors, warnings, and notes. You can also retrieve this number from the\nwarning_count variable:\n\nSHOW COUNT(*) WARNINGS;\nSELECT @@warning_count;\n\nThe value of warning_count might be greater than the number of messages\ndisplayed by SHOW WARNINGS if the max_error_count system variable is\nset so low that not all messages are stored. An example shown later in\nthis section demonstrates how this can happen.\n\nThe LIMIT clause has the same syntax as for the SELECT statement. See\nhttp://dev.mysql.com/doc/refman/6.0/en/select.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-warnings.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-warnings.html'),
	(325, 'DESCRIBE', 28, 'Syntax:\n{DESCRIBE | DESC} tbl_name [col_name | wild]\n\nDESCRIBE provides information about the columns in a table. It is a\nshortcut for SHOW COLUMNS FROM. These statements also display\ninformation for views. (See [HELP SHOW COLUMNS].)\n\ncol_name can be a column name, or a string containing the SQL "%" and\n"_" wildcard characters to obtain output only for the columns with\nnames matching the string. There is no need to enclose the string\nwithin quotes unless it contains spaces or other special characters.\n\nmysql> DESCRIBE City;\n+------------+----------+------+-----+---------+----------------+\n| Field      | Type     | Null | Key | Default | Extra          |\n+------------+----------+------+-----+---------+----------------+\n| Id         | int(11)  | NO   | PRI | NULL    | auto_increment |\n| Name       | char(35) | NO   |     |         |                |\n| Country    | char(3)  | NO   | UNI |         |                |\n| District   | char(20) | YES  | MUL |         |                |\n| Population | int(11)  | NO   |     | 0       |                |\n+------------+----------+------+-----+---------+----------------+\n5 rows in set (0.00 sec)\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/describe.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/describe.html'),
	(326, 'DROP USER', 9, 'Syntax:\nDROP USER user [, user] ...\n\nThe DROP USER statement removes one or more MySQL accounts. It removes\nprivilege rows for the account from all grant tables. To use this\nstatement, you must have the global CREATE USER privilege or the DELETE\nprivilege for the mysql database. Each account is named using the same\nformat as for the GRANT statement; for example, \'jeffrey\'@\'localhost\'.\nIf you specify only the user name part of the account name, a host name\npart of \'%\' is used. For additional information about specifying\naccount names, see [HELP GRANT].\n\nWith DROP USER, you can remove an account and its privileges as\nfollows:\n\nDROP USER user;\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-user.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-user.html'),
	(327, 'STDDEV_POP', 16, 'Syntax:\nSTDDEV_POP(expr)\n\nReturns the population standard deviation of expr (the square root of\nVAR_POP()). You can also use STD() or STDDEV(), which are equivalent\nbut not standard SQL.\n\nSTDDEV_POP() returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(328, 'SHOW CHARACTER SET', 26, 'Syntax:\nSHOW CHARACTER SET\n    [LIKE \'pattern\' | WHERE expr]\n\nThe SHOW CHARACTER SET statement shows all available character sets.\nThe LIKE clause, if present, indicates which character set names to\nmatch. The WHERE clause can be given to select rows using more general\nconditions, as discussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/extended-show.html. For example:\n\nmysql> SHOW CHARACTER SET LIKE \'latin%\';\n+---------+-----------------------------+-------------------+--------+\n| Charset | Description                 | Default collation | Maxlen |\n+---------+-----------------------------+-------------------+--------+\n| latin1  | cp1252 West European        | latin1_swedish_ci |      1 |\n| latin2  | ISO 8859-2 Central European | latin2_general_ci |      1 |\n| latin5  | ISO 8859-9 Turkish          | latin5_turkish_ci |      1 |\n| latin7  | ISO 8859-13 Baltic          | latin7_general_ci |      1 |\n+---------+-----------------------------+-------------------+--------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-character-set.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-character-set.html'),
	(329, 'SUBSTRING', 36, 'Syntax:\nSUBSTRING(str,pos), SUBSTRING(str FROM pos), SUBSTRING(str,pos,len),\nSUBSTRING(str FROM pos FOR len)\n\nThe forms without a len argument return a substring from string str\nstarting at position pos. The forms with a len argument return a\nsubstring len characters long from string str, starting at position\npos. The forms that use FROM are standard SQL syntax. It is also\npossible to use a negative value for pos. In this case, the beginning\nof the substring is pos characters from the end of the string, rather\nthan the beginning. A negative value may be used for pos in any of the\nforms of this function.\n\nFor all forms of SUBSTRING(), the position of the first character in\nthe string from which the substring is to be extracted is reckoned as\n1.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT SUBSTRING(\'Quadratically\',5);\n        -> \'ratically\'\nmysql> SELECT SUBSTRING(\'foobarbar\' FROM 4);\n        -> \'barbar\'\nmysql> SELECT SUBSTRING(\'Quadratically\',5,6);\n        -> \'ratica\'        \nmysql> SELECT SUBSTRING(\'Sakila\', -3);\n        -> \'ila\'        \nmysql> SELECT SUBSTRING(\'Sakila\', -5, 3);\n        -> \'aki\'\nmysql> SELECT SUBSTRING(\'Sakila\' FROM -4 FOR 2);\n        -> \'ki\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(330, 'ISEMPTY', 35, 'IsEmpty(g)\n\nReturns 1 if the geometry value g is the empty geometry, 0 if it is not\nempty, and -1 if the argument is NULL. If the geometry is empty, it\nrepresents the empty point set.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions'),
	(331, 'SHOW FUNCTION STATUS', 26, 'Syntax:\nSHOW FUNCTION STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement is similar to SHOW PROCEDURE STATUS but for stored\nfunctions. See [HELP SHOW PROCEDURE STATUS].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-function-status.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-function-status.html'),
	(332, 'LTRIM', 36, 'Syntax:\nLTRIM(str)\n\nReturns the string str with leading space characters removed.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT LTRIM(\'  barbar\');\n        -> \'barbar\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(333, 'INTERSECTS', 30, 'Intersects(g1,g2)\n\nReturns 1 or 0 to indicate whether g1 spatially intersects g2.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html'),
	(334, 'CALL', 27, 'Syntax:\nCALL sp_name([parameter[,...]])\nCALL sp_name[()]\n\nThe CALL statement invokes a stored procedure that was defined\npreviously with CREATE PROCEDURE.\n\nStored procedures that take no arguments can be invoked without\nparentheses. That is, CALL p() and CALL p are equivalent.\n\nCALL can pass back values to its caller using parameters that are\ndeclared as OUT or INOUT parameters. When the procedure returns, a\nclient program can also obtain the number of rows affected for the\nfinal statement executed within the routine: At the SQL level, call the\nROW_COUNT() function; from the C API, call the mysql_affected_rows()\nfunction.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/call.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/call.html'),
	(335, 'MBRDISJOINT', 6, 'MBRDisjoint(g1,g2)\n\nReturns 1 or 0 to indicate whether the Minimum Bounding Rectangles of\nthe two geometries g1 and g2 are disjoint (do not intersect).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html'),
	(336, 'VALUES', 14, 'Syntax:\nVALUES(col_name)\n\nIn an INSERT ... ON DUPLICATE KEY UPDATE statement, you can use the\nVALUES(col_name) function in the UPDATE clause to refer to column\nvalues from the INSERT portion of the statement. In other words,\nVALUES(col_name) in the UPDATE clause refers to the value of col_name\nthat would be inserted, had no duplicate-key conflict occurred. This\nfunction is especially useful in multiple-row inserts. The VALUES()\nfunction is meaningful only in INSERT ... ON DUPLICATE KEY UPDATE\nstatements and returns NULL otherwise.\nhttp://dev.mysql.com/doc/refman/6.0/en/insert-on-duplicate.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', 'mysql> INSERT INTO table (a,b,c) VALUES (1,2,3),(4,5,6)\n    -> ON DUPLICATE KEY UPDATE c=VALUES(a)+VALUES(b);\n', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(337, 'SUBSTRING_INDEX', 36, 'Syntax:\nSUBSTRING_INDEX(str,delim,count)\n\nReturns the substring from string str before count occurrences of the\ndelimiter delim. If count is positive, everything to the left of the\nfinal delimiter (counting from the left) is returned. If count is\nnegative, everything to the right of the final delimiter (counting from\nthe right) is returned. SUBSTRING_INDEX() performs a case-sensitive\nmatch when searching for delim.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT SUBSTRING_INDEX(\'www.mysql.com\', \'.\', 2);\n        -> \'www.mysql\'\nmysql> SELECT SUBSTRING_INDEX(\'www.mysql.com\', \'.\', -2);\n        -> \'mysql.com\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(338, 'ENCODE', 11, 'Syntax:\nENCODE(str,pass_str)\n\nEncrypt str using pass_str as the password. To decrypt the result, use\nDECODE().\n\nThe result is a binary string of the same length as str.\n\nThe strength of the encryption is based on how good the random\ngenerator is. It should suffice for short strings.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(339, 'LOOP', 23, 'Syntax:\n[begin_label:] LOOP\n    statement_list\nEND LOOP [end_label]\n\nLOOP implements a simple loop construct, enabling repeated execution of\nthe statement list, which consists of one or more statements, each\nterminated by a semicolon (;) statement delimiter. The statements\nwithin the loop are repeated until the loop is exited; usually this is\naccomplished with a LEAVE statement.\n\nA LOOP statement can be labeled. end_label cannot be given unless\nbegin_label also is present. If both are present, they must be the\nsame.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/loop-statement.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/loop-statement.html'),
	(340, 'TRUNCATE', 4, 'Syntax:\nTRUNCATE(X,D)\n\nReturns the number X, truncated to D decimal places. If D is 0, the\nresult has no decimal point or fractional part. D can be negative to\ncause D digits left of the decimal point of the value X to become zero.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT TRUNCATE(1.223,1);\n        -> 1.2\nmysql> SELECT TRUNCATE(1.999,1);\n        -> 1.9\nmysql> SELECT TRUNCATE(1.999,0);\n        -> 1\nmysql> SELECT TRUNCATE(-1.999,1);\n        -> -1.9\nmysql> SELECT TRUNCATE(122,-2);\n       -> 100\nmysql> SELECT TRUNCATE(10.28*100,0);\n       -> 1028\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(341, 'TIMESTAMPADD', 31, 'Syntax:\nTIMESTAMPADD(unit,interval,datetime_expr)\n\nAdds the integer expression interval to the date or datetime expression\ndatetime_expr. The unit for interval is given by the unit argument,\nwhich should be one of the following values: FRAC_SECOND\n(microseconds), SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, or\nYEAR.\n\nBeginning with MySQL 6.0.5, it is possible to use MICROSECOND in place\nof FRAC_SECOND with this function, and FRAC_SECOND is deprecated.\n\nThe unit value may be specified using one of keywords as shown, or with\na prefix of SQL_TSI_. For example, DAY and SQL_TSI_DAY both are legal.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT TIMESTAMPADD(MINUTE,1,\'2003-01-02\');\n        -> \'2003-01-02 00:01:00\'\nmysql> SELECT TIMESTAMPADD(WEEK,1,\'2003-01-02\');\n        -> \'2003-01-09\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(342, 'SHOW', 26, 'SHOW has many forms that provide information about databases, tables,\ncolumns, or status information about the server. This section describes\nthose following:\n\nSHOW AUTHORS\nSHOW CHARACTER SET [like_or_where]\nSHOW COLLATION [like_or_where]\nSHOW [FULL] COLUMNS FROM tbl_name [FROM db_name] [like_or_where]\nSHOW CONTRIBUTORS\nSHOW CREATE DATABASE db_name\nSHOW CREATE EVENT event_name\nSHOW CREATE FUNCTION func_name\nSHOW CREATE PROCEDURE proc_name\nSHOW CREATE TABLE tbl_name\nSHOW CREATE TRIGGER trigger_name\nSHOW CREATE VIEW view_name\nSHOW DATABASES [like_or_where]\nSHOW ENGINE engine_name {STATUS | MUTEX}\nSHOW [STORAGE] ENGINES\nSHOW ERRORS [LIMIT [offset,] row_count]\nSHOW [FULL] EVENTS\nSHOW FUNCTION CODE func_name\nSHOW FUNCTION STATUS [like_or_where]\nSHOW GRANTS FOR user\nSHOW INDEX FROM tbl_name [FROM db_name]\nSHOW OPEN TABLES [FROM db_name] [like_or_where]\nSHOW PLUGINS\nSHOW PROCEDURE CODE proc_name\nSHOW PROCEDURE STATUS [like_or_where]\nSHOW PRIVILEGES\nSHOW [FULL] PROCESSLIST\nSHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n]\nSHOW PROFILES\nSHOW SCHEDULER STATUS\nSHOW [GLOBAL | SESSION] STATUS [like_or_where]\nSHOW TABLE STATUS [FROM db_name] [like_or_where]\nSHOW TABLES [FROM db_name] [like_or_where]\nSHOW TRIGGERS [FROM db_name] [like_or_where]\nSHOW [GLOBAL | SESSION] VARIABLES [like_or_where]\nSHOW WARNINGS [LIMIT [offset,] row_count]\n\nlike_or_where:\n    LIKE \'pattern\'\n  | WHERE expr\n\nIf the syntax for a given SHOW statement includes a LIKE \'pattern\'\npart, \'pattern\' is a string that can contain the SQL "%" and "_"\nwildcard characters. The pattern is useful for restricting statement\noutput to matching values.\n\nSeveral SHOW statements also accept a WHERE clause that provides more\nflexibility in specifying which rows to display. See\nhttp://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show.html'),
	(343, 'GREATEST', 17, 'Syntax:\nGREATEST(value1,value2,...)\n\nWith two or more arguments, returns the largest (maximum-valued)\nargument. The arguments are compared using the same rules as for\nLEAST().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT GREATEST(2,0);\n        -> 2\nmysql> SELECT GREATEST(34.0,3.0,5.0,767.0);\n        -> 767.0\nmysql> SELECT GREATEST(\'B\',\'A\',\'C\');\n        -> \'C\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(344, 'SHOW VARIABLES', 26, 'Syntax:\nSHOW [GLOBAL | SESSION] VARIABLES\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW VARIABLES shows the values of MySQL system variables. This\ninformation also can be obtained using the mysqladmin variables\ncommand. The LIKE clause, if present, indicates which variable names to\nmatch. The WHERE clause can be given to select rows using more general\nconditions, as discussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/extended-show.html.\n\nWith the GLOBAL modifier, SHOW VARIABLES displays the values that are\nused for new connections to MySQL. With SESSION, it displays the values\nthat are in effect for the current connection. If no modifier is\npresent, the default is SESSION. LOCAL is a synonym for SESSION.\nWith a LIKE clause, the statement displays only rows for those\nvariables with names that match the pattern. To obtain the row for a\nspecific variable, use a LIKE clause as shown:\n\nSHOW VARIABLES LIKE \'max_join_size\';\nSHOW SESSION VARIABLES LIKE \'max_join_size\';\n\nTo get a list of variables whose name match a pattern, use the "%"\nwildcard character in a LIKE clause:\n\nSHOW VARIABLES LIKE \'%size%\';\nSHOW GLOBAL VARIABLES LIKE \'%size%\';\n\nWildcard characters can be used in any position within the pattern to\nbe matched. Strictly speaking, because "_" is a wildcard that matches\nany single character, you should escape it as "\\_" to match it\nliterally. In practice, this is rarely necessary.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-variables.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-variables.html'),
	(345, 'BINLOG', 26, 'Syntax:\nBINLOG \'str\'\n\nBINLOG is an internal-use statement. It is generated by the mysqlbinlog\nprogram as the printable representation of certain events in binary log\nfiles. (See http://dev.mysql.com/doc/refman/6.0/en/mysqlbinlog.html.)\nThe \'str\' value is a base 64-encoded string the that server decodes to\ndetermine the data change indicated by the corresponding event. This\nstatement requires the SUPER privilege.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/binlog.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/binlog.html'),
	(346, 'BIT_AND', 16, 'Syntax:\nBIT_AND(expr)\n\nReturns the bitwise AND of all bits in expr. The calculation is\nperformed with 64-bit (BIGINT) precision.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(347, 'SECOND', 31, 'Syntax:\nSECOND(time)\n\nReturns the second for time, in the range 0 to 59.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT SECOND(\'10:05:03\');\n        -> 3\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(348, 'ATAN2', 4, 'Syntax:\nATAN(Y,X), ATAN2(Y,X)\n\nReturns the arc tangent of the two variables X and Y. It is similar to\ncalculating the arc tangent of Y / X, except that the signs of both\narguments are used to determine the quadrant of the result.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT ATAN(-2,2);\n        -> -0.78539816339745\nmysql> SELECT ATAN2(PI(),0);\n        -> 1.5707963267949\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(349, 'MBRCONTAINS', 6, 'MBRContains(g1,g2)\n\nReturns 1 or 0 to indicate whether the Minimum Bounding Rectangle of g1\ncontains the Minimum Bounding Rectangle of g2. This tests the opposite\nrelationship as MBRWithin().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html\n\n', 'mysql> SET @g1 = GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = GeomFromText(\'Point(1 1)\');\nmysql> SELECT MBRContains(@g1,@g2), MBRContains(@g2,@g1);\n----------------------+----------------------+\n| MBRContains(@g1,@g2) | MBRContains(@g2,@g1) |\n+----------------------+----------------------+\n|                    1 |                    0 |\n+----------------------+----------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html'),
	(350, 'HOUR', 31, 'Syntax:\nHOUR(time)\n\nReturns the hour for time. The range of the return value is 0 to 23 for\ntime-of-day values. However, the range of TIME values actually is much\nlarger, so HOUR can return values greater than 23.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT HOUR(\'10:05:03\');\n        -> 10\nmysql> SELECT HOUR(\'272:59:59\');\n        -> 272\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(351, 'SELECT', 27, 'Syntax:\nSELECT\n    [ALL | DISTINCT | DISTINCTROW ]\n      [HIGH_PRIORITY]\n      [STRAIGHT_JOIN]\n      [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT]\n      [SQL_CACHE | SQL_NO_CACHE] [SQL_CALC_FOUND_ROWS]\n    select_expr [, select_expr ...]\n    [FROM table_references\n    [WHERE where_condition]\n    [GROUP BY {col_name | expr | position}\n      [ASC | DESC], ... [WITH ROLLUP]]\n    [HAVING where_condition]\n    [ORDER BY {col_name | expr | position}\n      [ASC | DESC], ...]\n    [LIMIT {[offset,] row_count | row_count OFFSET offset}]\n    [PROCEDURE procedure_name(argument_list)]\n    [INTO OUTFILE \'file_name\' export_options\n      | INTO DUMPFILE \'file_name\'\n      | INTO var_name [, var_name]]\n    [FOR UPDATE | LOCK IN SHARE MODE]]\n\nSELECT is used to retrieve rows selected from one or more tables, and\ncan include UNION statements and subqueries. See [HELP UNION], and\nhttp://dev.mysql.com/doc/refman/6.0/en/subqueries.html.\n\nThe most commonly used clauses of SELECT statements are these:\n\no Each select_expr indicates a column that you want to retrieve. There\n  must be at least one select_expr.\n\no table_references indicates the table or tables from which to retrieve\n  rows. Its syntax is described in [HELP JOIN].\n\no The WHERE clause, if given, indicates the condition or conditions\n  that rows must satisfy to be selected. where_condition is an\n  expression that evaluates to true for each row to be selected. The\n  statement selects all rows if there is no WHERE clause.\n\n  In the WHERE clause, you can use any of the functions and operators\n  that MySQL supports, except for aggregate (summary) functions. See\n  http://dev.mysql.com/doc/refman/6.0/en/functions.html.\n\nSELECT can also be used to retrieve rows computed without reference to\nany table.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/select.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/select.html'),
	(352, 'COT', 4, 'Syntax:\nCOT(X)\n\nReturns the cotangent of X.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT COT(12);\n        -> -1.5726734063977\nmysql> SELECT COT(0);\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(353, 'SHOW CREATE EVENT', 26, 'Syntax:\nSHOW CREATE EVENT event_name\n\nThis statement displays the CREATE EVENT statement needed to re-create\na given event. For example (using the same event e_daily defined and\nthen altered in\nhttp://dev.mysql.com/doc/refman/6.0/en/show-events.html):\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-create-event.html\n\n', 'mysql> SHOW CREATE EVENT test.e_daily\\G\n*************************** 1. row ***************************\n               Event: e_daily\n            sql_mode: \n           time_zone: SYSTEM\n        Create Event: CREATE EVENT `e_daily`\n                        ON SCHEDULE EVERY 1 DAY\n                        STARTS CURRENT_TIMESTAMP + INTERVAL 6 HOUR\n                        ON COMPLETION NOT PRESERVE\n                        ENABLE\n                        COMMENT \'Saves total number of sessions then\n                                clears the table each day\'\n                        DO BEGIN\n                          INSERT INTO site_activity.totals (time, total)\n                            SELECT CURRENT_TIMESTAMP, COUNT(*) \n                            FROM site_activity.sessions;\n                          DELETE FROM site_activity.sessions;\n                        END\ncharacter_set_client: latin1\ncollation_connection: latin1_swedish_ci\n  Database Collation: latin1_swedish_ci\n', 'http://dev.mysql.com/doc/refman/6.0/en/show-create-event.html'),
	(354, 'LOAD_FILE', 36, 'Syntax:\nLOAD_FILE(file_name)\n\nReads the file and returns the file contents as a string. To use this\nfunction, the file must be located on the server host, you must specify\nthe full path name to the file, and you must have the FILE privilege.\nThe file must be readable by all and its size less than\nmax_allowed_packet bytes. If the secure_file_priv system variable is\nset to a non-empty directory name, the file to be loaded must be\nlocated in that directory.\n\nIf the file does not exist or cannot be read because one of the\npreceding conditions is not satisfied, the function returns NULL.\n\nThe character_set_filesystem system variable controls interpretation of\nfile names that are given as literal strings.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> UPDATE t\n            SET blob_col=LOAD_FILE(\'/tmp/picture\')\n            WHERE id=1;\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(355, 'POINTFROMTEXT', 3, 'PointFromText(wkt[,srid])\n\nConstructs a POINT value using its WKT representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions'),
	(356, 'GROUP_CONCAT', 16, 'Syntax:\nGROUP_CONCAT(expr)\n\nThis function returns a string result with the concatenated non-NULL\nvalues from a group. It returns NULL if there are no non-NULL values.\nThe full syntax is as follows:\n\nGROUP_CONCAT([DISTINCT] expr [,expr ...]\n             [ORDER BY {unsigned_integer | col_name | expr}\n                 [ASC | DESC] [,col_name ...]]\n             [SEPARATOR str_val])\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', 'mysql> SELECT student_name,\n    ->     GROUP_CONCAT(test_score)\n    ->     FROM student\n    ->     GROUP BY student_name;\n', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(357, 'DATE_FORMAT', 31, 'Syntax:\nDATE_FORMAT(date,format)\n\nFormats the date value according to the format string.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT DATE_FORMAT(\'2009-10-04 22:23:00\', \'%W %M %Y\');\n        -> \'Sunday October 2009\'\nmysql> SELECT DATE_FORMAT(\'2007-10-04 22:23:00\', \'%H:%i:%s\');\n        -> \'22:23:00\'\nmysql> SELECT DATE_FORMAT(\'1900-10-04 22:23:00\',\n    ->                 \'%D %y %a %d %m %b %j\');\n        -> \'4th 00 Thu 04 10 Oct 277\'\nmysql> SELECT DATE_FORMAT(\'1997-10-04 22:23:00\',\n    ->                 \'%H %k %I %r %T %S %w\');\n        -> \'22 22 10 10:23:00 PM 22:23:00 00 6\'\nmysql> SELECT DATE_FORMAT(\'1999-01-01\', \'%X %V\');\n        -> \'1998 52\'\nmysql> SELECT DATE_FORMAT(\'2006-06-00\', \'%d\');\n        -> \'00\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(358, 'BENCHMARK', 15, 'Syntax:\nBENCHMARK(count,expr)\n\nThe BENCHMARK() function executes the expression expr repeatedly count\ntimes. It may be used to time how quickly MySQL processes the\nexpression. The result value is always 0. The intended use is from\nwithin the mysql client, which reports query execution times:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT BENCHMARK(1000000,ENCODE(\'hello\',\'goodbye\'));\n+----------------------------------------------+\n| BENCHMARK(1000000,ENCODE(\'hello\',\'goodbye\')) |\n+----------------------------------------------+\n|                                            0 |\n+----------------------------------------------+\n1 row in set (4.74 sec)\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(359, 'YEAR', 31, 'Syntax:\nYEAR(date)\n\nReturns the year for date, in the range 1000 to 9999, or 0 for the\n"zero" date.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT YEAR(\'1987-01-01\');\n        -> 1987\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(360, 'SHOW ENGINE', 26, 'Syntax:\nSHOW ENGINE engine_name {STATUS | MUTEX}\n\nSHOW ENGINE displays operational information about a storage engine.\nThe following statements currently are supported:\n\nSHOW ENGINE INNODB STATUS\nSHOW ENGINE INNODB MUTEX\n\nSHOW ENGINE INNODB STATUS displays extensive information about the\nstate of the InnoDB storage engine.\n\nThe InnoDB Monitors provide additional information about InnoDB\nprocessing. See\nhttp://dev.mysql.com/doc/refman/6.0/en/innodb-monitor.html.\n\nSHOW ENGINE INNODB MUTEX displays InnoDB mutex statistics. The\nstatement displays the following fields:\n\no Type\n\n  Always InnoDB.\n\no Name\n\n  The source file where the mutex is implemented, and the line number\n  in the file where the mutex is created. The line number may change\n  depending on your version of MySQL.\n\no Status\n\n  The mutex status. This field displays several values if UNIV_DEBUG\n  was defined at MySQL compilation time (for example, in include/univ.h\n  in the InnoDB part of the MySQL source tree). If UNIV_DEBUG was not\n  defined, the statement displays only the os_waits value. In the\n  latter case (without UNIV_DEBUG), the information on which the output\n  is based is insufficient to distinguish regular mutexes and mutexes\n  that protect rw-locks (which allow multiple readers or a single\n  writer). Consequently, the output may appear to contain multiple rows\n  for the same mutex.\n\n  o count indicates how many times the mutex was requested.\n\n  o spin_waits indicates how many times the spinlock had to run.\n\n  o spin_rounds indicates the number of spinlock rounds. (spin_rounds\n    divided by spin_waits provides the average round count.)\n\n  o os_waits indicates the number of operating system waits. This\n    occurs when the spinlock did not work (the mutex was not locked\n    during the spinlock and it was necessary to yield to the operating\n    system and wait).\n\n  o os_yields indicates the number of times a the thread trying to lock\n    a mutex gave up its timeslice and yielded to the operating system\n    (on the presumption that allowing other threads to run will free\n    the mutex so that it can be locked).\n\n  o os_wait_times indicates the amount of time (in ms) spent in\n    operating system waits, if the timed_mutexes system variable is 1\n    (ON). If timed_mutexes is 0 (OFF), timing is disabled, so\n    os_wait_times is 0. timed_mutexes is off by default.\n\nInformation from this statement can be used to diagnose system\nproblems. For example, large values of spin_waits and spin_rounds may\nindicate scalability problems.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-engine.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-engine.html'),
	(361, 'NAME_CONST', 14, 'Syntax:\nNAME_CONST(name,value)\n\nReturns the given value. When used to produce a result set column,\nNAME_CONST() causes the column to have the given name. The arguments\nshould be constants.\n\nmysql> SELECT NAME_CONST(\'myname\', 14);\n+--------+\n| myname |\n+--------+\n|     14 |\n+--------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(362, 'RELEASE_LOCK', 14, 'Syntax:\nRELEASE_LOCK(str)\n\nReleases the lock named by the string str that was obtained with\nGET_LOCK(). Returns 1 if the lock was released, 0 if the lock was not\nestablished by this thread (in which case the lock is not released),\nand NULL if the named lock did not exist. The lock does not exist if it\nwas never obtained by a call to GET_LOCK() or if it has previously been\nreleased.\n\nThe DO statement is convenient to use with RELEASE_LOCK(). See [HELP\nDO].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(363, 'IS NULL', 17, 'Syntax:\nIS NULL\n\nTests whether a value is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 1 IS NULL, 0 IS NULL, NULL IS NULL;\n        -> 0, 0, 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(364, 'CONVERT_TZ', 31, 'Syntax:\nCONVERT_TZ(dt,from_tz,to_tz)\n\nCONVERT_TZ() converts a datetime value dt from the time zone given by\nfrom_tz to the time zone given by to_tz and returns the resulting\nvalue. Time zones are specified as described in\nhttp://dev.mysql.com/doc/refman/6.0/en/time-zone-support.html. This\nfunction returns NULL if the arguments are invalid.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT CONVERT_TZ(\'2004-01-01 12:00:00\',\'GMT\',\'MET\');\n        -> \'2004-01-01 13:00:00\'\nmysql> SELECT CONVERT_TZ(\'2004-01-01 12:00:00\',\'+00:00\',\'+10:00\');\n        -> \'2004-01-01 22:00:00\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(365, 'TIME_TO_SEC', 31, 'Syntax:\nTIME_TO_SEC(time)\n\nReturns the time argument, converted to seconds.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT TIME_TO_SEC(\'22:23:00\');\n        -> 80580\nmysql> SELECT TIME_TO_SEC(\'00:39:38\');\n        -> 2378\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(366, 'WEEKDAY', 31, 'Syntax:\nWEEKDAY(date)\n\nReturns the weekday index for date (0 = Monday, 1 = Tuesday, ... 6 =\nSunday).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT WEEKDAY(\'2008-02-03 22:23:00\');\n        -> 6\nmysql> SELECT WEEKDAY(\'2007-11-06\');\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(367, 'EXPORT_SET', 36, 'Syntax:\nEXPORT_SET(bits,on,off[,separator[,number_of_bits]])\n\nReturns a string such that for every bit set in the value bits, you get\nan on string and for every bit not set in the value, you get an off\nstring. Bits in bits are examined from right to left (from low-order to\nhigh-order bits). Strings are added to the result from left to right,\nseparated by the separator string (the default being the comma\ncharacter ","). The number of bits examined is given by number_of_bits\n(defaults to 64).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT EXPORT_SET(5,\'Y\',\'N\',\',\',4);\n        -> \'Y,N,Y,N\'\nmysql> SELECT EXPORT_SET(6,\'1\',\'0\',\',\',10);\n        -> \'0,1,1,0,0,0,0,0,0,0\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(368, 'ALTER SERVER', 38, 'Syntax:\nALTER SERVER  server_name\n    OPTIONS (option [, option] ...)\n\nAlters the server information for server_name, adjusting the specified\noptions as per the CREATE SERVER command. See [HELP CREATE SERVER]. The\ncorresponding fields in the mysql.servers table are updated\naccordingly. This statement requires the SUPER privilege.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/alter-server.html\n\n', 'ALTER SERVER s OPTIONS (USER \'sally\');\n', 'http://dev.mysql.com/doc/refman/6.0/en/alter-server.html'),
	(369, 'RESIGNAL', 23, 'Syntax:\nRESIGNAL [condition_value]\n    [SET signal_information [, signal_information] ...];\n\ncondition_value:\n    SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n\nsignal_information:\n    condition_information_item = simple_value_specification\n\ncondition_information_item:\n{\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n}\n\nsimple_value_specification: (see following discussion)\n\nRESIGNAL passes on the error condition information that is available\nduring execution of a condition handler within a compound statement\ninside a stored procedure or function, trigger, or event. RESIGNAL may\nchange some or all information before passing it on.\n\nRESIGNAL makes it possible to both handle an error and return the error\ninformation. Otherwise, by executing an SQL statement within the\nhandler, information that caused the handler\'s activation is destroyed.\nRESIGNAL also can make some procedures shorter if a given handler could\nhandle part of a situation, then pass the condition "up the line" to\nanother handler.\n\nNo special privileges are required to execute the RESIGNAL statement.\n\nUnless otherwise indicated, the definitions and rules for\ncondition_value and signal_information are the same for the RESIGNAL\nstatement as for SIGNAL (see [HELP SIGNAL]).\n\nThe RESIGNAL statement takes condition_value and SET clauses, both of\nwhich are optional. This leads to several possible uses:\n\no RESIGNAL alone:\n\nRESIGNAL;\n\no RESIGNAL with new signal information:\n\nRESIGNAL SET signal_information [, signal_information] ...;\n\no RESIGNAL with a condition value and possibly new signal information:\n\nRESIGNAL condition_value\n    [SET signal_information [, signal_information] ...];\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/resignal.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/resignal.html'),
	(370, 'TIME FUNCTION', 31, 'Syntax:\nTIME(expr)\n\nExtracts the time part of the time or datetime expression expr and\nreturns it as a string.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT TIME(\'2003-12-31 01:02:03\');\n        -> \'01:02:03\'\nmysql> SELECT TIME(\'2003-12-31 01:02:03.000123\');\n        -> \'01:02:03.000123\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(371, 'DATE_ADD', 31, 'Syntax:\nDATE_ADD(date,INTERVAL expr unit), DATE_SUB(date,INTERVAL expr unit)\n\nThese functions perform date arithmetic. The date argument specifies\nthe starting date or datetime value. expr is an expression specifying\nthe interval value to be added or subtracted from the starting date.\nexpr is a string; it may start with a "-" for negative intervals. unit\nis a keyword indicating the units in which the expression should be\ninterpreted.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT \'2008-12-31 23:59:59\' + INTERVAL 1 SECOND;\n        -> \'2009-01-01 00:00:00\'\nmysql> SELECT INTERVAL 1 DAY + \'2008-12-31\';\n        -> \'2009-01-01\'\nmysql> SELECT \'2005-01-01\' - INTERVAL 1 SECOND;\n        -> \'2004-12-31 23:59:59\'\nmysql> SELECT DATE_ADD(\'2000-12-31 23:59:59\',\n    ->                 INTERVAL 1 SECOND);\n        -> \'2001-01-01 00:00:00\'\nmysql> SELECT DATE_ADD(\'2010-12-31 23:59:59\',\n    ->                 INTERVAL 1 DAY);\n        -> \'2011-01-01 23:59:59\'\nmysql> SELECT DATE_ADD(\'2100-12-31 23:59:59\',\n    ->                 INTERVAL \'1:1\' MINUTE_SECOND);\n        -> \'2101-01-01 00:01:00\'\nmysql> SELECT DATE_SUB(\'2005-01-01 00:00:00\',\n    ->                 INTERVAL \'1 1:1:1\' DAY_SECOND);\n        -> \'2004-12-30 22:58:59\'\nmysql> SELECT DATE_ADD(\'1900-01-01 00:00:00\',\n    ->                 INTERVAL \'-1 10\' DAY_HOUR);\n        -> \'1899-12-30 14:00:00\'\nmysql> SELECT DATE_SUB(\'1998-01-02\', INTERVAL 31 DAY);\n        -> \'1997-12-02\'\nmysql> SELECT DATE_ADD(\'1992-12-31 23:59:59.000002\',\n    ->            INTERVAL \'1.999999\' SECOND_MICROSECOND);\n        -> \'1993-01-01 00:00:01.000001\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(372, 'CAST', 36, 'Syntax:\nCAST(expr AS type)\n\nThe CAST() function takes a value of one type and produce a value of\nanother type, similar to CONVERT(). See the description of CONVERT()\nfor more information.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/cast-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/cast-functions.html'),
	(373, 'SOUNDS LIKE', 36, 'Syntax:\nexpr1 SOUNDS LIKE expr2\n\nThis is the same as SOUNDEX(expr1) = SOUNDEX(expr2).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(374, 'PERIOD_DIFF', 31, 'Syntax:\nPERIOD_DIFF(P1,P2)\n\nReturns the number of months between periods P1 and P2. P1 and P2\nshould be in the format YYMM or YYYYMM. Note that the period arguments\nP1 and P2 are not date values.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT PERIOD_DIFF(200802,200703);\n        -> 11\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(375, 'LIKE', 36, 'Syntax:\nexpr LIKE pat [ESCAPE \'escape_char\']\n\nPattern matching using SQL simple regular expression comparison.\nReturns 1 (TRUE) or 0 (FALSE). If either expr or pat is NULL, the\nresult is NULL.\n\nThe pattern need not be a literal string. For example, it can be\nspecified as a string expression or table column.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-comparison-functions.html\n\n', 'mysql> SELECT \'David!\' LIKE \'David_\';\n        -> 1\nmysql> SELECT \'David!\' LIKE \'%D%v%\';\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-comparison-functions.html'),
	(376, 'MULTIPOINT', 24, 'MultiPoint(pt1,pt2,...)\n\nConstructs a WKB MultiPoint value using WKB Point arguments. If any\nargument is not a WKB Point, the return value is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions'),
	(377, '>>', 18, 'Syntax:\n>>\n\nShifts a longlong (BIGINT) number to the right.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html\n\n', 'mysql> SELECT 4 >> 2;\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html'),
	(378, 'FETCH', 23, 'Syntax:\nFETCH cursor_name INTO var_name [, var_name] ...\n\nThis statement fetches the next row (if a row exists) using the\nspecified open cursor, and advances the cursor pointer.\n\nIf no more rows are available, a No Data condition occurs with SQLSTATE\nvalue 02000. To detect this condition, you can set up a handler for it\n(or for a NOT FOUND condition). An example is shown in\nhttp://dev.mysql.com/doc/refman/6.0/en/cursors.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/fetch.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/fetch.html'),
	(379, 'AVG', 16, 'Syntax:\nAVG([DISTINCT] expr)\n\nReturns the average value of expr. The DISTINCT option can be used to\nreturn the average of the distinct values of expr.\n\nAVG() returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', 'mysql> SELECT student_name, AVG(test_score)\n    ->        FROM student\n    ->        GROUP BY student_name;\n', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(380, 'TRUE FALSE', 29, 'The constants TRUE and FALSE evaluate to 1 and 0, respectively. The\nconstant names can be written in any lettercase.\n\nmysql> SELECT TRUE, true, FALSE, false;\n        -> 1, 1, 0, 0\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/boolean-values.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/boolean-values.html'),
	(381, 'MBRWITHIN', 6, 'MBRWithin(g1,g2)\n\nReturns 1 or 0 to indicate whether the Minimum Bounding Rectangle of g1\nis within the Minimum Bounding Rectangle of g2. This tests the opposite\nrelationship as MBRContains().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html\n\n', 'mysql> SET @g1 = GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = GeomFromText(\'Polygon((0 0,0 5,5 5,5 0,0 0))\');\nmysql> SELECT MBRWithin(@g1,@g2), MBRWithin(@g2,@g1);\n+--------------------+--------------------+\n| MBRWithin(@g1,@g2) | MBRWithin(@g2,@g1) |\n+--------------------+--------------------+\n|                  1 |                  0 |\n+--------------------+--------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/relations-on-geometry-mbr.html'),
	(382, 'IN', 17, 'Syntax:\nexpr IN (value,...)\n\nReturns 1 if expr is equal to any of the values in the IN list, else\nreturns 0. If all values are constants, they are evaluated according to\nthe type of expr and sorted. The search for the item then is done using\na binary search. This means IN is very quick if the IN value list\nconsists entirely of constants. Otherwise, type conversion takes place\naccording to the rules described in\nhttp://dev.mysql.com/doc/refman/6.0/en/type-conversion.html, but\napplied to all the arguments.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 2 IN (0,3,5,7);\n        -> 0\nmysql> SELECT \'wefwf\' IN (\'wee\',\'wefwf\',\'weg\');\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(383, 'QUOTE', 36, 'Syntax:\nQUOTE(str)\n\nQuotes a string to produce a result that can be used as a properly\nescaped data value in an SQL statement. The string is returned enclosed\nby single quotes and with each instance of single quote ("\'"),\nbackslash ("\\"), ASCII NUL, and Control-Z preceded by a backslash. If\nthe argument is NULL, the return value is the word "NULL" without\nenclosing single quotes.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT QUOTE(\'Don\\\'t!\');\n        -> \'Don\\\'t!\'\nmysql> SELECT QUOTE(NULL);\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(384, 'SESSION_USER', 15, 'Syntax:\nSESSION_USER()\n\nSESSION_USER() is a synonym for USER().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(385, 'HELP COMMAND', 26, 'Syntax:\nmysql> help search_string\n\nIf you provide an argument to the help command, mysql uses it as a\nsearch string to access server-side help from the contents of the MySQL\nReference Manual. The proper operation of this command requires that\nthe help tables in the mysql database be initialized with help topic\ninformation (see\nhttp://dev.mysql.com/doc/refman/6.0/en/server-side-help-support.html).\n\nIf there is no match for the search string, the search fails:\n\nmysql> help me\n\nNothing found\nPlease try to run \'help contents\' for a list of all accessible topics\n\nUse help contents to see a list of the help categories:\n\nmysql> help contents\nYou asked for help about help category: "Contents"\nFor more information, type \'help <item>\', where <item> is one of the\nfollowing categories:\n   Account Management\n   Administration\n   Data Definition\n   Data Manipulation\n   Data Types\n   Functions\n   Functions and Modifiers for Use with GROUP BY\n   Geographic Features\n   Language Structure\n   Plugins\n   Storage Engines\n   Stored Routines\n   Table Maintenance\n   Transactions\n   Triggers\n\nIf the search string matches multiple items, mysql shows a list of\nmatching topics:\n\nmysql> help logs\nMany help items for your request exist.\nTo make a more specific request, please type \'help <item>\',\nwhere <item> is one of the following topics:\n   SHOW\n   SHOW BINARY LOGS\n   SHOW ENGINE\n   SHOW LOGS\n\nUse a topic as the search string to see the help entry for that topic:\n\nmysql> help show binary logs\nName: \'SHOW BINARY LOGS\'\nDescription:\nSyntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [purge-binary-logs], that shows how\nto determine which logs can be purged.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+\n| Log_name      | File_size |\n+---------------+-----------+\n| binlog.000015 |    724935 |\n| binlog.000016 |    733481 |\n+---------------+-----------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mysql-server-side-help.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/mysql-server-side-help.html'),
	(386, 'QUARTER', 31, 'Syntax:\nQUARTER(date)\n\nReturns the quarter of the year for date, in the range 1 to 4.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT QUARTER(\'2008-04-01\');\n        -> 2\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(387, 'POSITION', 36, 'Syntax:\nPOSITION(substr IN str)\n\nPOSITION(substr IN str) is a synonym for LOCATE(substr,str).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(388, 'SHOW CREATE FUNCTION', 26, 'Syntax:\nSHOW CREATE FUNCTION func_name\n\nThis statement is similar to SHOW CREATE PROCEDURE but for stored\nfunctions. See [HELP SHOW CREATE PROCEDURE].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-create-function.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-create-function.html'),
	(389, 'IS_USED_LOCK', 14, 'Syntax:\nIS_USED_LOCK(str)\n\nChecks whether the lock named str is in use (that is, locked). If so,\nit returns the connection identifier of the client that holds the lock.\nOtherwise, it returns NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(390, 'POLYFROMTEXT', 3, 'PolyFromText(wkt[,srid]), PolygonFromText(wkt[,srid])\n\nConstructs a POLYGON value using its WKT representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions'),
	(391, 'DES_ENCRYPT', 11, 'Syntax:\nDES_ENCRYPT(str[,{key_num|key_str}])\n\nEncrypts the string with the given key using the Triple-DES algorithm.\n\nThis function works only if MySQL has been configured with SSL support.\nSee http://dev.mysql.com/doc/refman/6.0/en/secure-connections.html.\n\nThe encryption key to use is chosen based on the second argument to\nDES_ENCRYPT(), if one was given. With no argument, the first key from\nthe DES key file is used. With a key_num argument, the given key number\n(0-9) from the DES key file is used. With a key_str argument, the given\nkey string is used to encrypt str.\n\nThe key file can be specified with the --des-key-file server option.\n\nThe return string is a binary string where the first character is\nCHAR(128 | key_num). If an error occurs, DES_ENCRYPT() returns NULL.\n\nThe 128 is added to make it easier to recognize an encrypted key. If\nyou use a string key, key_num is 127.\n\nThe string length for the result is given by this formula:\n\nnew_len = orig_len + (8 - (orig_len % 8)) + 1\n\nEach line in the DES key file has the following format:\n\nkey_num des_key_str\n\nEach key_num value must be a number in the range from 0 to 9. Lines in\nthe file may be in any order. des_key_str is the string that is used to\nencrypt the message. There should be at least one space between the\nnumber and the key. The first key is the default key that is used if\nyou do not specify any key argument to DES_ENCRYPT().\n\nYou can tell MySQL to read new key values from the key file with the\nFLUSH DES_KEY_FILE statement. This requires the RELOAD privilege.\n\nOne benefit of having a set of default keys is that it gives\napplications a way to check for the existence of encrypted column\nvalues, without giving the end user the right to decrypt those values.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'mysql> SELECT customer_address FROM customer_table \n     > WHERE crypted_credit_card = DES_ENCRYPT(\'credit_card_number\');\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(392, 'CEIL', 4, 'Syntax:\nCEIL(X)\n\nCEIL() is a synonym for CEILING().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(393, 'LENGTH', 36, 'Syntax:\nLENGTH(str)\n\nReturns the length of the string str, measured in bytes. A multi-byte\ncharacter counts as multiple bytes. This means that for a string\ncontaining five two-byte characters, LENGTH() returns 10, whereas\nCHAR_LENGTH() returns 5.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT LENGTH(\'text\');\n        -> 4\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(394, 'STR_TO_DATE', 31, 'Syntax:\nSTR_TO_DATE(str,format)\n\nThis is the inverse of the DATE_FORMAT() function. It takes a string\nstr and a format string format. STR_TO_DATE() returns a DATETIME value\nif the format string contains both date and time parts, or a DATE or\nTIME value if the string contains only date or time parts.\n\nThe date, time, or datetime values contained in str should be given in\nthe format indicated by format. For the specifiers that can be used in\nformat, see the DATE_FORMAT() function description. If str contains an\nillegal date, time, or datetime value, STR_TO_DATE() returns NULL. An\nillegal value also produces a warning.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(395, 'Y', 10, 'Y(p)\n\nReturns the Y-coordinate value for the point p as a double-precision\nnumber.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#point-property-functions\n\n', 'mysql> SET @pt = \'Point(56.7 53.34)\';\nmysql> SELECT Y(GeomFromText(@pt));\n+----------------------+\n| Y(GeomFromText(@pt)) |\n+----------------------+\n|                53.34 |\n+----------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#point-property-functions'),
	(396, 'WEIGHT_STRING', 36, 'Syntax:\nWEIGHT_STRING(str [AS {CHAR|BINARY}(N)] [LEVEL levels] [flags])\n\nlevels: N [ASC|DESC|REVERSE] [, N [ASC|DESC|REVERSE]] ...\n\nThis function returns the weight string for the input string. The\nreturn value is a binary string that represents the sorting and\ncomparison value of the string. It has these properties:\n\no If WEIGHT_STRING(str1) = WEIGHT_STRING(str2), then str1 = str2 (str1\n  and str2 are considered equal)\n\no If WEIGHT_STRING(str1) < WEIGHT_STRING(str2), then str1 < str2 (str1\n  sorts before str2)\n\nWEIGHT_STRING() can be used for testing and debugging of collations,\nespecially if you are adding a new collation. See\nhttp://dev.mysql.com/doc/refman/6.0/en/adding-collation.html.\n\nThe input string, str, is a string expression. If the input is a\nnon-binary (character) string such as a CHAR, VARCHAR, or TEXT value,\nthe return value contains the collation weights for the string. If the\ninput is a binary (byte) string such as a BINARY, VARBINARY, or BLOB\nvalue, the return value is the same as the input (the weight for each\nbyte in a binary string is the byte value). If the input is NULL,\nWEIGHT_STRING() returns NULL.\n\nExamples:\n\nmysql> SET @s = _latin1 \'AB\' COLLATE latin1_swedish_ci;\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| AB   | 4142    | 4142                   | \n+------+---------+------------------------+\n\nmysql> SET @s = _latin1 \'ab\' COLLATE latin1_swedish_ci;\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| ab   | 6162    | 4142                   | \n+------+---------+------------------------+\n\nmysql> SET @s = CAST(\'AB\' AS BINARY);\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| AB   | 4142    | 4142                   | \n+------+---------+------------------------+\n\nmysql> SET @s = CAST(\'ab\' AS BINARY);\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| ab   | 6162    | 6162                   | \n+------+---------+------------------------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(397, 'CHECKSUM TABLE', 20, 'Syntax:\nCHECKSUM TABLE tbl_name [, tbl_name] ... [ QUICK | EXTENDED ]\n\nCHECKSUM TABLE reports a table checksum. This statement requires the\nSELECT privilege for the table.\n\nWith QUICK, the live table checksum is reported if it is available, or\nNULL otherwise. This is very fast. A live checksum is enabled by\nspecifying the CHECKSUM=1 table option when you create the table;\ncurrently, this is supported only for MyISAM tables. See [HELP CREATE\nTABLE].\n\nWith EXTENDED, the entire table is read row by row and the checksum is\ncalculated. This can be very slow for large tables.\n\nIf neither QUICK nor EXTENDED is specified, MySQL returns a live\nchecksum if the table storage engine supports it and scans the table\notherwise.\n\nFor a non-existent table, CHECKSUM TABLE returns NULL and generates a\nwarning.\n\nThe checksum value depends on the table row format. If the row format\nchanges, the checksum also changes. For example, the storage format for\nVARCHAR changed between MySQL 4.1 and 5.0, so if a 4.1 table is\nupgraded to MySQL 5.0, the checksum value may change.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/checksum-table.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/checksum-table.html'),
	(398, 'NUMINTERIORRINGS', 2, 'NumInteriorRings(poly)\n\nReturns the number of interior rings in the Polygon value poly.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#polygon-property-functions\n\n', 'mysql> SET @poly =\n    -> \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT NumInteriorRings(GeomFromText(@poly));\n+---------------------------------------+\n| NumInteriorRings(GeomFromText(@poly)) |\n+---------------------------------------+\n|                                     1 |\n+---------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#polygon-property-functions'),
	(399, 'INTERIORRINGN', 2, 'InteriorRingN(poly,N)\n\nReturns the N-th interior ring for the Polygon value poly as a\nLineString. Rings are numbered beginning with 1.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#polygon-property-functions\n\n', 'mysql> SET @poly =\n    -> \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT AsText(InteriorRingN(GeomFromText(@poly),1));\n+----------------------------------------------+\n| AsText(InteriorRingN(GeomFromText(@poly),1)) |\n+----------------------------------------------+\n| LINESTRING(1 1,1 2,2 2,2 1,1 1)              |\n+----------------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#polygon-property-functions'),
	(400, 'UTC_TIME', 31, 'Syntax:\nUTC_TIME, UTC_TIME()\n\nReturns the current UTC time as a value in \'HH:MM:SS\' or HHMMSS.uuuuuu\nformat, depending on whether the function is used in a string or\nnumeric context.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT UTC_TIME(), UTC_TIME() + 0;\n        -> \'18:07:53\', 180753.000000\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(401, 'DROP FUNCTION', 38, 'The DROP FUNCTION statement is used to drop stored functions and\nuser-defined functions (UDFs):\n\no For information about dropping stored functions, see [HELP DROP\n  PROCEDURE].\n\no For information about dropping user-defined functions, see [HELP DROP\n  FUNCTION UDF].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-function.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-function.html'),
	(402, 'PURGE BACKUP LOGS', 19, 'Syntax:\nPURGE BACKUP LOGS\n    ] TO id | BEFORE datetime_expr ]\n\nThe PURGE BACKUP LOGS statement removes rows from the MySQL Backup log\ntables in the mysql database, backup_history and backup_progress (see\nhttp://dev.mysql.com/doc/refman/6.0/en/backup-database-restore-monitori\nng.html). This statement requires the SUPER privilege.\n\nWith no TO or BEFORE clause, the statement deletes all rows in the log\ntables. With a TO clause, the statement deletes rows with a backup_id\ncolumn value less than the id value. With a BEFORE clause, the\nstatement deletes rows with a start_time column value less than the\ndatetime_expr value. The datetime_expr argument should evaluate to a\nDATETIME value (a value in \'YYYY-MM-DD hh:mm:ss\' format).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/purge-backup-logs.html\n\n', 'PURGE BACKUP LOGS TO 143;\nPURGE BACKUP LOGS BEFORE \'2008-10-31 14:32:19\';\n', 'http://dev.mysql.com/doc/refman/6.0/en/purge-backup-logs.html'),
	(403, 'ALTER EVENT', 38, 'Syntax:\nALTER\n    [DEFINER = { user | CURRENT_USER }]\n    EVENT event_name\n    [ON SCHEDULE schedule]\n    [ON COMPLETION [NOT] PRESERVE]\n    [RENAME TO new_event_name]\n    [ENABLE | DISABLE | DISABLE ON SLAVE]\n    [COMMENT \'comment\']\n    [DO sql_statement]\n\nThe ALTER EVENT statement is used to change one or more of the\ncharacteristics of an existing event without the need to drop and\nrecreate it. The syntax for each of the DEFINER, ON SCHEDULE, ON\nCOMPLETION, COMMENT, ENABLE / DISABLE, and DO clauses is exactly the\nsame as when used with CREATE EVENT. (See [HELP CREATE EVENT].)\n\nAny user can alter an event defined on a database for which that user\nhas the EVENT privilege. When a user executes a successful ALTER EVENT\nstatement, that user becomes the definer for the affected event.\n\nALTER EVENT works only with an existing event:\n\nmysql> ALTER EVENT no_such_event \n     >     ON SCHEDULE \n     >       EVERY \'2:3\' DAY_HOUR;\nERROR 1517 (HY000): Unknown event \'no_such_event\'\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/alter-event.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/alter-event.html'),
	(404, 'STDDEV', 16, 'Syntax:\nSTDDEV(expr)\n\nReturns the population standard deviation of expr. This function is\nprovided for compatibility with Oracle. The standard SQL function\nSTDDEV_POP() can be used instead.\n\nThis function returns NULL if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(405, 'DATE_SUB', 31, 'Syntax:\nDATE_SUB(date,INTERVAL expr unit)\n\nSee the description for DATE_ADD().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(406, 'PERIOD_ADD', 31, 'Syntax:\nPERIOD_ADD(P,N)\n\nAdds N months to period P (in the format YYMM or YYYYMM). Returns a\nvalue in the format YYYYMM. Note that the period argument P is not a\ndate value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT PERIOD_ADD(200801,2);\n        -> 200803\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(407, '|', 18, 'Syntax:\n|\n\nBitwise OR:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html\n\n', 'mysql> SELECT 29 | 15;\n        -> 31\n', 'http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html'),
	(408, 'GEOMFROMTEXT', 3, 'GeomFromText(wkt[,srid]), GeometryFromText(wkt[,srid])\n\nConstructs a geometry value of any type using its WKT representation\nand SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions'),
	(409, 'UUID_SHORT', 14, 'Syntax:\nUUID_SHORT()\n\nReturns a "short" universal identifier as a 64-bit unsigned integer\n(rather than a string-form 128-bit identifier as returned by the UUID()\nfunction).\n\nThe value of UUID_SHORT() is guaranteed to be unique if the following\nconditions hold:\n\no The server_id of the current host is unique among your set of master\n  and slave servers\n\no server_id is between 0 and 255\n\no You don\'t set back your system time for your server between mysqld\n  restarts\n\no You do not invoke UUID_SHORT() on average more than 16 million times\n  per second between mysqld restarts\n\nThe UUID_SHORT() return value is constructed this way:\n\n  (server_id & 255) << 56\n+ (server_startup_time_in_seconds << 24)\n+ incremented_variable++;\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', 'mysql> SELECT UUID_SHORT();\n        -> 92395783831158784 \n', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(410, 'RIGHT', 36, 'Syntax:\nRIGHT(str,len)\n\nReturns the rightmost len characters from the string str, or NULL if\nany argument is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT RIGHT(\'foobarbar\', 4);\n        -> \'rbar\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(411, 'DATEDIFF', 31, 'Syntax:\nDATEDIFF(expr1,expr2)\n\nDATEDIFF() returns expr1 - expr2 expressed as a value in days from one\ndate to the other. expr1 and expr2 are date or date-and-time\nexpressions. Only the date parts of the values are used in the\ncalculation.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT DATEDIFF(\'2007-12-31 23:59:59\',\'2007-12-30\');\n        -> 1\nmysql> SELECT DATEDIFF(\'2010-11-30 23:59:59\',\'2010-12-31\');\n        -> -31\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(412, 'DROP PROCEDURE', 38, 'Syntax:\nDROP {PROCEDURE | FUNCTION} [IF EXISTS] sp_name\n\nThis statement is used to drop a stored procedure or function. That is,\nthe specified routine is removed from the server. You must have the\nALTER ROUTINE privilege for the routine. (That privilege is granted\nautomatically to the routine creator.)\n\nThe IF EXISTS clause is a MySQL extension. It prevents an error from\noccurring if the procedure or function does not exist. A warning is\nproduced that can be viewed with SHOW WARNINGS.\n\nPrior to MySQL 6.0.10, DROP PROCEDURE IF EXISTS and DROP FUNCTION IF\nEXISTS were not written to the binary log if the stored procedure or\nfunction named in the DROP statement did not exist on the master.\n(Bug#13684 (http://bugs.mysql.com/13684))\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/drop-procedure.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/drop-procedure.html'),
	(413, 'CHECK TABLE', 20, 'Syntax:\nCHECK TABLE tbl_name [, tbl_name] ... [option] ...\n\noption = {FOR UPGRADE | QUICK | FAST | MEDIUM | EXTENDED | CHANGED}\n\nCHECK TABLE checks a table or tables for errors. CHECK TABLE works for\nMyISAM, InnoDB, ARCHIVE, and CSV tables. For MyISAM tables, the key\nstatistics are updated as well.\n\nTo check a table, you must have some privilege for it.\n\nCHECK TABLE can also check views for problems, such as tables that are\nreferenced in the view definition that no longer exist.\n\nBeginning with MySQL 6.0.6, CHECK TABLE is also supported for\npartitioned tables. Also beginning with MySQL 6.0.6, you can use ALTER\nTABLE ... CHECK PARTITION to check one or more partitions; for more\ninformation, see [HELP ALTER TABLE], and\nhttp://dev.mysql.com/doc/refman/6.0/en/partitioning-maintenance.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/check-table.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/check-table.html'),
	(414, 'BIN', 36, 'Syntax:\nBIN(N)\n\nReturns a string representation of the binary value of N, where N is a\nlonglong (BIGINT) number. This is equivalent to CONV(N,10,2). Returns\nNULL if N is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT BIN(12);\n        -> \'1100\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(415, 'INSTALL PLUGIN', 5, 'Syntax:\nINSTALL PLUGIN plugin_name SONAME \'plugin_library\'\n\nThis statement installs a plugin.\n\nplugin_name is the name of the plugin as defined in the plugin\ndeclaration structure contained in the library file. Plugin names are\nnot case sensitive. For maximal compatibility, plugin names should be\nlimited to ASCII letters, digits, and underscore, because they are used\nin C source files, shell command lines, M4 and Bourne shell scripts,\nand SQL environments.\n\nplugin_library is the name of the shared library that contains the\nplugin code. The name includes the file name extension (for example,\nlibmyplugin.so or libmyplugin.dylib).\n\nThe shared library must be located in the plugin directory (that is,\nthe directory named by the plugin_dir system variable). The library\nmust be in the plugin directory itself, not in a subdirectory. By\ndefault, plugin_dir is plugin directory under the directory named by\nthe pkglibdir configuration variable, but it can be changed by setting\nthe value of plugin_dir at server startup. For example, set its value\nin a my.cnf file:\n\n[mysqld]\nplugin_dir=/path/to/plugin/directory\n\nIf the value of plugin_dir is a relative path name, it is taken to be\nrelative to the MySQL base directory (the value of the basedir system\nvariable).\n\nINSTALL PLUGIN adds a line to the mysql.plugin table that describes the\nplugin. This table contains the plugin name and library file name.\n\nINSTALL PLUGIN also loads and initializes the plugin code to make the\nplugin available for use. A plugin is initialized by executing its\ninitialization function, which handles any setup that the plugin must\nperform before it can be used.\n\nTo use INSTALL PLUGIN, you must have the INSERT privilege for the\nmysql.plugin table.\n\nAt server startup, the server loads and initializes any plugin that is\nlisted in the mysql.plugin table. This means that a plugin is installed\nwith INSTALL PLUGIN only once, not every time the server starts. Plugin\nloading at startup does not occur if the server is started with the\n--skip-grant-tables option.\n\nWhen the server shuts down, it executes the deinitialization function\nfor each plugin that is loaded so that the plugin has a change to\nperform any final cleanup.\n\nIf you need to load plugins for a single server startup when the\n--skip-grant-tables option is given (which tells the server not to read\nsystem tables), use the --plugin-load option. See\nhttp://dev.mysql.com/doc/refman/6.0/en/server-options.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/install-plugin.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/install-plugin.html'),
	(416, 'DECLARE CURSOR', 23, 'Syntax:\nDECLARE cursor_name CURSOR FOR select_statement\n\nThis statement declares a cursor. Multiple cursors may be declared in a\nstored program, but each cursor in a given block must have a unique\nname.\n\nThe SELECT statement cannot have an INTO clause.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/declare-cursor.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/declare-cursor.html'),
	(417, 'LOAD DATA', 27, 'Syntax:\nLOAD DATA [LOW_PRIORITY | CONCURRENT] [LOCAL] INFILE \'file_name\'\n    [REPLACE | IGNORE]\n    INTO TABLE tbl_name\n    [CHARACTER SET charset_name]\n    [{FIELDS | COLUMNS}\n        [TERMINATED BY \'string\']\n        [[OPTIONALLY] ENCLOSED BY \'char\']\n        [ESCAPED BY \'char\']\n    ]\n    [LINES\n        [STARTING BY \'string\']\n        [TERMINATED BY \'string\']\n    ]\n    [IGNORE number LINES]\n    [(col_name_or_user_var,...)]\n    [SET col_name = expr,...]\n\nThe LOAD DATA INFILE statement reads rows from a text file into a table\nat a very high speed. The file name must be given as a literal string.\n\nLOAD DATA INFILE is the complement of SELECT ... INTO OUTFILE. (See\nhttp://dev.mysql.com/doc/refman/6.0/en/select.html.) To write data from\na table to a file, use SELECT ... INTO OUTFILE. To read the file back\ninto a table, use LOAD DATA INFILE. The syntax of the FIELDS and LINES\nclauses is the same for both statements. Both clauses are optional, but\nFIELDS must precede LINES if both are specified.\n\nFor more information about the efficiency of INSERT versus LOAD DATA\nINFILE and speeding up LOAD DATA INFILE, see\nhttp://dev.mysql.com/doc/refman/6.0/en/insert-speed.html.\n\nThe character set indicated by the character_set_database system\nvariable is used to interpret the information in the file. SET NAMES\nand the setting of character_set_client do not affect interpretation of\ninput. If the contents of the input file use a character set that\ndiffers from the default, it is usually preferable to specify the\ncharacter set of the file by using the CHARACTER SET clause.\n\nLOAD DATA INFILE interprets all fields in the file as having the same\ncharacter set, regardless of the data types of the columns into which\nfield values are loaded. For proper interpretation of file contents,\nyou must ensure that it was written with the correct character set. For\nexample, if you write a data file with mysqldump -T or by issuing a\nSELECT ... INTO OUTFILE statement in mysql, be sure to use a\n--default-character-set option with mysqldump or mysql so that output\nis written in the character set to be used when the file is loaded with\nLOAD DATA INFILE.\n\nNote that it is currently not possible to load data files that use the\nucs2, utf16, or utf32 character set.\n\nThe character_set_filesystem system variable controls the\ninterpretation of the file name.\n\nYou can also load data files by using the mysqlimport utility; it\noperates by sending a LOAD DATA INFILE statement to the server. The\n--local option causes mysqlimport to read data files from the client\nhost. You can specify the --compress option to get better performance\nover slow networks if the client and server support the compressed\nprotocol. See http://dev.mysql.com/doc/refman/6.0/en/mysqlimport.html.\n\nIf you use LOW_PRIORITY, execution of the LOAD DATA statement is\ndelayed until no other clients are reading from the table. This affects\nonly storage engines that use only table-level locking (MyISAM, MEMORY,\nMERGE).\n\nIf you specify CONCURRENT with a MyISAM table that satisfies the\ncondition for concurrent inserts (that is, it contains no free blocks\nin the middle), other threads can retrieve data from the table while\nLOAD DATA is executing. Using this option affects the performance of\nLOAD DATA a bit, even if no other thread is using the table at the same\ntime.\n\nCONCURRENT is not replicated when using statement-based replication;\nhowever, it is replicated when using row-based replication. See\nhttp://dev.mysql.com/doc/refman/6.0/en/replication-features-load-data.h\ntml, for more information.\n\n*Note*: Prior to MySQL 6.0.4, LOAD DATA performed very poorly when\nimporting into partitioned tables. The statement now uses buffering to\nimprove performance; however, the buffer uses 130 KB memory per\npartition to achieve this. (Bug#26527 (http://bugs.mysql.com/26527))\n\nThe LOCAL keyword, if specified, is interpreted with respect to the\nclient end of the connection:\n\no If LOCAL is specified, the file is read by the client program on the\n  client host and sent to the server. The file can be given as a full\n  path name to specify its exact location. If given as a relative path\n  name, the name is interpreted relative to the directory in which the\n  client program was started.\n\no If LOCAL is not specified, the file must be located on the server\n  host and is read directly by the server. The server uses the\n  following rules to locate the file:\n\n  o If the file name is an absolute path name, the server uses it as\n    given.\n\n  o If the file name is a relative path name with one or more leading\n    components, the server searches for the file relative to the\n    server\'s data directory.\n\n  o If a file name with no leading components is given, the server\n    looks for the file in the database directory of the default\n    database.\n\nNote that, in the non-LOCAL case, these rules mean that a file named as\n./myfile.txt is read from the server\'s data directory, whereas the file\nnamed as myfile.txt is read from the database directory of the default\ndatabase. For example, if db1 is the default database, the following\nLOAD DATA statement reads the file data.txt from the database directory\nfor db1, even though the statement explicitly loads the file into a\ntable in the db2 database:\n\nLOAD DATA INFILE \'data.txt\' INTO TABLE db2.my_table;\n\nWindows path names are specified using forward slashes rather than\nbackslashes. If you do use backslashes, you must double them.\n\nFor security reasons, when reading text files located on the server,\nthe files must either reside in the database directory or be readable\nby all. Also, to use LOAD DATA INFILE on server files, you must have\nthe FILE privilege. See\nhttp://dev.mysql.com/doc/refman/6.0/en/privileges-provided.html. For\nnon-LOCAL load operations, if the secure_file_priv system variable is\nset to a non-empty directory name, the file to be loaded must be\nlocated in that directory.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/load-data.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/load-data.html'),
	(418, 'MULTILINESTRING', 24, 'MultiLineString(ls1,ls2,...)\n\nConstructs a WKB MultiLineString value using WKB LineString arguments.\nIf any argument is not a WKB LineString, the return value is NULL.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-mysql-specific-functions'),
	(419, 'LOCALTIME', 31, 'Syntax:\nLOCALTIME, LOCALTIME()\n\nLOCALTIME and LOCALTIME() are synonyms for NOW().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(420, 'MPOINTFROMTEXT', 3, 'MPointFromText(wkt[,srid]), MultiPointFromText(wkt[,srid])\n\nConstructs a MULTIPOINT value using its WKT representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkt-functions'),
	(421, 'BLOB', 22, 'BLOB[(M)]\n\nA BLOB column with a maximum length of 65,535 (216 - 1) bytes. Each\nBLOB value is stored using a two-byte length prefix that indicates the\nnumber of bytes in the value.\n\nAn optional length M can be given for this type. If this is done, MySQL\ncreates the column as the smallest BLOB type large enough to hold\nvalues M bytes long.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(422, 'SHA1', 11, 'Syntax:\nSHA1(str), SHA(str)\n\nCalculates an SHA-1 160-bit checksum for the string, as described in\nRFC 3174 (Secure Hash Algorithm). The value is returned as a binary\nstring of 40 hex digits, or NULL if the argument was NULL. One of the\npossible uses for this function is as a hash key. You can also use it\nas a cryptographic function for storing passwords. SHA() is synonymous\nwith SHA1().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'mysql> SELECT SHA1(\'abc\');\n        -> \'a9993e364706816aba3e25717850c26c9cd0d89d\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(423, 'SUBSTR', 36, 'Syntax:\nSUBSTR(str,pos), SUBSTR(str FROM pos), SUBSTR(str,pos,len), SUBSTR(str\nFROM pos FOR len)\n\nSUBSTR() is a synonym for SUBSTRING().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(424, 'PASSWORD', 11, 'Syntax:\nPASSWORD(str)\n\nCalculates and returns a password string from the plaintext password\nstr and returns a binary string, or NULL if the argument was NULL. This\nis the function that is used for encrypting MySQL passwords for storage\nin the Password column of the user grant table.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'mysql> SELECT PASSWORD(\'badpwd\');\n        -> \'*AAB3E285149C0135D51A520E1940DD3263DC008C\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(425, 'CHAR', 22, '[NATIONAL] CHAR[(M)] [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA fixed-length string that is always right-padded with spaces to the\nspecified length when stored. M represents the column length in\ncharacters. The range of M is 0 to 255. If M is omitted, the length is\n1.\n\n*Note*: Trailing spaces are removed when CHAR values are retrieved\nunless the PAD_CHAR_TO_FULL_LENGTH SQL mode is enabled.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(426, 'UTC_DATE', 31, 'Syntax:\nUTC_DATE, UTC_DATE()\n\nReturns the current UTC date as a value in \'YYYY-MM-DD\' or YYYYMMDD\nformat, depending on whether the function is used in a string or\nnumeric context.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT UTC_DATE(), UTC_DATE() + 0;\n        -> \'2003-08-14\', 20030814\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(427, 'DIMENSION', 35, 'Dimension(g)\n\nReturns the inherent dimension of the geometry value g. The result can\nbe -1, 0, 1, or 2. The meaning of these values is given in\nhttp://dev.mysql.com/doc/refman/6.0/en/gis-class-geometry.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions\n\n', 'mysql> SELECT Dimension(GeomFromText(\'LineString(1 1,2 2)\'));\n+------------------------------------------------+\n| Dimension(GeomFromText(\'LineString(1 1,2 2)\')) |\n+------------------------------------------------+\n|                                              1 |\n+------------------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions'),
	(428, 'COUNT DISTINCT', 16, 'Syntax:\nCOUNT(DISTINCT expr,[expr...])\n\nReturns a count of the number of different non-NULL values.\n\nCOUNT(DISTINCT) returns 0 if there were no matching rows.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html\n\n', 'mysql> SELECT COUNT(DISTINCT results) FROM student;\n', 'http://dev.mysql.com/doc/refman/6.0/en/group-by-functions.html'),
	(429, 'BIT', 22, 'BIT[(M)]\n\nA bit-field type. M indicates the number of bits per value, from 1 to\n64. The default is 1 if M is omitted.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(430, 'EQUALS', 30, 'Equals(g1,g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially equal to g2.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/functions-that-test-spatial-relationships-between-geometries.html'),
	(431, 'SHOW CREATE VIEW', 26, 'Syntax:\nSHOW CREATE VIEW view_name\n\nThis statement shows a CREATE VIEW statement that creates the given\nview.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-create-view.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-create-view.html'),
	(432, 'INTERVAL', 17, 'Syntax:\nINTERVAL(N,N1,N2,N3,...)\n\nReturns 0 if N < N1, 1 if N < N2 and so on or -1 if N is NULL. All\narguments are treated as integers. It is required that N1 < N2 < N3 <\n... < Nn for this function to work correctly. This is because a binary\nsearch is used (very fast).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT INTERVAL(23, 1, 15, 17, 30, 44, 200);\n        -> 3\nmysql> SELECT INTERVAL(10, 1, 10, 100, 1000);\n        -> 2\nmysql> SELECT INTERVAL(22, 23, 30, 44, 200);\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(433, 'FROM_DAYS', 31, 'Syntax:\nFROM_DAYS(N)\n\nGiven a day number N, returns a DATE value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT FROM_DAYS(730669);\n        -> \'2007-07-03\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(434, 'ALTER PROCEDURE', 38, 'Syntax:\nALTER PROCEDURE proc_name [characteristic ...]\n\ncharacteristic:\n    { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n  | COMMENT \'string\'\n\nThis statement can be used to change the characteristics of a stored\nprocedure. More than one change may be specified in an ALTER PROCEDURE\nstatement. However, you cannot change the parameters or body of a\nstored procedure using this statement; to make such changes, you must\ndrop and re-create the procedure using DROP PROCEDURE and CREATE\nPROCEDURE.\n\nYou must have the ALTER ROUTINE privilege for the procedure. (That\nprivilege is granted automatically to the procedure creator.)\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/alter-procedure.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/alter-procedure.html'),
	(435, 'BIT_COUNT', 18, 'Syntax:\nBIT_COUNT(N)\n\nReturns the number of bits that are set in the argument N.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html\n\n', 'mysql> SELECT BIT_COUNT(29), BIT_COUNT(b\'101010\');\n        -> 4, 3\n', 'http://dev.mysql.com/doc/refman/6.0/en/bit-functions.html'),
	(436, 'OCTET_LENGTH', 36, 'Syntax:\nOCTET_LENGTH(str)\n\nOCTET_LENGTH() is a synonym for LENGTH().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(437, 'UTC_TIMESTAMP', 31, 'Syntax:\nUTC_TIMESTAMP, UTC_TIMESTAMP()\n\nReturns the current UTC date and time as a value in \'YYYY-MM-DD\nHH:MM:SS\' or YYYYMMDDHHMMSS.uuuuuu format, depending on whether the\nfunction is used in a string or numeric context.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT UTC_TIMESTAMP(), UTC_TIMESTAMP() + 0;\n        -> \'2003-08-14 18:08:04\', 20030814180804.000000\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(438, 'AES_ENCRYPT', 11, 'Syntax:\nAES_ENCRYPT(str,key_str)\n\nAES_ENCRYPT() and AES_DECRYPT() allow encryption and decryption of data\nusing the official AES (Advanced Encryption Standard) algorithm,\npreviously known as "Rijndael." Encoding with a 128-bit key length is\nused, but you can extend it up to 256 bits by modifying the source. We\nchose 128 bits because it is much faster and it is secure enough for\nmost purposes.\n\nAES_ENCRYPT() encrypts a string and returns a binary string.\nAES_DECRYPT() decrypts the encrypted string and returns the original\nstring. The input arguments may be any length. If either argument is\nNULL, the result of this function is also NULL.\n\nBecause AES is a block-level algorithm, padding is used to encode\nuneven length strings and so the result string length may be calculated\nusing this formula:\n\n16 x (trunc(string_length / 16) + 1)\n\nIf AES_DECRYPT() detects invalid data or incorrect padding, it returns\nNULL. However, it is possible for AES_DECRYPT() to return a non-NULL\nvalue (possibly garbage) if the input data or the key is invalid.\n\nYou can use the AES functions to store data in an encrypted form by\nmodifying your queries:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', 'INSERT INTO t VALUES (1,AES_ENCRYPT(\'text\',\'password\'));\n', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(439, '+', 4, 'Syntax:\n+\n\nAddition:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html\n\n', 'mysql> SELECT 3+5;\n        -> 8\n', 'http://dev.mysql.com/doc/refman/6.0/en/arithmetic-functions.html'),
	(440, 'INET_NTOA', 14, 'Syntax:\nINET_NTOA(expr)\n\nGiven a numeric network address in network byte order (4 or 8 byte),\nreturns the dotted-quad representation of the address as a string.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html\n\n', 'mysql> SELECT INET_NTOA(3520061480);\n        -> \'209.207.224.40\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/miscellaneous-functions.html'),
	(441, 'ACOS', 4, 'Syntax:\nACOS(X)\n\nReturns the arc cosine of X, that is, the value whose cosine is X.\nReturns NULL if X is not in the range -1 to 1.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT ACOS(1);\n        -> 0\nmysql> SELECT ACOS(1.0001);\n        -> NULL\nmysql> SELECT ACOS(0);\n        -> 1.5707963267949\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(442, 'ISOLATION', 8, 'Syntax:\nSET [GLOBAL | SESSION] TRANSACTION ISOLATION LEVEL\n  {\n       READ UNCOMMITTED\n     | READ COMMITTED\n     | REPEATABLE READ\n     | SERIALIZABLE\n   }\n\nThis statement sets the transaction isolation level globally, for the\ncurrent session, or for the next transaction:\n\no With the GLOBAL keyword, the statement sets the default transaction\n  level globally for all subsequent sessions. Existing sessions are\n  unaffected.\n\no With the SESSION keyword, the statement sets the default transaction\n  level for all subsequent transactions performed within the current\n  session.\n\no Without any SESSION or GLOBAL keyword, the statement sets the\n  isolation level for the next (not started) transaction performed\n  within the current session.\n\nA change to the global default isolation level requires the SUPER\nprivilege. Any session is free to change its session isolation level\n(even in the middle of a transaction), or the isolation level for its\nnext transaction.\n\nTo set the global default isolation level at server startup, use the\n--transaction-isolation=level option to mysqld on the command line or\nin an option file. Values of level for this option use dashes rather\nthan spaces, so the allowable values are READ-UNCOMMITTED,\nREAD-COMMITTED, REPEATABLE-READ, or SERIALIZABLE. For example, to set\nthe default isolation level to REPEATABLE READ, use these lines in the\n[mysqld] section of an option file:\n\n[mysqld]\ntransaction-isolation = REPEATABLE-READ\n\nTo determine the global and session transaction isolation levels at\nruntime, check the value of the tx_isolation system variable:\n\nSELECT @@GLOBAL.tx_isolation, @@tx_isolation;\n\nInnoDB supports each of the translation isolation levels described here\nusing different locking strategies. The default level is REPEATABLE\nREAD. For additional information about InnoDB record-level locks and\nhow it uses them to execute various types of statements, see\nhttp://dev.mysql.com/doc/refman/6.0/en/innodb-record-level-locks.html,\nand http://dev.mysql.com/doc/refman/6.0/en/innodb-locks-set.html.\n\n*Note*: In MySQL 6.0, if the READ COMMITTED isolation level is used or\nthe innodb_locks_unsafe_for_binlog system variable is enabled, there is\nno InnoDB gap locking except for foreign-key constraint checking and\nduplicate-key checking. Also, record locks for non-matching rows are\nreleased after MySQL has evaluated the WHERE condition. If you use READ\nCOMMITTED or enable innodb_locks_unsafe_for_binlog, you must use\nrow-based binary logging.\n\nThe following list describes how MySQL supports the different\ntransaction levels:\n\no READ UNCOMMITTED\n\n  SELECT statements are performed in a non-locking fashion, but a\n  possible earlier version of a row might be used. Thus, using this\n  isolation level, such reads are not consistent. This is also called a\n  "dirty read." Otherwise, this isolation level works like READ\n  COMMITTED.\n\no READ COMMITTED\n\n  A somewhat Oracle-like isolation level with respect to consistent\n  (non-locking) reads: Each consistent read, even within the same\n  transaction, sets and reads its own fresh snapshot. See\n  http://dev.mysql.com/doc/refman/6.0/en/innodb-consistent-read.html.\n\n  For locking reads (SELECT with FOR UPDATE or LOCK IN SHARE MODE),\n  InnoDB locks only index records, not the gaps before them, and thus\n  allows the free insertion of new records next to locked records. For\n  UPDATE and DELETE statements, locking depends on whether the\n  statement uses a unique index with a unique search condition (such as\n  WHERE id = 100), or a range-type search condition (such as WHERE id >\n  100). For a unique index with a unique search condition, InnoDB locks\n  only the index record found, not the gap before it. For range-type\n  searches, InnoDB locks the index range scanned, using gap locks or\n  next-key (gap plus index-record) locks to block insertions by other\n  sessions into the gaps covered by the range. This is necessary\n  because "phantom rows" must be blocked for MySQL replication and\n  recovery to work.\n\no REPEATABLE READ\n\n  This is the default isolation level for InnoDB. For consistent reads,\n  there is an important difference from the READ COMMITTED isolation\n  level: All consistent reads within the same transaction read the\n  snapshot established by the first read. This convention means that if\n  you issue several plain (non-locking) SELECT statements within the\n  same transaction, these SELECT statements are consistent also with\n  respect to each other. See\n  http://dev.mysql.com/doc/refman/6.0/en/innodb-consistent-read.html.\n\n  For locking reads (SELECT with FOR UPDATE or LOCK IN SHARE MODE),\n  UPDATE, and DELETE statements, locking depends on whether the\n  statement uses a unique index with a unique search condition, or a\n  range-type search condition. For a unique index with a unique search\n  condition, InnoDB locks only the index record found, not the gap\n  before it. For other search conditions, InnoDB locks the index range\n  scanned, using gap locks or next-key (gap plus index-record) locks to\n  block insertions by other sessions into the gaps covered by the\n  range.\n\no SERIALIZABLE\n\n  This level is like REPEATABLE READ, but InnoDB implicitly converts\n  all plain SELECT statements to SELECT ... LOCK IN SHARE MODE if\n  autocommit is disabled. If autocommit is enabled, the SELECT is its\n  own transaction. It therefore is known to be read only and can be\n  serialized if performed as a consistent (non-locking) read and need\n  not block for other transactions. (This means that to force a plain\n  SELECT to block if other transactions have modified the selected\n  rows, you should disable autocommit.)\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/set-transaction.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/set-transaction.html'),
	(443, 'CEILING', 4, 'Syntax:\nCEILING(X)\n\nReturns the smallest integer value not less than X.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT CEILING(1.23);\n        -> 2\nmysql> SELECT CEILING(-1.23);\n        -> -1\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(444, 'SIN', 4, 'Syntax:\nSIN(X)\n\nReturns the sine of X, where X is given in radians.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT SIN(PI());\n        -> 1.2246063538224e-16\nmysql> SELECT ROUND(SIN(PI()));\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(445, 'DAYOFWEEK', 31, 'Syntax:\nDAYOFWEEK(date)\n\nReturns the weekday index for date (1 = Sunday, 2 = Monday, ..., 7 =\nSaturday). These index values correspond to the ODBC standard.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT DAYOFWEEK(\'2007-02-03\');\n        -> 7\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(446, 'SHOW PROCESSLIST', 26, 'Syntax:\nSHOW [FULL] PROCESSLIST\n\nSHOW PROCESSLIST shows you which threads are running. You can also get\nthis information from the INFORMATION_SCHEMA PROCESSLIST table or the\nmysqladmin processlist command. If you have the PROCESS privilege, you\ncan see all threads. Otherwise, you can see only your own threads (that\nis, threads associated with the MySQL account that you are using). If\nyou do not use the FULL keyword, only the first 100 characters of each\nstatement are shown in the Info field.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-processlist.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-processlist.html'),
	(447, 'LINEFROMWKB', 32, 'LineFromWKB(wkb[,srid]), LineStringFromWKB(wkb[,srid])\n\nConstructs a LINESTRING value using its WKB representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions'),
	(448, 'GEOMETRYTYPE', 35, 'GeometryType(g)\n\nReturns as a string the name of the geometry type of which the geometry\ninstance g is a member. The name corresponds to one of the instantiable\nGeometry subclasses.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions\n\n', 'mysql> SELECT GeometryType(GeomFromText(\'POINT(1 1)\'));\n+------------------------------------------+\n| GeometryType(GeomFromText(\'POINT(1 1)\')) |\n+------------------------------------------+\n| POINT                                    |\n+------------------------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#general-geometry-property-functions'),
	(449, 'CREATE VIEW', 38, 'Syntax:\nCREATE\n    [OR REPLACE]\n    [ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]\n    [DEFINER = { user | CURRENT_USER }]\n    [SQL SECURITY { DEFINER | INVOKER }]\n    VIEW view_name [(column_list)]\n    AS select_statement\n    [WITH [CASCADED | LOCAL] CHECK OPTION]\n\nThe CREATE VIEW statement creates a new view, or replaces an existing\none if the OR REPLACE clause is given. If the view does not exist,\nCREATE OR REPLACE VIEW is the same as CREATE VIEW. If the view does\nexist, CREATE OR REPLACE VIEW is the same as ALTER VIEW.\n\nThe select_statement is a SELECT statement that provides the definition\nof the view. (When you select from the view, you select in effect using\nthe SELECT statement.) select_statement can select from base tables or\nother views.\n\nThe view definition is "frozen" at creation time, so changes to the\nunderlying tables afterward do not affect the view definition. For\nexample, if a view is defined as SELECT * on a table, new columns added\nto the table later do not become part of the view.\n\nThe ALGORITHM clause affects how MySQL processes the view. The DEFINER\nand SQL SECURITY clauses specify the security context to be used when\nchecking access privileges at view invocation time. The WITH CHECK\nOPTION clause can be given to constrain inserts or updates to rows in\ntables referenced by the view. These clauses are described later in\nthis section.\n\nThe CREATE VIEW statement requires the CREATE VIEW privilege for the\nview, and some privilege for each column selected by the SELECT\nstatement. For columns used elsewhere in the SELECT statement you must\nhave the SELECT privilege. If the OR REPLACE clause is present, you\nmust also have the DROP privilege for the view.\n\nA view belongs to a database. By default, a new view is created in the\ndefault database. To create the view explicitly in a given database,\nspecify the name as db_name.view_name when you create it.\n\nmysql> CREATE VIEW test.v AS SELECT * FROM t;\n\nBase tables and views share the same namespace within a database, so a\ndatabase cannot contain a base table and a view that have the same\nname.\n\nViews must have unique column names with no duplicates, just like base\ntables. By default, the names of the columns retrieved by the SELECT\nstatement are used for the view column names. To define explicit names\nfor the view columns, the optional column_list clause can be given as a\nlist of comma-separated identifiers. The number of names in column_list\nmust be the same as the number of columns retrieved by the SELECT\nstatement.\n\n*Note*: Prior to MySQL 6.0.8, When you modify an existing view, the\ncurrent view definition is backed up and saved. It is stored in that\ntable\'s database directory, in a subdirectory named arc. The backup\nfile for a view v is named v.frm-00001. If you alter the view again,\nthe next backup is named v.frm-00002. The three latest view backup\ndefinitions are stored. Backed up view definitions are not preserved by\nmysqldump, or any other such programs, but you can retain them using a\nfile copy operation. However, they are not needed for anything but to\nprovide you with a backup of your previous view definition. It is safe\nto remove these backup definitions, but only while mysqld is not\nrunning. If you delete the arc subdirectory or its files while mysqld\nis running, you will receive an error the next time you try to alter\nthe view: mysql> ALTER VIEW v AS SELECT * FROM t; ERROR 6 (HY000):\nError on delete of \'.\\test\\arc/v.frm-0004\' (Errcode: 2)\n\nColumns retrieved by the SELECT statement can be simple references to\ntable columns. They can also be expressions that use functions,\nconstant values, operators, and so forth.\n\nUnqualified table or view names in the SELECT statement are interpreted\nwith respect to the default database. A view can refer to tables or\nviews in other databases by qualifying the table or view name with the\nproper database name.\n\nA view can be created from many kinds of SELECT statements. It can\nrefer to base tables or other views. It can use joins, UNION, and\nsubqueries. The SELECT need not even refer to any tables. The following\nexample defines a view that selects two columns from another table, as\nwell as an expression calculated from those columns:\n\nmysql> CREATE TABLE t (qty INT, price INT);\nmysql> INSERT INTO t VALUES(3, 50);\nmysql> CREATE VIEW v AS SELECT qty, price, qty*price AS value FROM t;\nmysql> SELECT * FROM v;\n+------+-------+-------+\n| qty  | price | value |\n+------+-------+-------+\n|    3 |    50 |   150 |\n+------+-------+-------+\n\nA view definition is subject to the following restrictions:\n\no The SELECT statement cannot contain a subquery in the FROM clause.\n\no The SELECT statement cannot refer to system or user variables.\n\no Within a stored program, the definition cannot refer to program\n  parameters or local variables.\n\no The SELECT statement cannot refer to prepared statement parameters.\n\no Any table or view referred to in the definition must exist. However,\n  after a view has been created, it is possible to drop a table or view\n  that the definition refers to. In this case, use of the view results\n  in an error. To check a view definition for problems of this kind,\n  use the CHECK TABLE statement.\n\no The definition cannot refer to a TEMPORARY table, and you cannot\n  create a TEMPORARY view.\n\no Any tables named in the view definition must exist at definition\n  time.\n\no You cannot associate a trigger with a view.\n\nORDER BY is allowed in a view definition, but it is ignored if you\nselect from a view using a statement that has its own ORDER BY.\n\nFor other options or clauses in the definition, they are added to the\noptions or clauses of the statement that references the view, but the\neffect is undefined. For example, if a view definition includes a LIMIT\nclause, and you select from the view using a statement that has its own\nLIMIT clause, it is undefined which limit applies. This same principle\napplies to options such as ALL, DISTINCT, or SQL_SMALL_RESULT that\nfollow the SELECT keyword, and to clauses such as INTO, FOR UPDATE,\nLOCK IN SHARE MODE, and PROCEDURE.\n\nIf you create a view and then change the query processing environment\nby changing system variables, that may affect the results that you get\nfrom the view:\n\nmysql> CREATE VIEW v (mycol) AS SELECT \'abc\';\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SET sql_mode = \'\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT "mycol" FROM v;\n+-------+\n| mycol |\n+-------+\n| mycol | \n+-------+\n1 row in set (0.01 sec)\n\nmysql> SET sql_mode = \'ANSI_QUOTES\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT "mycol" FROM v;\n+-------+\n| mycol |\n+-------+\n| abc   | \n+-------+\n1 row in set (0.00 sec)\n\nThe DEFINER and SQL SECURITY clauses determine which MySQL account to\nuse when checking access privileges for the view when a statement is\nexecuted that references the view. The legal SQL SECURITY\ncharacteristic values are DEFINER and INVOKER. These indicate that the\nrequired privileges must be held by the user who defined or invoked the\nview, respectively. The default SQL SECURITY value is DEFINER.\n\nIf a user value is given for the DEFINER clause, it should be a MySQL\naccount in \'user_name\'@\'host_name\' format (the same format used in the\nGRANT statement). The user_name and host_name values both are required.\nThe definer can also be given as CURRENT_USER or CURRENT_USER(). The\ndefault DEFINER value is the user who executes the CREATE VIEW\nstatement. This is the same as specifying DEFINER = CURRENT_USER\nexplicitly.\n\nIf you specify the DEFINER clause, these rules determine the legal\nDEFINER user values:\n\no If you do not have the SUPER privilege, the only legal user value is\n  your own account, either specified literally or by using\n  CURRENT_USER. You cannot set the definer to some other account.\n\no If you have the SUPER privilege, you can specify any syntactically\n  legal account name. If the account does not actually exist, a warning\n  is generated.\n\no If the SQL SECURITY value is DEFINER but the definer account does not\n  exist when the view is referenced, an error occurs.\n\nWithin a view definition, CURRENT_USER returns the view\'s DEFINER value\nby default. For views defined with the SQL SECURITY INVOKER\ncharacteristic, CURRENT_USER returns the account for the view\'s\ninvoker. For information about user auditing within views, see\nhttp://dev.mysql.com/doc/refman/6.0/en/account-activity-auditing.html.\n\nWithin a stored routine that is defined with the SQL SECURITY DEFINER\ncharacteristic, CURRENT_USER returns the routine\'s DEFINER value. This\nalso affects a view defined within such a program, if the view\ndefinition contains a DEFINER value of CURRENT_USER.\n\nView privileges are checked like this:\n\no At view definition time, the view creator must have the privileges\n  needed to use the top-level objects accessed by the view. For\n  example, if the view definition refers to table columns, the creator\n  must have privileges for the columns, as described previously. If the\n  definition refers to a stored function, only the privileges needed to\n  invoke the function can be checked. The privileges required when the\n  function runs can be checked only as it executes: For different\n  invocations of the function, different execution paths within the\n  function might be taken.\n\no When a view is referenced, privileges for objects accessed by the\n  view are checked against the privileges held by the view creator or\n  invoker, depending on whether the SQL SECURITY characteristic is\n  DEFINER or INVOKER, respectively.\n\no If reference to a view causes execution of a stored function,\n  privilege checking for statements executed within the function depend\n  on whether the function is defined with a SQL SECURITY characteristic\n  of DEFINER or INVOKER. If the security characteristic is DEFINER, the\n  function runs with the privileges of its creator. If the\n  characteristic is INVOKER, the function runs with the privileges\n  determined by the view\'s SQL SECURITY characteristic.\n\nExample: A view might depend on a stored function, and that function\nmight invoke other stored routines. For example, the following view\ninvokes a stored function f():\n\nCREATE VIEW v AS SELECT * FROM t WHERE t.id = f(t.name);\n\nSuppose that f() contains a statement such as this:\n\nIF name IS NULL then\n  CALL p1();\nELSE\n  CALL p2();\nEND IF;\n\nThe privileges required for executing statements within f() need to be\nchecked when f() executes. This might mean that privileges are needed\nfor p1() or p2(), depending on the execution path within f(). Those\nprivileges must be checked at runtime, and the user who must possess\nthe privileges is determined by the SQL SECURITY values of the view v\nand the function f().\n\nThe DEFINER and SQL SECURITY clauses for views are extensions to\nstandard SQL. In standard SQL, views are handled using the rules for\nSQL SECURITY INVOKER.\n\nIf you invoke a view that was created before MySQL 5.0.13/5.1.2, it is\ntreated as though it was created with a SQL SECURITY DEFINER clause and\nwith a DEFINER value that is the same as your account. However, because\nthe actual definer is unknown, MySQL issues a warning. To make the\nwarning go away, it is sufficient to re-create the view so that the\nview definition includes a DEFINER clause.\n\nThe optional ALGORITHM clause is a MySQL extension to standard SQL. It\naffects how MySQL processes the view. ALGORITHM takes three values:\nMERGE, TEMPTABLE, or UNDEFINED. The default algorithm is UNDEFINED if\nno ALGORITHM clause is present. For more information, see\nhttp://dev.mysql.com/doc/refman/6.0/en/view-algorithms.html.\n\nSome views are updatable. That is, you can use them in statements such\nas UPDATE, DELETE, or INSERT to update the contents of the underlying\ntable. For a view to be updatable, there must be a one-to-one\nrelationship between the rows in the view and the rows in the\nunderlying table. There are also certain other constructs that make a\nview non-updatable.\n\nThe WITH CHECK OPTION clause can be given for an updatable view to\nprevent inserts or updates to rows except those for which the WHERE\nclause in the select_statement is true.\n\nIn a WITH CHECK OPTION clause for an updatable view, the LOCAL and\nCASCADED keywords determine the scope of check testing when the view is\ndefined in terms of another view. The LOCAL keyword restricts the CHECK\nOPTION only to the view being defined. CASCADED causes the checks for\nunderlying views to be evaluated as well. When neither keyword is\ngiven, the default is CASCADED.\n\nFor more information about updatable views and the WITH CHECK OPTION\nclause, see\nhttp://dev.mysql.com/doc/refman/6.0/en/view-updatability.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-view.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-view.html'),
	(450, 'TRIM', 36, 'Syntax:\nTRIM([{BOTH | LEADING | TRAILING} [remstr] FROM] str), TRIM([remstr\nFROM] str)\n\nReturns the string str with all remstr prefixes or suffixes removed. If\nnone of the specifiers BOTH, LEADING, or TRAILING is given, BOTH is\nassumed. remstr is optional and, if not specified, spaces are removed.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT TRIM(\'  bar   \');\n        -> \'bar\'\nmysql> SELECT TRIM(LEADING \'x\' FROM \'xxxbarxxx\');\n        -> \'barxxx\'\nmysql> SELECT TRIM(BOTH \'x\' FROM \'xxxbarxxx\');\n        -> \'bar\'\nmysql> SELECT TRIM(TRAILING \'xyz\' FROM \'barxxyz\');\n        -> \'barx\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(451, 'IS', 17, 'Syntax:\nIS boolean_value\n\nTests a value against a boolean value, where boolean_value can be TRUE,\nFALSE, or UNKNOWN.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 1 IS TRUE, 0 IS FALSE, NULL IS UNKNOWN;\n        -> 1, 1, 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(452, 'GET_FORMAT', 31, 'Syntax:\nGET_FORMAT({DATE|TIME|DATETIME}, {\'EUR\'|\'USA\'|\'JIS\'|\'ISO\'|\'INTERNAL\'})\n\nReturns a format string. This function is useful in combination with\nthe DATE_FORMAT() and the STR_TO_DATE() functions.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT DATE_FORMAT(\'2003-10-03\',GET_FORMAT(DATE,\'EUR\'));\n        -> \'03.10.2003\'\nmysql> SELECT STR_TO_DATE(\'10.31.2003\',GET_FORMAT(DATE,\'USA\'));\n        -> \'2003-10-31\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(453, 'TINYBLOB', 22, 'TINYBLOB\n\nA BLOB column with a maximum length of 255 (28 - 1) bytes. Each\nTINYBLOB value is stored using a one-byte length prefix that indicates\nthe number of bytes in the value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(454, 'BACKUP DATABASE', 19, 'Syntax:\nBACKUP {DATABASE | SCHEMA}\n    { * | db_name [, db_name] ... }\n    TO \'image_file_name\';\n    [WITH COMPRESSION\n      [COMPRESSION_ALGORITHM [=] algorithm_name]]\n\nThis statement backs up one or more databases and writes the backup\ncontents to an image file (a file containing database contents). The\nfile must be named as a literal string. The file can be a regular file,\nin which case, it must not already exist. As of MySQL 6.0.6, the file\ncan be an existing FIFO on Unix. The file is written to the server\nhost. Its location must be in a directory where the server can create\nand write files. If the secure_file_priv system variable is set to a\nnon-empty directory name, the image file must be located in that\ndirectory.\n\nAs of MySQL 6.0.7, the backupdir system variable value is the default\nimage file directory for BACKUP DATABASE operations. If an image file\nis named as a relative path name, it is interpreted relative to the\nvalue of backupdir. The default value is the data directory. Before\nMySQL 6.0.7, the file should be specified as a full path name.\n\nBACKUP DATABASE requires the SUPER and FILE privileges, as well as the\nSELECT privilege for all objects to be backed up.\n\nThe databases to back up may be specified using * to name all\ndatabases, or using a comma-separated list of one or more names. All\nspecified databases are backed up to the same image file. If databases\nare named, no name can appear more than once, and all the databases\nmust exist.\n\nBACKUP DATABASE * TO \'/tmp/all.backup\';\nBACKUP DATABASE world TO \'/tmp/world.backup\';\nBACKUP DATABASE db1, db2 TO \'/tmp/db1-db2.backup\';\n\nThe resulting image file contains information about which databases it\ncontains and can be used later with a RESTORE statement to restore the\ncontents of those databases to their state at the time of the backup\noperation.\n\nUpon successful completion, the BACKUP DATABASE statement returns a\nresult set with the backup number. Warnings produced during the\noperation can be displayed with SHOW WARNINGS. If the backup operation\nfails, it returns an error and any file created by the operation is\ndeleted.\n\nmysql> BACKUP DATABASE test TO \'/tmp/world.backup\';\n+-----------+\n| backup_id |\n+-----------+\n| 8         | \n+-----------+\n\nWhile the operation is in progress, it can be monitored as described in\nhttp://dev.mysql.com/doc/refman/6.0/en/backup-database-restore-monitori\nng.html.\n\nAs of MySQL 6.0.7, you can use the WITH COMPRESSION clause to cause\nBACKUP DATABASE to compress the backup. This reduces the image size.\nThe optional COMPRESSION_ALGORITHM clause may be given when using WITH\nCOMPRESSION. The only allowable algorithm name is gzip, which is also\nthe default. gzip compression is the same as that done by the gzip\ncommand-line utility; it follows the conventions described as\nhttp://www.faqs.org/rfcs/rfc1952.html.\n\nIf WITH COMPRESSION is given, the entire backup is compressed. It is\nnot possible to selectively compress some databases but not others\nwithin a single backup operation.\n\nUse of compression does not cause BACKUP DATABASE to modify the given\nimage file name. We recommend that you use an appropriate suffix. For\nexample, if you name a backup image mybackup.bak normally, name it\nmybackup.bak.gz instead if you specify WITH COMPRESSION.\n\nRESTORE detects whether a backup image is compressed and uncompresses\nit automatically as necessary.\n\nIt is possible to manually compress and uncompressed image or\nuncompress a compressed image by using a gzip-compatible tool. In\neither case, RESTORE will detect whether the image needs to be\ncompressed.\n\nFor a MySQL server to be able to produce compressed images, it must be\ncompiled with zlib support (see\nhttp://dev.mysql.com/doc/refman/6.0/en/configure-options.html). If WITH\nCOMPRESSION is specified and zlib support is not present, BACKUP\nDATABASE fails with an error.\n\nIf you produce a compressed image with a server that has zlib support,\nthe image cannot be restored by another server unless that server also\nhas zlib support, or unless you manually uncompress the image first.\nOtherwise, the RESTORE operation will fail with an error.\n\nUse of compression may make backup and restore operations faster by\nreducing the amount of disk I/O. There is some tradeoff due to the\nincreased CPU load required for compression and uncompression\ncalculations, but in general we expect this to be outweighed by the\ntime savings from reduced I/O.\n\nBACKUP DATABASE backs up database and table definitions, table data,\nstored routines, triggers, events, and views. TEMPORARY tables are not\nincluded. Tablespace backup support is limited to the Falcon storage\nengine. Privileges are not saved before MySQL 6.0.7. As of 6.0.7,\nprivileges for backed-up databases are saved. This includes privileges\nat the database level and below (table, column, routine). Global\nprivileges are not saved. For additional information about how\nprivileges are backed up, see\nhttp://dev.mysql.com/doc/refman/6.0/en/backup-database-restore-quick-gu\nide.html.\n\nFor anything else not explicitly listed, assume that it is not backed\nup. This includes but is not limited to items such as UDF definitions\nand files, logs, and option files.\n\nThe BACKUP DATABASE statement does not back up the mysql or\nINFORMATION_SCHEMA databases. The statement silently ignores them if\nyou use the * database selector syntax. Do not include them in the list\nof names if you specify database names explicitly. To back up the mysql\ndatabase, you can use the mysqldump program. For an example backup\nstrategy that combines BACKUP DATABASE with mysqldump, see\nhttp://dev.mysql.com/doc/refman/6.0/en/backup-database-restore-quick-gu\nide.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/backup-database.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/backup-database.html'),
	(455, 'SIGNAL', 23, 'Syntax:\nSIGNAL condition_value\n    [SET signal_information [, signal_information] ...]\n\ncondition_value:\n    SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n\nsignal_information:\n    condition_information_item = simple_value_specification\n\ncondition_information_item:\n{\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n}\n\nsimple_value_specification: (see following discussion)\n\nSIGNAL is the way to "return" an error. SIGNAL provides error\ninformation to a handler, to an outer portion of the application, or to\nthe client. Also, it provides control over the error\'s characteristics\n(error number, SQLSTATE value, message). Without SIGNAL, it is\nnecessary to resort to workarounds such as deliberately referring to a\nnon-existent table to cause a routine to return an error.\n\nNo special privileges are required to execute the SIGNAL statement.\n\nThe condition_value in a SIGNAL statement indicates the error value to\nbe returned. It can be an SQLSTATE value (a 5-character string literal)\nor a condition_name that refers to a named condition previously defined\nwith DECLARE ... CONDITION (see [HELP DECLARE CONDITION]).\n\nAn SQLSTATE value can indicate errors, warnings, or "not found." The\nfirst two characters of the value indicate its error class, as\ndiscussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/signal.html#signal-condition-inf\normation-items. Some signal values cause statement termination; see\nhttp://dev.mysql.com/doc/refman/6.0/en/signal.html#signal-effects.\n\nThe SQLSTATE value for a SIGNAL statement should not start with \'00\'\nbecause such values indicate success and are not valid for signaling an\nerror. This is true whether the SQLSTATE value is specified directly in\nthe SIGNAL statement or in a named condition referred to in the\nstatement. If the value is invalid, a Bad SQLSTATE error occurs.\n\nTo signal a generic SQLSTATE value, use \'45000\', which means "unhandled\nuser-defined exception."\n\nThe SIGNAL statement optionally includes a SET clause that contains\nmultiple signal items, in a comma-separated list of\ncondition_information_item = simple_value_specification assignments.\n\nAll condition_information_item values are standard SQL except\nMYSQL_ERRNO, which is a MySQL extension.\nhttp://dev.mysql.com/doc/refman/6.0/en/signal.html#signal-condition-inf\normation-items. discusses allowable condition_information_item values.\n\nEach condition_information_item may be specified only once in the SET\nclause. Otherwise, a Duplicate condition information item error occurs.\n\nFor MySQL, valid simple_value_specification terms include local\nvariables declared with DECLARE, user-defined variables, system\nvariables, parameters (that is, input parameters of functions or\nprocedures), and literals, but not NULL values. A character literal may\ninclude a _charset introducer.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/signal.html\n\n', 'CREATE PROCEDURE p (pval INT)\nBEGIN\n  DECLARE specialty CONDITION FOR SQLSTATE \'45000\';\n  IF pval = 0 THEN\n    SIGNAL SQLSTATE \'01000\';\n  ELSEIF pval = 1 THEN\n    SIGNAL SQLSTATE \'45000\'\n      SET MESSAGE_TEXT = \'An error occurred\';\n  ELSEIF pval = 2 THEN\n    SIGNAL specialty\n      SET MESSAGE_TEXT = \'An error occurred\';\n  ELSE\n    SIGNAL SQLSTATE \'01000\'\n      SET MESSAGE_TEXT = \'A warning occurred\', MYSQL_ERRNO = 1000;\n    SIGNAL SQLSTATE \'45000\'\n      SET MESSAGE_TEXT = \'An error occurred\', MYSQL_ERRNO = 1001;\n  END IF;\nEND;\n', 'http://dev.mysql.com/doc/refman/6.0/en/signal.html'),
	(456, 'SAVEPOINT', 8, 'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB and Falcon support the SQL statements SAVEPOINT, ROLLBACK TO\nSAVEPOINT, RELEASE SAVEPOINT and the optional WORK keyword for\nROLLBACK.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/savepoint.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/savepoint.html'),
	(457, 'USER', 15, 'Syntax:\nUSER()\n\nReturns the current MySQL user name and host name as a string in the\nutf8 character set.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT USER();\n        -> \'davida@localhost\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(458, 'ALTER TABLE', 38, 'Syntax:\nALTER [IGNORE] TABLE tbl_name\n    alter_specification [, alter_specification] ...\n\nalter_specification:\n    table_option ...\n  | ADD [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name ]\n  | ADD [COLUMN] (col_name column_definition,...)\n  | ADD {INDEX|KEY} [index_name]\n        [index_type] (index_col_name,...) [index_option] ...\n  | ADD [CONSTRAINT [symbol]] PRIMARY KEY\n        [index_type] (index_col_name,...) [index_option] ...\n  | ADD [CONSTRAINT [symbol]]\n        UNIQUE [INDEX|KEY] [index_name]\n        [index_type] (index_col_name,...) [index_option] ...\n  | ADD FULLTEXT [INDEX|KEY] [index_name]\n        (index_col_name,...) [index_option] ...\n  | ADD SPATIAL [INDEX|KEY] [index_name]\n        (index_col_name,...) [index_option] ...\n  | ADD [CONSTRAINT [symbol]]\n        FOREIGN KEY [index_name] (index_col_name,...)\n        reference_definition\n  | ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT}\n  | CHANGE [COLUMN] old_col_name new_col_name column_definition\n        [FIRST|AFTER col_name]\n  | MODIFY [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name]\n  | DROP [COLUMN] col_name\n  | DROP PRIMARY KEY\n  | DROP {INDEX|KEY} index_name\n  | DROP FOREIGN KEY fk_symbol\n  | DISABLE KEYS\n  | ENABLE KEYS\n  | RENAME [TO] new_tbl_name\n  | ORDER BY col_name [, col_name] ...\n  | CONVERT TO CHARACTER SET charset_name [COLLATE collation_name]\n  | [DEFAULT] CHARACTER SET [=] charset_name [COLLATE [=] collation_name]\n  | DISCARD TABLESPACE\n  | IMPORT TABLESPACE\n  | partition_options\n  | ADD PARTITION (partition_definition)\n  | DROP PARTITION partition_names\n  | COALESCE PARTITION number\n  | REORGANIZE PARTITION partition_names INTO (partition_definitions)\n  | ANALYZE PARTITION partition_names\n  | CHECK PARTITION partition_names\n  | OPTIMIZE PARTITION partition_names\n  | REBUILD PARTITION partition_names\n  | REPAIR PARTITION partition_names\n  | REMOVE PARTITIONING\n\nindex_col_name:\n    col_name [(length)] [ASC | DESC]\n\nindex_type:\n    USING {BTREE | HASH | RTREE}\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n\nALTER TABLE enables you to change the structure of an existing table.\nFor example, you can add or delete columns, create or destroy indexes,\nchange the type of existing columns, or rename columns or the table\nitself. You can also change the comment for the table and type of the\ntable.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/alter-table.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/alter-table.html'),
	(459, 'MPOINTFROMWKB', 32, 'MPointFromWKB(wkb[,srid]), MultiPointFromWKB(wkb[,srid])\n\nConstructs a MULTIPOINT value using its WKB representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions'),
	(460, 'CHAR BYTE', 22, 'The CHAR BYTE data type is an alias for the BINARY data type. This is a\ncompatibility feature.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(461, 'REPAIR TABLE', 20, 'Syntax:\nREPAIR [NO_WRITE_TO_BINLOG | LOCAL] TABLE\n    tbl_name [, tbl_name] ...\n    [QUICK] [EXTENDED] [USE_FRM]\n\nREPAIR TABLE repairs a possibly corrupted table. By default, it has the\nsame effect as myisamchk --recover tbl_name. REPAIR TABLE works for\nMyISAM, ARCHIVE, and CSV tables. See\nhttp://dev.mysql.com/doc/refman/6.0/en/myisam-storage-engine.html, and\nhttp://dev.mysql.com/doc/refman/6.0/en/archive-storage-engine.html, and\nhttp://dev.mysql.com/doc/refman/6.0/en/csv-storage-engine.html\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nBeginning with MySQL 6.0.6, REPAIR TABLE is also supported for\npartitioned tables. However, the USE_FRM option cannot be used with\nthis statement on a partitioned table.\n\nAlso beginning with MySQL 6.0.6, you can use ALTER TABLE ... REPAIR\nPARTITION to repair one or more partitions; for more information, see\n[HELP ALTER TABLE], and\nhttp://dev.mysql.com/doc/refman/6.0/en/partitioning-maintenance.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/repair-table.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/repair-table.html'),
	(462, 'MERGE', 38, 'The MERGE storage engine, also known as the MRG_MyISAM engine, is a\ncollection of identical MyISAM tables that can be used as one.\n"Identical" means that all tables have identical column and index\ninformation. You cannot merge MyISAM tables in which the columns are\nlisted in a different order, do not have exactly the same columns, or\nhave the indexes in different order. However, any or all of the MyISAM\ntables can be compressed with myisampack. See\nhttp://dev.mysql.com/doc/refman/6.0/en/myisampack.html. Differences in\ntable options such as AVG_ROW_LENGTH, MAX_ROWS, or PACK_KEYS do not\nmatter.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/merge-storage-engine.html\n\n', 'mysql> CREATE TABLE t1 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20)) ENGINE=MyISAM;\nmysql> CREATE TABLE t2 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20)) ENGINE=MyISAM;\nmysql> INSERT INTO t1 (message) VALUES (\'Testing\'),(\'table\'),(\'t1\');\nmysql> INSERT INTO t2 (message) VALUES (\'Testing\'),(\'table\'),(\'t2\');\nmysql> CREATE TABLE total (\n    ->    a INT NOT NULL AUTO_INCREMENT,\n    ->    message CHAR(20), INDEX(a))\n    ->    ENGINE=MERGE UNION=(t1,t2) INSERT_METHOD=LAST;\n', 'http://dev.mysql.com/doc/refman/6.0/en/merge-storage-engine.html'),
	(463, 'CREATE TABLE', 38, 'Syntax:\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    (create_definition,...)\n    [table_option] ...\n    [partition_options]\n\nOr:\n\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    [(create_definition,...)]\n    [table_option] ...\n    [partition_options]\n    select_statement\n\nOr:\n\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    { LIKE old_tbl_name | (LIKE old_tbl_name) }\n\ncreate_definition:\n    col_name column_definition\n  | [CONSTRAINT [symbol]] PRIMARY KEY [index_type] (index_col_name,...)\n      [index_option] ...\n  | {INDEX|KEY} [index_name] [index_type] (index_col_name,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY]\n      [index_name] [index_type] (index_col_name,...)\n      [index_option] ...\n  | {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name] (index_col_name,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] FOREIGN KEY\n      [index_name] (index_col_name,...) reference_definition\n  | [CONSTRAINT [symbol]] CHECK (expr)\n\ncolumn_definition:\n    data_type [NOT NULL | NULL] [DEFAULT default_value]\n      [AUTO_INCREMENT] [UNIQUE [KEY] | [PRIMARY] KEY]\n      [COMMENT \'string\'] [reference_definition]\n\ndata_type:\n    BIT[(length)]\n  | TINYINT[(length)] [UNSIGNED] [ZEROFILL]\n  | SMALLINT[(length)] [UNSIGNED] [ZEROFILL]\n  | MEDIUMINT[(length)] [UNSIGNED] [ZEROFILL]\n  | INT[(length)] [UNSIGNED] [ZEROFILL]\n  | INTEGER[(length)] [UNSIGNED] [ZEROFILL]\n  | BIGINT[(length)] [UNSIGNED] [ZEROFILL]\n  | REAL[(length,decimals)] [UNSIGNED] [ZEROFILL]\n  | DOUBLE[(length,decimals)] [UNSIGNED] [ZEROFILL]\n  | FLOAT[(length,decimals)] [UNSIGNED] [ZEROFILL]\n  | DECIMAL[(length[,decimals])] [UNSIGNED] [ZEROFILL]\n  | NUMERIC[(length[,decimals])] [UNSIGNED] [ZEROFILL]\n  | DATE\n  | TIME\n  | TIMESTAMP\n  | DATETIME\n  | YEAR\n  | CHAR[(length)]\n      [CHARACTER SET charset_name] [COLLATE collation_name]\n  | VARCHAR(length)\n      [CHARACTER SET charset_name] [COLLATE collation_name]\n  | BINARY[(length)]\n  | VARBINARY(length)\n  | TINYBLOB\n  | BLOB\n  | MEDIUMBLOB\n  | LONGBLOB\n  | TINYTEXT [BINARY]\n      [CHARACTER SET charset_name] [COLLATE collation_name]\n  | TEXT [BINARY]\n      [CHARACTER SET charset_name] [COLLATE collation_name]\n  | MEDIUMTEXT [BINARY]\n      [CHARACTER SET charset_name] [COLLATE collation_name]\n  | LONGTEXT [BINARY]\n      [CHARACTER SET charset_name] [COLLATE collation_name]\n  | ENUM(value1,value2,value3,...)\n      [CHARACTER SET charset_name] [COLLATE collation_name]\n  | SET(value1,value2,value3,...)\n      [CHARACTER SET charset_name] [COLLATE collation_name]\n  | spatial_type\n\nindex_col_name:\n    col_name [(length)] [ASC | DESC]\n\nindex_type:\n    USING {BTREE | HASH | RTREE}\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n\nreference_definition:\n    REFERENCES tbl_name (index_col_name,...)\n      [MATCH FULL | MATCH PARTIAL | MATCH SIMPLE]\n      [ON DELETE reference_option]\n      [ON UPDATE reference_option]\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION\n\ntable_option:\n    ENGINE [=] engine_name\n  | AUTO_INCREMENT [=] value\n  | AVG_ROW_LENGTH [=] value\n  | [DEFAULT] CHARACTER SET [=] charset_name\n  | CHECKSUM [=] {0 | 1}\n  | [DEFAULT] COLLATE [=] collation_name\n  | COMMENT [=] \'string\'\n  | CONNECTION [=] \'connect_string\'\n  | DATA DIRECTORY [=] \'absolute path to directory\'\n  | DELAY_KEY_WRITE [=] {0 | 1}\n  | INDEX DIRECTORY [=] \'absolute path to directory\'\n  | INSERT_METHOD [=] { NO | FIRST | LAST }\n  | KEY_BLOCK_SIZE [=] value\n  | MAX_ROWS [=] value\n  | MIN_ROWS [=] value\n  | PACK_KEYS [=] {0 | 1 | DEFAULT}\n  | PASSWORD [=] \'string\'\n  | ROW_FORMAT [=] {DEFAULT|DYNAMIC|FIXED|COMPRESSED|REDUNDANT|COMPACT}\n  | TABLESPACE tablespace_name\n  | UNION [=] (tbl_name[,tbl_name]...)\n\npartition_options:\n    PARTITION BY\n        { [LINEAR] HASH(expr)\n        | [LINEAR] KEY(column_list)\n        | RANGE(expr)\n        | LIST(expr) }\n    [PARTITIONS num]\n    [SUBPARTITION BY\n        { [LINEAR] HASH(expr)\n        | [LINEAR] KEY(column_list) }\n      [SUBPARTITIONS num]\n    ]\n    [(partition_definition [, partition_definition] ...)]\n\npartition_definition:\n    PARTITION partition_name\n        [VALUES {LESS THAN {(expr) | MAXVALUE} | IN (value_list)}]\n        [[STORAGE] ENGINE [=] engine_name]\n        [COMMENT [=] \'comment_text\' ]\n        [DATA DIRECTORY [=] \'data_dir\']\n        [INDEX DIRECTORY [=] \'index_dir\']\n        [MAX_ROWS [=] max_number_of_rows]\n        [MIN_ROWS [=] min_number_of_rows]\n        [TABLESPACE [=] tablespace_name]\n        [NODEGROUP [=] node_group_id]\n        [(subpartition_definition [, subpartition_definition] ...)]\n\nsubpartition_definition:\n    SUBPARTITION logical_name\n        [[STORAGE] ENGINE [=] engine_name]\n        [COMMENT [=] \'comment_text\' ]\n        [DATA DIRECTORY [=] \'data_dir\']\n        [INDEX DIRECTORY [=] \'index_dir\']\n        [MAX_ROWS [=] max_number_of_rows]\n        [MIN_ROWS [=] min_number_of_rows]\n        [TABLESPACE [=] tablespace_name]\n        [NODEGROUP [=] node_group_id]\n\nselect_statement:\n    [IGNORE | REPLACE] [AS] SELECT ...   (Some legal select statement)\n\nCREATE TABLE creates a table with the given name. You must have the\nCREATE privilege for the table.\n\nRules for allowable table names are given in\nhttp://dev.mysql.com/doc/refman/6.0/en/identifiers.html. By default,\nthe table is created in the default database. An error occurs if the\ntable exists, if there is no default database, or if the database does\nnot exist.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-table.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/create-table.html'),
	(464, '>', 17, 'Syntax:\n>\n\nGreater than:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT 2 > 2;\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(465, 'ANALYZE TABLE', 20, 'Syntax:\nANALYZE [NO_WRITE_TO_BINLOG | LOCAL] TABLE\n    tbl_name [, tbl_name] ...\n\nANALYZE TABLE analyzes and stores the key distribution for a table.\nDuring the analysis, the table is locked with a read lock for MyISAM.\nFor InnoDB the table is locked with a write lock. This statement works\nwith MyISAM, and InnoDB tables. For MyISAM tables, this statement is\nequivalent to using myisamchk --analyze.\n\nFor more information on how the analysis works within InnoDB, see\nhttp://dev.mysql.com/doc/refman/6.0/en/innodb-restrictions.html.\n\nMySQL uses the stored key distribution to decide the order in which\ntables should be joined when you perform a join on something other than\na constant. In addition, key distributions can be used when deciding\nwhich indexes to use for a specific table within a query.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nBeginning with MySQL 6.0.8, ANALYZE TABLE is also supported for\npartitioned tables. Also beginning with MySQL 6.0.8, you can use ALTER\nTABLE ... ANALYZE PARTITION to analyze one or more partitions; for more\ninformation, see [HELP ALTER TABLE], and\nhttp://dev.mysql.com/doc/refman/6.0/en/partitioning-maintenance.html.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/analyze-table.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/analyze-table.html'),
	(466, 'MICROSECOND', 31, 'Syntax:\nMICROSECOND(expr)\n\nReturns the microseconds from the time or datetime expression expr as a\nnumber in the range from 0 to 999999.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT MICROSECOND(\'12:00:00.123456\');\n        -> 123456\nmysql> SELECT MICROSECOND(\'2009-12-31 23:59:59.000010\');\n        -> 10\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(467, 'CONSTRAINT', 38, 'InnoDB supports foreign key constraints. The syntax for a foreign key\nconstraint definition in InnoDB looks like this:\n\n[CONSTRAINT [symbol]] FOREIGN KEY\n    [index_name] (index_col_name, ...)\n    REFERENCES tbl_name (index_col_name,...)\n    [ON DELETE reference_option]\n    [ON UPDATE reference_option]\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/innodb-foreign-key-constraints.html\n\n', 'CREATE TABLE product (category INT NOT NULL, id INT NOT NULL,\n                      price DECIMAL,\n                      PRIMARY KEY(category, id)) ENGINE=INNODB;\nCREATE TABLE customer (id INT NOT NULL,\n                       PRIMARY KEY (id)) ENGINE=INNODB;\nCREATE TABLE product_order (no INT NOT NULL AUTO_INCREMENT,\n                            product_category INT NOT NULL,\n                            product_id INT NOT NULL,\n                            customer_id INT NOT NULL,\n                            PRIMARY KEY(no),\n                            INDEX (product_category, product_id),\n                            FOREIGN KEY (product_category, product_id)\n                              REFERENCES product(category, id)\n                              ON UPDATE CASCADE ON DELETE RESTRICT,\n                            INDEX (customer_id),\n                            FOREIGN KEY (customer_id)\n                              REFERENCES customer(id)) ENGINE=INNODB;\n', 'http://dev.mysql.com/doc/refman/6.0/en/innodb-foreign-key-constraints.html'),
	(468, 'CREATE SERVER', 38, 'Syntax:\nCREATE SERVER server_name\n    FOREIGN DATA WRAPPER wrapper_name\n    OPTIONS (option [, option] ...)\n\noption:\n  { HOST character-literal\n  | DATABASE character-literal\n  | USER character-literal\n  | PASSWORD character-literal\n  | SOCKET character-literal\n  | OWNER character-literal\n  | PORT numeric-literal }\n\nThis statement creates the definition of a server for use with the\nFEDERATED storage engine. The CREATE SERVER statement creates a new row\nwithin the servers table within the mysql database. This statement\nrequires the SUPER privilege.\n\nThe server_name should be a unique reference to the server. Server\ndefinitions are global within the scope of the server, it is not\npossible to qualify the server definition to a specific database.\nserver_name has a maximum length of 64 characters (names longer than 64\ncharacters are silently truncated), and is case insensitive. You may\nspecify the name as a quoted string.\n\nThe wrapper_name should be mysql, and may be quoted with single quotes.\nOther values for wrapper_name are not currently supported.\n\nFor each option you must specify either a character literal or numeric\nliteral. Character literals are UTF-8, support a maximum length of 64\ncharacters and default to a blank (empty) string. String literals are\nsilently truncated to 64 characters. Numeric literals must be a number\nbetween 0 and 9999, default value is 0.\n\nThe CREATE SERVER statement creates an entry in the mysql.server table\nthat can later be used with the CREATE TABLE statement when creating a\nFEDERATED table. The options that you specify will be used to populate\nthe columns in the mysql.server table. The table columns are\nServer_name, Host, Db, Username, Password, Port and Socket.\n\n*Note*: Note that the OWNER option is currently not applied, and has no\neffect on the ownership or operation of the server connection that is\ncreated.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/create-server.html\n\n', 'CREATE SERVER s\nFOREIGN DATA WRAPPER mysql\nOPTIONS (USER \'Remote\', HOST \'192.168.1.106\', DATABASE \'test\');\n', 'http://dev.mysql.com/doc/refman/6.0/en/create-server.html'),
	(469, 'FIELD', 36, 'Syntax:\nFIELD(str,str1,str2,str3,...)\n\nReturns the index (position) of str in the str1, str2, str3, ... list.\nReturns 0 if str is not found.\n\nIf all arguments to FIELD() are strings, all arguments are compared as\nstrings. If all arguments are numbers, they are compared as numbers.\nOtherwise, the arguments are compared as double.\n\nIf str is NULL, the return value is 0 because NULL fails equality\ncomparison with any value. FIELD() is the complement of ELT().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT FIELD(\'ej\', \'Hej\', \'ej\', \'Heja\', \'hej\', \'foo\');\n        -> 2\nmysql> SELECT FIELD(\'fo\', \'Hej\', \'ej\', \'Heja\', \'hej\', \'foo\');\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(470, 'MAKETIME', 31, 'Syntax:\nMAKETIME(hour,minute,second)\n\nReturns a time value calculated from the hour, minute, and second\narguments.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT MAKETIME(12,15,30);\n        -> \'12:15:30\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(471, 'CURDATE', 31, 'Syntax:\nCURDATE()\n\nReturns the current date as a value in \'YYYY-MM-DD\' or YYYYMMDD format,\ndepending on whether the function is used in a string or numeric\ncontext.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT CURDATE();\n        -> \'2008-06-13\'\nmysql> SELECT CURDATE() + 0;\n        -> 20080613\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(472, 'SET PASSWORD', 9, 'Syntax:\nSET PASSWORD [FOR user] =\n    {\n        PASSWORD(\'some password\')\n      | OLD_PASSWORD(\'some password\')\n      | \'encrypted password\'\n    }\n\nThe SET PASSWORD statement assigns a password to an existing MySQL user\naccount.\n\nIf the password is specified using the PASSWORD() or OLD_PASSWORD()\nfunction, the literal text of the password should be given. If the\npassword is specified without using either function, the password\nshould be the already-encrypted password value as returned by\nPASSWORD().\n\nWith no FOR clause, this statement sets the password for the current\nuser. Any client that has connected to the server using a non-anonymous\naccount can change the password for that account.\n\nWith a FOR clause, this statement sets the password for a specific\naccount on the current server host. Only clients that have the UPDATE\nprivilege for the mysql database can do this. The user value should be\ngiven in user_name@host_name format, where user_name and host_name are\nexactly as they are listed in the User and Host columns of the\nmysql.user table entry. For example, if you had an entry with User and\nHost column values of \'bob\' and \'%.loc.gov\', you would write the\nstatement like this:\n\nSET PASSWORD FOR \'bob\'@\'%.loc.gov\' = PASSWORD(\'newpass\');\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/set-password.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/set-password.html'),
	(473, 'ENUM', 22, 'ENUM(\'value1\',\'value2\',...) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nAn enumeration. A string object that can have only one value, chosen\nfrom the list of values \'value1\', \'value2\', ..., NULL or the special \'\'\nerror value. An ENUM column can have a maximum of 65,535 distinct\nvalues. ENUM values are represented internally as integers.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(474, 'IF FUNCTION', 7, 'Syntax:\nIF(expr1,expr2,expr3)\n\nIf expr1 is TRUE (expr1 <> 0 and expr1 <> NULL) then IF() returns\nexpr2; otherwise it returns expr3. IF() returns a numeric or string\nvalue, depending on the context in which it is used.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html\n\n', 'mysql> SELECT IF(1>2,2,3);\n        -> 3\nmysql> SELECT IF(1<2,\'yes\',\'no\');\n        -> \'yes\'\nmysql> SELECT IF(STRCMP(\'test\',\'test1\'),\'no\',\'yes\');\n        -> \'no\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/control-flow-functions.html'),
	(475, 'DATABASE', 15, 'Syntax:\nDATABASE()\n\nReturns the default (current) database name as a string in the utf8\ncharacter set. If there is no default database, DATABASE() returns\nNULL. Within a stored routine, the default database is the database\nthat the routine is associated with, which is not necessarily the same\nas the database that is the default in the calling context.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT DATABASE();\n        -> \'test\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(476, 'POINTFROMWKB', 32, 'PointFromWKB(wkb[,srid])\n\nConstructs a POINT value using its WKB representation and SRID.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/creating-spatial-values.html#gis-wkb-functions'),
	(477, 'POWER', 4, 'Syntax:\nPOWER(X,Y)\n\nThis is a synonym for POW().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(478, 'ATAN', 4, 'Syntax:\nATAN(X)\n\nReturns the arc tangent of X, that is, the value whose tangent is X.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT ATAN(2);\n        -> 1.1071487177941\nmysql> SELECT ATAN(-2);\n        -> -1.1071487177941\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(479, 'STRCMP', 36, 'Syntax:\nSTRCMP(expr1,expr2)\n\nSTRCMP() returns 0 if the strings are the same, -1 if the first\nargument is smaller than the second according to the current sort\norder, and 1 otherwise.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-comparison-functions.html\n\n', 'mysql> SELECT STRCMP(\'text\', \'text2\');\n        -> -1\nmysql> SELECT STRCMP(\'text2\', \'text\');\n        -> 1\nmysql> SELECT STRCMP(\'text\', \'text\');\n        -> 0\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-comparison-functions.html'),
	(480, 'INSERT DELAYED', 27, 'Syntax:\nINSERT DELAYED ...\n\nThe DELAYED option for the INSERT statement is a MySQL extension to\nstandard SQL that is very useful if you have clients that cannot or\nneed not wait for the INSERT to complete. This is a common situation\nwhen you use MySQL for logging and you also periodically run SELECT and\nUPDATE statements that take a long time to complete.\n\nWhen a client uses INSERT DELAYED, it gets an okay from the server at\nonce, and the row is queued to be inserted when the table is not in use\nby any other thread.\n\nAnother major benefit of using INSERT DELAYED is that inserts from many\nclients are bundled together and written in one block. This is much\nfaster than performing many separate inserts.\n\nNote that INSERT DELAYED is slower than a normal INSERT if the table is\nnot otherwise in use. There is also the additional overhead for the\nserver to handle a separate thread for each table for which there are\ndelayed rows. This means that you should use INSERT DELAYED only when\nyou are really sure that you need it.\n\nThe queued rows are held only in memory until they are inserted into\nthe table. This means that if you terminate mysqld forcibly (for\nexample, with kill -9) or if mysqld dies unexpectedly, any queued rows\nthat have not been written to disk are lost.\n\nThere are some constraints on the use of DELAYED:\n\no INSERT DELAYED works only with MyISAM, MEMORY, ARCHIVE, and BLACKHOLE\n  tables. See\n  http://dev.mysql.com/doc/refman/6.0/en/myisam-storage-engine.html,\n  http://dev.mysql.com/doc/refman/6.0/en/memory-storage-engine.html,\n  http://dev.mysql.com/doc/refman/6.0/en/archive-storage-engine.html,\n  and\n  http://dev.mysql.com/doc/refman/6.0/en/blackhole-storage-engine.html.\n\no For MyISAM tables, if there are no free blocks in the middle of the\n  data file, concurrent SELECT and INSERT statements are supported.\n  Under these circumstances, you very seldom need to use INSERT DELAYED\n  with MyISAM.\n\no INSERT DELAYED should be used only for INSERT statements that specify\n  value lists. The server ignores DELAYED for INSERT ... SELECT or\n  INSERT ... ON DUPLICATE KEY UPDATE statements.\n\no Because the INSERT DELAYED statement returns immediately, before the\n  rows are inserted, you cannot use LAST_INSERT_ID() to get the\n  AUTO_INCREMENT value that the statement might generate.\n\no DELAYED rows are not visible to SELECT statements until they actually\n  have been inserted.\n\no DELAYED is ignored on slave replication servers, so that INSERT\n  DELAYED is treated as a normal INSERT on slaves. This is because\n  DELAYED could cause the slave to have different data than the master.\n\no Pending INSERT DELAYED statements are lost if a table is write locked\n  and ALTER TABLE is used to modify the table structure.\n\no INSERT DELAYED is not supported for views.\n\no INSERT DELAYED is not supported for partitioned tables.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/insert-delayed.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/insert-delayed.html'),
	(481, 'SHOW PROFILE', 26, 'Syntax:\nSHOW PROFILES\n\nThe SHOW PROFILE statement display profiling information that indicates\nresource usage for statements executed during the course of the current\nsession. It is used together with SHOW PROFILES; see [HELP SHOW\nPROFILES].\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-profile.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-profile.html'),
	(482, 'SHOW PROCEDURE CODE', 26, 'Syntax:\nSHOW PROCEDURE CODE proc_name\n\nThis statement is a MySQL extension that is available only for servers\nthat have been built with debugging support. It displays a\nrepresentation of the internal implementation of the named stored\nprocedure. A similar statement, SHOW FUNCTION CODE, displays\ninformation about stored functions (see [HELP SHOW FUNCTION CODE]).\n\nBoth statements require that you be the owner of the routine or have\nSELECT access to the mysql.proc table.\n\nIf the named routine is available, each statement produces a result\nset. Each row in the result set corresponds to one "instruction" in the\nroutine. The first column is Pos, which is an ordinal number beginning\nwith 0. The second column is Instruction, which contains an SQL\nstatement (usually changed from the original source), or a directive\nwhich has meaning only to the stored-routine handler.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-procedure-code.html\n\n', 'mysql> DELIMITER //\nmysql> CREATE PROCEDURE p1 ()\n    -> BEGIN\n    ->   DECLARE fanta INT DEFAULT 55;\n    ->   DROP TABLE t2;\n    ->   LOOP\n    ->     INSERT INTO t3 VALUES (fanta);\n    ->     END LOOP;\n    ->   END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SHOW PROCEDURE CODE p1//\n+-----+----------------------------------------+\n| Pos | Instruction                            |\n+-----+----------------------------------------+\n|   0 | set fanta@0 55                         |\n|   1 | stmt 9 "DROP TABLE t2"                 |\n|   2 | stmt 5 "INSERT INTO t3 VALUES (fanta)" |\n|   3 | jump 2                                 |\n+-----+----------------------------------------+\n4 rows in set (0.00 sec)\n', 'http://dev.mysql.com/doc/refman/6.0/en/show-procedure-code.html'),
	(483, 'MEDIUMTEXT', 22, 'MEDIUMTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 16,777,215 (224 - 1) characters.\nThe effective maximum length is less if the value contains multi-byte\ncharacters. Each MEDIUMTEXT value is stored using a three-byte length\nprefix that indicates the number of bytes in the value.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/string-type-overview.html'),
	(484, 'LN', 4, 'Syntax:\nLN(X)\n\nReturns the natural logarithm of X; that is, the base-e logarithm of X.\nIf X is less than or equal to 0, then NULL is returned.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT LN(2);\n        -> 0.69314718055995\nmysql> SELECT LN(-2);\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(485, 'RETURN', 23, 'Syntax:\nRETURN expr\n\nThe RETURN statement terminates execution of a stored function and\nreturns the value expr to the function caller. There must be at least\none RETURN statement in a stored function. There may be more than one\nif the function has multiple exit points.\n\nThis statement is not used in stored procedures, triggers, or events.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/return.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/return.html'),
	(486, 'SHOW COLLATION', 26, 'Syntax:\nSHOW COLLATION\n    [LIKE \'pattern\' | WHERE expr]\n\nThe output from SHOW COLLATION includes all available character sets.\nThe LIKE clause, if present, indicates which collation names to match.\nThe WHERE clause can be given to select rows using more general\nconditions, as discussed in\nhttp://dev.mysql.com/doc/refman/6.0/en/extended-show.html. For example:\n\nmysql> SHOW COLLATION LIKE \'latin1%\';\n+-------------------+---------+----+---------+----------+---------+\n| Collation         | Charset | Id | Default | Compiled | Sortlen |\n+-------------------+---------+----+---------+----------+---------+\n| latin1_german1_ci | latin1  |  5 |         |          |       0 |\n| latin1_swedish_ci | latin1  |  8 | Yes     | Yes      |       0 |\n| latin1_danish_ci  | latin1  | 15 |         |          |       0 |\n| latin1_german2_ci | latin1  | 31 |         | Yes      |       2 |\n| latin1_bin        | latin1  | 47 |         | Yes      |       0 |\n| latin1_general_ci | latin1  | 48 |         |          |       0 |\n| latin1_general_cs | latin1  | 49 |         |          |       0 |\n| latin1_spanish_ci | latin1  | 94 |         |          |       0 |\n+-------------------+---------+----+---------+----------+---------+\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/show-collation.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/show-collation.html'),
	(487, 'LOG', 4, 'Syntax:\nLOG(X), LOG(B,X)\n\nIf called with one parameter, this function returns the natural\nlogarithm of X. If X is less than or equal to 0, then NULL is returned.\n\nThe inverse of this function (when called with a single argument) is\nthe EXP() function.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT LOG(2);\n        -> 0.69314718055995\nmysql> SELECT LOG(-2);\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(488, 'SET SQL_LOG_BIN', 26, 'Syntax:\nSET sql_log_bin = {0|1}\n\nDisables or enables binary logging for the current connection\n(sql_log_bin is a session variable) if the client has the SUPER\nprivilege. The statement is refused with an error if the client does\nnot have that privilege.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/set-sql-log-bin.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/set-sql-log-bin.html'),
	(489, '!=', 17, 'Syntax:\n<>, !=\n\nNot equal:\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT \'.01\' <> \'0.01\';\n        -> 1\nmysql> SELECT .01 <> \'0.01\';\n        -> 0\nmysql> SELECT \'zapp\' <> \'zappp\';\n        -> 1\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(490, 'WHILE', 23, 'Syntax:\n[begin_label:] WHILE search_condition DO\n    statement_list\nEND WHILE [end_label]\n\nThe statement list within a WHILE statement is repeated as long as the\nsearch_condition is true. statement_list consists of one or more\nstatements.\n\nA WHILE statement can be labeled. end_label cannot be given unless\nbegin_label also is present. If both are present, they must be the\nsame.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/while-statement.html\n\n', 'CREATE PROCEDURE dowhile()\nBEGIN\n  DECLARE v1 INT DEFAULT 5;\n\n  WHILE v1 > 0 DO\n    ...\n    SET v1 = v1 - 1;\n  END WHILE;\nEND\n', 'http://dev.mysql.com/doc/refman/6.0/en/while-statement.html'),
	(491, 'AES_DECRYPT', 11, 'Syntax:\nAES_DECRYPT(crypt_str,key_str)\n\nThis function allows decryption of data using the official AES\n(Advanced Encryption Standard) algorithm. For more information, see the\ndescription of AES_ENCRYPT().\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/encryption-functions.html'),
	(492, 'DAYNAME', 31, 'Syntax:\nDAYNAME(date)\n\nReturns the name of the weekday for date. The language used for the\nname is controlled by the value of the lc_time_names system variable\n(http://dev.mysql.com/doc/refman/6.0/en/locale-support.html).\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html\n\n', 'mysql> SELECT DAYNAME(\'2007-02-03\');\n        -> \'Saturday\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/date-and-time-functions.html'),
	(493, 'COERCIBILITY', 15, 'Syntax:\nCOERCIBILITY(str)\n\nReturns the collation coercibility value of the string argument.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT COERCIBILITY(\'abc\' COLLATE latin1_swedish_ci);\n        -> 0\nmysql> SELECT COERCIBILITY(USER());\n        -> 3\nmysql> SELECT COERCIBILITY(\'abc\');\n        -> 4\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(494, 'INT', 22, 'INT[(M)] [UNSIGNED] [ZEROFILL]\n\nA normal-size integer. The signed range is -2147483648 to 2147483647.\nThe unsigned range is 0 to 4294967295.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html\n\n', '', 'http://dev.mysql.com/doc/refman/6.0/en/numeric-type-overview.html'),
	(495, 'GLENGTH', 12, 'GLength(ls)\n\nReturns as a double-precision number the length of the LineString value\nls in its associated spatial reference.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions\n\n', 'mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT GLength(GeomFromText(@ls));\n+----------------------------+\n| GLength(GeomFromText(@ls)) |\n+----------------------------+\n|            2.8284271247462 |\n+----------------------------+\n', 'http://dev.mysql.com/doc/refman/6.0/en/geometry-property-functions.html#linestring-property-functions'),
	(496, 'RADIANS', 4, 'Syntax:\nRADIANS(X)\n\nReturns the argument X, converted from degrees to radians. (Note that\nπ radians equals 180 degrees.)\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html\n\n', 'mysql> SELECT RADIANS(90);\n        -> 1.5707963267949\n', 'http://dev.mysql.com/doc/refman/6.0/en/mathematical-functions.html'),
	(497, 'COLLATION', 15, 'Syntax:\nCOLLATION(str)\n\nReturns the collation of the string argument.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT COLLATION(\'abc\');\n        -> \'latin1_swedish_ci\'\nmysql> SELECT COLLATION(_utf8\'abc\');\n        -> \'utf8_general_ci\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(498, 'COALESCE', 17, 'Syntax:\nCOALESCE(value,...)\n\nReturns the first non-NULL value in the list, or NULL if there are no\nnon-NULL values.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html\n\n', 'mysql> SELECT COALESCE(NULL,1);\n        -> 1\nmysql> SELECT COALESCE(NULL,NULL,NULL);\n        -> NULL\n', 'http://dev.mysql.com/doc/refman/6.0/en/comparison-operators.html'),
	(499, 'VERSION', 15, 'Syntax:\nVERSION()\n\nReturns a string that indicates the MySQL server version. The string\nuses the utf8 character set.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/information-functions.html\n\n', 'mysql> SELECT VERSION();\n        -> \'6.0.10-standard\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/information-functions.html'),
	(500, 'MAKE_SET', 36, 'Syntax:\nMAKE_SET(bits,str1,str2,...)\n\nReturns a set value (a string containing substrings separated by ","\ncharacters) consisting of the strings that have the corresponding bit\nin bits set. str1 corresponds to bit 0, str2 to bit 1, and so on. NULL\nvalues in str1, str2, ... are not appended to the result.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT MAKE_SET(1,\'a\',\'b\',\'c\');\n        -> \'a\'\nmysql> SELECT MAKE_SET(1 | 4,\'hello\',\'nice\',\'world\');\n        -> \'hello,world\'\nmysql> SELECT MAKE_SET(1 | 4,\'hello\',\'nice\',NULL,\'world\');\n        -> \'hello\'\nmysql> SELECT MAKE_SET(0,\'a\',\'b\',\'c\');\n        -> \'\'\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html'),
	(501, 'FIND_IN_SET', 36, 'Syntax:\nFIND_IN_SET(str,strlist)\n\nReturns a value in the range of 1 to N if the string str is in the\nstring list strlist consisting of N substrings. A string list is a\nstring composed of substrings separated by "," characters. If the first\nargument is a constant string and the second is a column of type SET,\nthe FIND_IN_SET() function is optimized to use bit arithmetic. Returns\n0 if str is not in strlist or if strlist is the empty string. Returns\nNULL if either argument is NULL. This function does not work properly\nif the first argument contains a comma (",") character.\n\nURL: http://dev.mysql.com/doc/refman/6.0/en/string-functions.html\n\n', 'mysql> SELECT FIND_IN_SET(\'b\',\'a,b,c,d\');\n        -> 2\n', 'http://dev.mysql.com/doc/refman/6.0/en/string-functions.html');
/*!40000 ALTER TABLE `help_topic` ENABLE KEYS */;

-- Dumping structure for table mysql.host
CREATE TABLE IF NOT EXISTS `host` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`Db`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Host privileges;  Merged with database privileges';

-- Dumping data for table mysql.host: 0 rows
/*!40000 ALTER TABLE `host` DISABLE KEYS */;
/*!40000 ALTER TABLE `host` ENABLE KEYS */;

-- Dumping structure for table mysql.ndb_binlog_index
CREATE TABLE IF NOT EXISTS `ndb_binlog_index` (
  `Position` bigint(20) unsigned NOT NULL,
  `File` varchar(255) NOT NULL,
  `epoch` bigint(20) unsigned NOT NULL,
  `inserts` int(10) unsigned NOT NULL,
  `updates` int(10) unsigned NOT NULL,
  `deletes` int(10) unsigned NOT NULL,
  `schemaops` int(10) unsigned NOT NULL,
  `orig_server_id` int(10) unsigned NOT NULL,
  `orig_epoch` bigint(20) unsigned NOT NULL,
  `gci` int(10) unsigned NOT NULL,
  PRIMARY KEY (`epoch`,`orig_server_id`,`orig_epoch`)
) ENGINE=MARIA DEFAULT CHARSET=latin1 PAGE_CHECKSUM=1;

-- Dumping data for table mysql.ndb_binlog_index: 0 rows
/*!40000 ALTER TABLE `ndb_binlog_index` DISABLE KEYS */;
/*!40000 ALTER TABLE `ndb_binlog_index` ENABLE KEYS */;

-- Dumping structure for table mysql.plugin
CREATE TABLE IF NOT EXISTS `plugin` (
  `name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `dl` char(128) COLLATE utf8_bin NOT NULL DEFAULT '',
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='MySQL plugins';

-- Dumping data for table mysql.plugin: 0 rows
/*!40000 ALTER TABLE `plugin` DISABLE KEYS */;
/*!40000 ALTER TABLE `plugin` ENABLE KEYS */;

-- Dumping structure for table mysql.proc
CREATE TABLE IF NOT EXISTS `proc` (
  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `type` enum('FUNCTION','PROCEDURE') NOT NULL,
  `specific_name` char(64) NOT NULL DEFAULT '',
  `language` enum('SQL') NOT NULL DEFAULT 'SQL',
  `sql_data_access` enum('CONTAINS_SQL','NO_SQL','READS_SQL_DATA','MODIFIES_SQL_DATA') NOT NULL DEFAULT 'CONTAINS_SQL',
  `is_deterministic` enum('YES','NO') NOT NULL DEFAULT 'NO',
  `security_type` enum('INVOKER','DEFINER') NOT NULL DEFAULT 'DEFINER',
  `param_list` blob NOT NULL,
  `returns` longblob NOT NULL,
  `body` longblob NOT NULL,
  `definer` char(77) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','NOT_USED','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH') NOT NULL DEFAULT '',
  `comment` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `body_utf8` longblob,
  PRIMARY KEY (`db`,`name`,`type`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Stored Procedures';

-- Dumping data for table mysql.proc: 9 rows
/*!40000 ALTER TABLE `proc` DISABLE KEYS */;
INSERT INTO `proc` (`db`, `name`, `type`, `specific_name`, `language`, `sql_data_access`, `is_deterministic`, `security_type`, `param_list`, `returns`, `body`, `definer`, `created`, `modified`, `sql_mode`, `comment`, `character_set_client`, `collation_connection`, `db_collation`, `body_utf8`) VALUES
	('produccion', 'rSLote', 'PROCEDURE', 'rSLote', 'SQL', 'CONTAINS_SQL', 'NO', 'DEFINER', _binary 0x0D0A09494E20607374602056415243484152283530290D0A0D0A, _binary '', _binary 0x424547494E0D0A202073656C656374204E756D5F4C6F74652C20556269636163696F6E2C20535F4C6F74652066726F6D206C6F746520776865726520535F4C6F7465203D2073743B0D0A454E44, 'root@localhost', '2017-03-06 16:10:51', '2017-03-06 16:10:51', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'utf8', 'utf8_general_ci', 'utf8_general_ci', _binary 0x424547494E0D0A202073656C656374204E756D5F4C6F74652C20556269636163696F6E2C20535F4C6F74652066726F6D206C6F746520776865726520535F4C6F7465203D2073743B0D0A454E44),
	('produccion', 'rFirmado', 'PROCEDURE', 'rFirmado', 'SQL', 'READS_SQL_DATA', 'NO', 'DEFINER', _binary 0x0D0A09494E2060697373756573602056415243484152283530290D0A0D0A0D0A, _binary '', _binary 0x424547494E0D0A0D0A202073656C656374204E756D5F53657269652C2045746170612C20465F45746170612C2049737375655F452066726F6D2070726F645F6574617061202077686572652049737375655F45203D206973737565733B0D0A0D0A454E44, 'root@localhost', '2017-03-02 12:38:23', '2017-03-02 12:38:23', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'utf8', 'utf8_general_ci', 'utf8_general_ci', _binary 0x424547494E0D0A0D0A202073656C656374204E756D5F53657269652C2045746170612C20465F45746170612C2049737375655F452066726F6D2070726F645F6574617061202077686572652049737375655F45203D206973737565733B0D0A0D0A454E44),
	('produccion', 'rLote', 'PROCEDURE', 'rLote', 'SQL', 'CONTAINS_SQL', 'NO', 'DEFINER', _binary 0x0D0A09494E20607061636B6020494E542C0D0A09494E20607365726965602056415243484152283530290D0A0D0A0D0A0D0A, _binary '', _binary 0x424547494E0D0A0D0A20202053656C656374204E756D5F53657269652C204D41435F416464726573732C204E756D5F4C6F74652066726F6D2070726F647563746F207768657265204E756D5F4C6F74653D207061636B206F7220204E756D5F53657269653D2073657269653B0D0A454E44, 'root@localhost', '2017-03-02 16:07:39', '2017-03-02 16:07:39', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'utf8', 'utf8_general_ci', 'utf8_general_ci', _binary 0x424547494E0D0A0D0A20202053656C656374204E756D5F53657269652C204D41435F416464726573732C204E756D5F4C6F74652066726F6D2070726F647563746F207768657265204E756D5F4C6F74653D207061636B206F7220204E756D5F53657269653D2073657269653B0D0A454E44),
	('produccion', 'rFecha', 'PROCEDURE', 'rFecha', 'SQL', 'CONTAINS_SQL', 'NO', 'DEFINER', _binary 0x0D0A09494E20606574602056415243484152283530292C0D0A09494E2060666020444154450D0A, _binary '', _binary 0x424547494E0D0A0D0A20202073656C656374204E756D5F53657269652C2045746170612C20465F45746170612C2049737375655F452066726F6D2070726F645F65746170612077686572652045746170613D20657420616E6420465F45746170613D20663B0D0A0D0A454E44, 'root@localhost', '2017-03-03 13:53:58', '2017-03-03 13:53:58', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'utf8', 'utf8_general_ci', 'utf8_general_ci', _binary 0x424547494E0D0A0D0A20202073656C656374204E756D5F53657269652C2045746170612C20465F45746170612C2049737375655F452066726F6D2070726F645F65746170612077686572652045746170613D20657420616E6420465F45746170613D20663B0D0A0D0A454E44),
	('produccion', 'rLUbicacion', 'PROCEDURE', 'rLUbicacion', 'SQL', 'CONTAINS_SQL', 'NO', 'DEFINER', _binary 0x0D0A09494E20607562602056415243484152283530290D0A, _binary '', _binary 0x424547494E0D0A2073656C656374204E756D5F4C6F74652C20556269636163696F6E2066726F6D206C6F74650D0A20776865726520556269636163696F6E203D2075623B0D0A454E44, 'root@localhost', '2017-03-03 17:55:34', '2017-03-03 17:55:34', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'utf8', 'utf8_general_ci', 'utf8_general_ci', _binary 0x424547494E0D0A2073656C656374204E756D5F4C6F74652C20556269636163696F6E2066726F6D206C6F74650D0A20776865726520556269636163696F6E203D2075623B0D0A454E44),
	('produccion', 'rFechaE', 'PROCEDURE', 'rFechaE', 'SQL', 'CONTAINS_SQL', 'NO', 'DEFINER', _binary 0x0D0A09494E20606574602056415243484152283530292C0D0A09494E206066316020444154452C0D0A09494E206066326020444154450D0A0D0A0D0A, _binary '', _binary 0x424547494E0D0A2020202009202073656C656374204E756D5F53657269652C2045746170612C20465F45746170612C49737375655F452066726F6D2070726F645F65746170612077686572652045746170613D20657420616E6420465F4574617061206265747765656E20663120616E642066323B0D0A09092020202020202020200D0A20454E44, 'root@localhost', '2017-03-06 15:05:43', '2017-03-06 15:05:43', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'utf8', 'utf8_general_ci', 'utf8_general_ci', _binary 0x424547494E0D0A2020202009202073656C656374204E756D5F53657269652C2045746170612C20465F45746170612C49737375655F452066726F6D2070726F645F65746170612077686572652045746170613D20657420616E6420465F4574617061206265747765656E20663120616E642066323B0D0A09092020202020202020200D0A20454E44),
	('prueba', 'Store', 'PROCEDURE', 'Store', 'SQL', 'CONTAINS_SQL', 'NO', 'DEFINER', _binary '', _binary '', _binary 0x424547494E0D0A53454C454354204E756D5F53657269652C4D41435F416464726573732C4E756D5F4C6F74652066726F6D2070726F647563746F20696E6E6572206A6F696E206C6F74652077686572652070726F647563746F2E49645F4C6F7465203D206C6F74652E49645F4C6F74653B0D0A454E44, 'root@localhost', '2017-03-07 16:50:53', '2017-03-07 16:50:53', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'utf8', 'utf8_general_ci', 'utf8_general_ci', _binary 0x424547494E0D0A53454C454354204E756D5F53657269652C4D41435F416464726573732C4E756D5F4C6F74652066726F6D2070726F647563746F20696E6E6572206A6F696E206C6F74652077686572652070726F647563746F2E49645F4C6F7465203D206C6F74652E49645F4C6F74653B0D0A454E44),
	('produccion', 'rReposiciones', 'PROCEDURE', 'rReposiciones', 'SQL', 'CONTAINS_SQL', 'NO', 'DEFINER', _binary 0x0D0A09494E20606D602056415243484152283530292C0D0A09494E206061602056415243484152283530290D0A2C0D0A09494E206063602056415243484152283530292C0D0A09494E2060637465602056415243484152283530290D0A0D0A0D0A, _binary '', _binary 0x424547494E0D0A2073656C656374205365726965532C204D4143732C43616E616C2C20436C69656E74652C204369756461644F2C20465F53616C6964612C204D6F7469766F2C204175746F72697A6F2066726F6D207265706F736963696F6E6573207768657265204D6F7469766F203D206D206F72204175746F72697A6F203D2061206F722043616E616C203D2063206F7220436C69656E7465203D206374653B0D0A454E44, 'root@localhost', '2017-03-15 09:51:48', '2017-03-15 09:51:48', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'utf8', 'utf8_general_ci', 'utf8_general_ci', _binary 0x424547494E0D0A2073656C656374205365726965532C204D4143732C43616E616C2C20436C69656E74652C204369756461644F2C20465F53616C6964612C204D6F7469766F2C204175746F72697A6F2066726F6D207265706F736963696F6E6573207768657265204D6F7469766F203D206D206F72204175746F72697A6F203D2061206F722043616E616C203D2063206F7220436C69656E7465203D206374653B0D0A454E44),
	('produccion', 'Disponibilidad', 'PROCEDURE', 'Disponibilidad', 'SQL', 'CONTAINS_SQL', 'NO', 'DEFINER', _binary 0x0D0A09494E206073602056415243484152283530290D0A0D0A, _binary '', _binary 0x424547494E0D0A2073656C656374202A2066726F6D2070726F647563746F207768657265204E756D5F5365726965203D7320616E6420446973706F6E6962696C69646164203D22446973706F6E69626C65223B20200D0A454E44, 'root@localhost', '2017-03-16 11:00:21', '2017-03-16 11:00:21', 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', '', 'utf8', 'utf8_general_ci', 'utf8_general_ci', _binary 0x424547494E0D0A2073656C656374202A2066726F6D2070726F647563746F207768657265204E756D5F5365726965203D7320616E6420446973706F6E6962696C69646164203D22446973706F6E69626C65223B20200D0A454E44);
/*!40000 ALTER TABLE `proc` ENABLE KEYS */;

-- Dumping structure for table mysql.procs_priv
CREATE TABLE IF NOT EXISTS `procs_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Routine_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Routine_type` enum('FUNCTION','PROCEDURE') COLLATE utf8_bin NOT NULL,
  `Grantor` char(77) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proc_priv` set('Execute','Alter Routine','Grant') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Host`,`Db`,`User`,`Routine_name`,`Routine_type`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Procedure privileges';

-- Dumping data for table mysql.procs_priv: 0 rows
/*!40000 ALTER TABLE `procs_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `procs_priv` ENABLE KEYS */;

-- Dumping structure for table mysql.servers
CREATE TABLE IF NOT EXISTS `servers` (
  `Server_name` char(64) NOT NULL DEFAULT '',
  `Host` char(64) NOT NULL DEFAULT '',
  `Db` char(64) NOT NULL DEFAULT '',
  `Username` char(64) NOT NULL DEFAULT '',
  `Password` char(64) NOT NULL DEFAULT '',
  `Port` int(4) NOT NULL DEFAULT '0',
  `Socket` char(64) NOT NULL DEFAULT '',
  `Wrapper` char(64) NOT NULL DEFAULT '',
  `Owner` char(64) NOT NULL DEFAULT '',
  PRIMARY KEY (`Server_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='MySQL Foreign Servers table';

-- Dumping data for table mysql.servers: 0 rows
/*!40000 ALTER TABLE `servers` DISABLE KEYS */;
/*!40000 ALTER TABLE `servers` ENABLE KEYS */;

-- Dumping structure for table mysql.slow_log
CREATE TABLE IF NOT EXISTS `slow_log` (
  `start_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_host` mediumtext NOT NULL,
  `query_time` time NOT NULL,
  `lock_time` time NOT NULL,
  `rows_sent` int(11) NOT NULL,
  `rows_examined` int(11) NOT NULL,
  `db` varchar(512) NOT NULL,
  `last_insert_id` int(11) NOT NULL,
  `insert_id` int(11) NOT NULL,
  `server_id` int(11) NOT NULL,
  `sql_text` mediumtext NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='Slow log';

-- Dumping data for table mysql.slow_log: 2 rows
/*!40000 ALTER TABLE `slow_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `slow_log` ENABLE KEYS */;

-- Dumping structure for table mysql.tables_priv
CREATE TABLE IF NOT EXISTS `tables_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Grantor` char(77) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Table_priv` set('Select','Insert','Update','Delete','Create','Drop','Grant','References','Index','Alter','Create View','Show view','Trigger') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Table privileges';

-- Dumping data for table mysql.tables_priv: 0 rows
/*!40000 ALTER TABLE `tables_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `tables_priv` ENABLE KEYS */;

-- Dumping structure for table mysql.time_zone
CREATE TABLE IF NOT EXISTS `time_zone` (
  `Time_zone_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Use_leap_seconds` enum('Y','N') NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Time_zone_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zones';

-- Dumping data for table mysql.time_zone: 0 rows
/*!40000 ALTER TABLE `time_zone` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone` ENABLE KEYS */;

-- Dumping structure for table mysql.time_zone_leap_second
CREATE TABLE IF NOT EXISTS `time_zone_leap_second` (
  `Transition_time` bigint(20) NOT NULL,
  `Correction` int(11) NOT NULL,
  PRIMARY KEY (`Transition_time`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Leap seconds information for time zones';

-- Dumping data for table mysql.time_zone_leap_second: 0 rows
/*!40000 ALTER TABLE `time_zone_leap_second` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_leap_second` ENABLE KEYS */;

-- Dumping structure for table mysql.time_zone_name
CREATE TABLE IF NOT EXISTS `time_zone_name` (
  `Name` char(64) NOT NULL,
  `Time_zone_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zone names';

-- Dumping data for table mysql.time_zone_name: 0 rows
/*!40000 ALTER TABLE `time_zone_name` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_name` ENABLE KEYS */;

-- Dumping structure for table mysql.time_zone_transition
CREATE TABLE IF NOT EXISTS `time_zone_transition` (
  `Time_zone_id` int(10) unsigned NOT NULL,
  `Transition_time` bigint(20) NOT NULL,
  `Transition_type_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Time_zone_id`,`Transition_time`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zone transitions';

-- Dumping data for table mysql.time_zone_transition: 0 rows
/*!40000 ALTER TABLE `time_zone_transition` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_transition` ENABLE KEYS */;

-- Dumping structure for table mysql.time_zone_transition_type
CREATE TABLE IF NOT EXISTS `time_zone_transition_type` (
  `Time_zone_id` int(10) unsigned NOT NULL,
  `Transition_type_id` int(10) unsigned NOT NULL,
  `Offset` int(11) NOT NULL DEFAULT '0',
  `Is_DST` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `Abbreviation` char(8) NOT NULL DEFAULT '',
  PRIMARY KEY (`Time_zone_id`,`Transition_type_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zone transition types';

-- Dumping data for table mysql.time_zone_transition_type: 0 rows
/*!40000 ALTER TABLE `time_zone_transition_type` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_transition_type` ENABLE KEYS */;

-- Dumping structure for table mysql.user
CREATE TABLE IF NOT EXISTS `user` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Password` char(41) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Reload_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Shutdown_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Process_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `File_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_db_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Super_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Repl_slave_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Repl_client_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_user_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tablespace_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `ssl_type` enum('','ANY','X509','SPECIFIED') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `ssl_cipher` blob NOT NULL,
  `x509_issuer` blob NOT NULL,
  `x509_subject` blob NOT NULL,
  `max_questions` int(11) unsigned NOT NULL DEFAULT '0',
  `max_updates` int(11) unsigned NOT NULL DEFAULT '0',
  `max_connections` int(11) unsigned NOT NULL DEFAULT '0',
  `max_user_connections` int(11) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`Host`,`User`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Users and global privileges';

-- Dumping data for table mysql.user: 2 rows
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` (`Host`, `User`, `Password`, `Select_priv`, `Insert_priv`, `Update_priv`, `Delete_priv`, `Create_priv`, `Drop_priv`, `Reload_priv`, `Shutdown_priv`, `Process_priv`, `File_priv`, `Grant_priv`, `References_priv`, `Index_priv`, `Alter_priv`, `Show_db_priv`, `Super_priv`, `Create_tmp_table_priv`, `Lock_tables_priv`, `Execute_priv`, `Repl_slave_priv`, `Repl_client_priv`, `Create_view_priv`, `Show_view_priv`, `Create_routine_priv`, `Alter_routine_priv`, `Create_user_priv`, `Event_priv`, `Trigger_priv`, `Create_tablespace_priv`, `ssl_type`, `ssl_cipher`, `x509_issuer`, `x509_subject`, `max_questions`, `max_updates`, `max_connections`, `max_user_connections`) VALUES
	('localhost', 'root', '*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', _binary '', _binary '', _binary '', 0, 0, 0, 0),
	('%', 'root', '*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'N', 'N', 'N', '', _binary '', _binary '', _binary '', 0, 0, 0, 0);
/*!40000 ALTER TABLE `user` ENABLE KEYS */;


-- Dumping database structure for produccion
CREATE DATABASE IF NOT EXISTS `produccion` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `produccion`;

-- Dumping structure for procedure produccion.Disponibilidad
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `Disponibilidad`(
	IN `s` VARCHAR(50)

)
BEGIN
 select * from producto where Num_Serie =s and Disponibilidad ="Disponible";  
END//
DELIMITER ;

-- Dumping structure for table produccion.etapas
CREATE TABLE IF NOT EXISTS `etapas` (
  `Id_Etapas` int(6) NOT NULL AUTO_INCREMENT,
  `Nom_Etapas` char(50) NOT NULL,
  PRIMARY KEY (`Id_Etapas`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.etapas: ~3 rows (approximately)
/*!40000 ALTER TABLE `etapas` DISABLE KEYS */;
INSERT INTO `etapas` (`Id_Etapas`, `Nom_Etapas`) VALUES
	(1, 'Maquinado'),
	(2, 'FirmaWare'),
	(3, 'Test');
/*!40000 ALTER TABLE `etapas` ENABLE KEYS */;

-- Dumping structure for table produccion.evaluacion
CREATE TABLE IF NOT EXISTS `evaluacion` (
  `Id_Eval` int(6) NOT NULL AUTO_INCREMENT,
  `Nom_Eval` char(15) NOT NULL,
  PRIMARY KEY (`Id_Eval`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.evaluacion: ~2 rows (approximately)
/*!40000 ALTER TABLE `evaluacion` DISABLE KEYS */;
INSERT INTO `evaluacion` (`Id_Eval`, `Nom_Eval`) VALUES
	(1, 'FirmWare'),
	(2, 'Test');
/*!40000 ALTER TABLE `evaluacion` ENABLE KEYS */;

-- Dumping structure for table produccion.issue
CREATE TABLE IF NOT EXISTS `issue` (
  `Id_Issue` int(6) NOT NULL AUTO_INCREMENT,
  `Tipo_Issue` char(15) NOT NULL,
  PRIMARY KEY (`Id_Issue`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.issue: ~2 rows (approximately)
/*!40000 ALTER TABLE `issue` DISABLE KEYS */;
INSERT INTO `issue` (`Id_Issue`, `Tipo_Issue`) VALUES
	(1, 'FirmWare'),
	(2, 'Test');
/*!40000 ALTER TABLE `issue` ENABLE KEYS */;

-- Dumping structure for table produccion.lote
CREATE TABLE IF NOT EXISTS `lote` (
  `Id_Lote` int(11) NOT NULL AUTO_INCREMENT,
  `Num_Lote` varchar(50) NOT NULL,
  `Ubicacion` varchar(50) NOT NULL,
  `S_Lote` varchar(50) NOT NULL,
  PRIMARY KEY (`Id_Lote`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.lote: ~11 rows (approximately)
/*!40000 ALTER TABLE `lote` DISABLE KEYS */;
INSERT INTO `lote` (`Id_Lote`, `Num_Lote`, `Ubicacion`, `S_Lote`) VALUES
	(1, '21', 'Almacen', 'Pendiente'),
	(2, '22', 'Almacen', 'Pendiente'),
	(3, '23', 'Almacen', 'Terminado'),
	(4, '24', 'Almacen', 'Terminado'),
	(5, '25', 'ALMACEN', 'Pendiente'),
	(6, '26', 'Mercado', 'Pendiente'),
	(7, '27', 'Mercado', 'Pendiente'),
	(12, '29', 'Mercado', 'Pendiente'),
	(17, '32', 'abcdefg', 'Iniciado'),
	(19, '30', 'abcdef', 'Terminado'),
	(20, '33', 'Almacen', 'Iniciado');
/*!40000 ALTER TABLE `lote` ENABLE KEYS */;

-- Dumping structure for table produccion.producto
CREATE TABLE IF NOT EXISTS `producto` (
  `Id_Prod` int(11) NOT NULL AUTO_INCREMENT,
  `Num_Serie` varchar(50) NOT NULL,
  `MAC_Address` varchar(50) NOT NULL,
  `Num_Lote` varchar(50) NOT NULL,
  `Disponibilidad` varchar(50) NOT NULL,
  PRIMARY KEY (`Id_Prod`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.producto: ~11 rows (approximately)
/*!40000 ALTER TABLE `producto` DISABLE KEYS */;
INSERT INTO `producto` (`Id_Prod`, `Num_Serie`, `MAC_Address`, `Num_Lote`, `Disponibilidad`) VALUES
	(2, '201604180400', '78:51:12:A3:98:FF', '22', ''),
	(4, '201604180214', '78:A3:51:12:9C:17', '21', 'No Disponible'),
	(5, '201604180416', '78:A3:51:12:9E:2B', '21', 'No Disponible'),
	(6, '201604180409', '78:A3:51:12:9E:DB', '21', 'Disponible'),
	(9, '201604180407', '78:A3:51:12:9B:27', '21', 'No Disponible'),
	(10, '201604180411', '78:A3:51:12:9B:93', '21', 'En Revision'),
	(11, '201604180410', '78:A3:51:12:9C:13', '21', ''),
	(12, '201604180460', '78:51:12:A3:32:AA', '21', ''),
	(13, '201604180415', '78:51:12:A3:30:40', '21', 'En Revision'),
	(15, '201604180475', '78:51:12:A3:CD:CF', '0', 'En Revision'),
	(16, '201604180474', '78:51:12:A3:48:51', '21', 'No Disponible');
/*!40000 ALTER TABLE `producto` ENABLE KEYS */;

-- Dumping structure for table produccion.prod_etapa
CREATE TABLE IF NOT EXISTS `prod_etapa` (
  `Id_PEtapa` int(6) NOT NULL AUTO_INCREMENT,
  `Num_Serie` varchar(50) NOT NULL DEFAULT '0',
  `Etapa` varchar(50) NOT NULL DEFAULT '0',
  `F_Etapa` date NOT NULL,
  `Issue_E` varchar(50) NOT NULL,
  `S_Etapa` varchar(20) NOT NULL,
  PRIMARY KEY (`Id_PEtapa`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.prod_etapa: ~12 rows (approximately)
/*!40000 ALTER TABLE `prod_etapa` DISABLE KEYS */;
INSERT INTO `prod_etapa` (`Id_PEtapa`, `Num_Serie`, `Etapa`, `F_Etapa`, `Issue_E`, `S_Etapa`) VALUES
	(1, '201604180399', 'Firmado', '2017-03-02', 'Firmado', 'Iniciado'),
	(2, '201604180400', 'Pruebas', '2017-03-03', 'Pruebas', 'Iniciado'),
	(3, '201604180401', 'Pruebas', '2017-03-03', 'Ninguno', 'Terminada'),
	(5, '201604180400', 'Maquinado', '2017-03-14', 'Ninguno', 'Terminado'),
	(7, '201604180400', 'Maquinado', '2017-03-01', 'Ninguno', 'Terminado'),
	(8, '201604180399', 'Maquinado', '2017-03-13', 'Ninguno', 'Terminado'),
	(12, '201604180401', 'Etiquetado', '2017-03-01', 'Ninguno', 'Terminado'),
	(15, '201604180401', 'Prueba', '2017-03-23', 'Ninguno', 'Terminado'),
	(16, '201604180401', 'Maquinado', '2017-03-14', 'Ninguno', 'Terminado'),
	(17, '201604180411', 'Maquinado', '2017-03-14', 'Ninguno', 'Terminado'),
	(18, '201604180410', 'Etiquetado', '2017-03-14', 'Ninguno', 'Terminado'),
	(19, '123456789654', 'Etiquetado', '2017-03-22', 'Firmado', 'Pendiente');
/*!40000 ALTER TABLE `prod_etapa` ENABLE KEYS */;

-- Dumping structure for table produccion.prod_eval
CREATE TABLE IF NOT EXISTS `prod_eval` (
  `Id_ProdEval` int(6) NOT NULL AUTO_INCREMENT,
  `Id_Prod` int(6) NOT NULL DEFAULT '0',
  `Id_Res` int(6) NOT NULL DEFAULT '0',
  `Id_Issue` int(6) NOT NULL DEFAULT '0',
  `F_EvalProd` date NOT NULL,
  `S_ProdEval` varchar(20) NOT NULL,
  PRIMARY KEY (`Id_ProdEval`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.prod_eval: ~2 rows (approximately)
/*!40000 ALTER TABLE `prod_eval` DISABLE KEYS */;
INSERT INTO `prod_eval` (`Id_ProdEval`, `Id_Prod`, `Id_Res`, `Id_Issue`, `F_EvalProd`, `S_ProdEval`) VALUES
	(1, 1901, 1, 1, '2017-01-30', '3'),
	(2, 2001, 2, 2, '2017-01-30', '2');
/*!40000 ALTER TABLE `prod_eval` ENABLE KEYS */;

-- Dumping structure for table produccion.prod_lote
CREATE TABLE IF NOT EXISTS `prod_lote` (
  `Id_ProdLote` int(6) NOT NULL AUTO_INCREMENT,
  `Id_Prod` int(6) NOT NULL DEFAULT '0',
  `Id_Etapa` int(6) NOT NULL DEFAULT '0',
  `S_Etapa` varchar(20) NOT NULL DEFAULT '0',
  `F_Etapa` date NOT NULL,
  `Id_ProdEval` int(6) NOT NULL DEFAULT '0',
  `S_EvalProd` varchar(20) NOT NULL DEFAULT '0',
  `F_EvalProd` date NOT NULL,
  `Id_Issue` int(6) NOT NULL DEFAULT '0',
  `S_Lote` varchar(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`Id_ProdLote`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.prod_lote: ~2 rows (approximately)
/*!40000 ALTER TABLE `prod_lote` DISABLE KEYS */;
INSERT INTO `prod_lote` (`Id_ProdLote`, `Id_Prod`, `Id_Etapa`, `S_Etapa`, `F_Etapa`, `Id_ProdEval`, `S_EvalProd`, `F_EvalProd`, `Id_Issue`, `S_Lote`) VALUES
	(1, 1901, 1, '3', '2017-01-30', 1, '3', '2017-01-30', 1, '19'),
	(2, 2001, 1, '2', '2017-01-30', 2, '1', '2017-01-30', 2, '20');
/*!40000 ALTER TABLE `prod_lote` ENABLE KEYS */;

-- Dumping structure for table produccion.reposiciones
CREATE TABLE IF NOT EXISTS `reposiciones` (
  `Id_Reposicion` int(11) NOT NULL AUTO_INCREMENT,
  `SerieS` varchar(50) DEFAULT '0',
  `MACs` varchar(50) DEFAULT '0',
  `LoteS` int(11) DEFAULT '0',
  `SerieE` varchar(50) DEFAULT '0',
  `MACe` varchar(50) DEFAULT '0',
  `LoteE` varchar(50) DEFAULT '0',
  `Canal` varchar(50) NOT NULL DEFAULT '0',
  `Cliente` varchar(50) NOT NULL DEFAULT '0',
  `CiudadO` varchar(50) NOT NULL DEFAULT '0',
  `F_Salida` varchar(50) NOT NULL DEFAULT '0',
  `Motivo` varchar(50) NOT NULL DEFAULT '0',
  `Prestamo` varchar(50) DEFAULT '0',
  `Autorizo` varchar(50) NOT NULL DEFAULT '0',
  PRIMARY KEY (`Id_Reposicion`)
) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.reposiciones: ~10 rows (approximately)
/*!40000 ALTER TABLE `reposiciones` DISABLE KEYS */;
INSERT INTO `reposiciones` (`Id_Reposicion`, `SerieS`, `MACs`, `LoteS`, `SerieE`, `MACe`, `LoteE`, `Canal`, `Cliente`, `CiudadO`, `F_Salida`, `Motivo`, `Prestamo`, `Autorizo`) VALUES
	(2, '76464', '5464535', 545, '46434', '46542415', '454', 'frrcfrvuytuityi', 'uytguyrfudy', 'uytguyrfudy', '2017/3/7', 'Cambio de Modelo', '0', 'gfudydrd'),
	(3, '201604180400', '78:51:12:A3:15:FF', 21, '201604180400', '78:51:12:A3:15:FF', '21', 'SDASFAS', 'ASDFAF', 'ASDFAF', '2017/3/7', 'Cambio de Modelo', '0', 'FASASFASD'),
	(4, '201604180400', '78:A3:51:12:98:BF', 21, '201604180407', '78:A3:51:12:99:BF', '21', 'asdasd', 'dasfasf', 'dasfasf', '2017/3/14', 'Cambio de Modelo', '0', 'fsafasfas'),
	(26, '201604180400', '78:51:12:A3:58:59', 21, '201604180450', '78:51:12:A3:58:60', '21', 'ADSASFAF', 'SDASFSAF', 'SDASFSAF', '2017/3/15', 'Prestamo', 'kbkbjklbj', 'DFASFSA'),
	(27, '201604180401', '78:51:12:A3:58:59', 21, '201604180400', '78:51:12:A3:58:60', '21', 'SDAFDAFASFa', 'ADFASFASFDa', 'ADFASFASFDa', '2017/3/13', 'Cambio de Modelo', '', 'ASDFASFASF'),
	(28, '201604180401', '78:51:12:A3:58:59', 21, '201604180400', '78:51:12:A3:58:60', '21', 'ADSASFAF', 'SDASFSAF', 'SDASFSAF', '2017/3/13', 'Cancelacion Canal', 'DFASFSA', 'DFASFSA'),
	(34, '201604180214', '78:51:12:A3:CD:CE', 21, '201604180475', '78:51:12:A3:CD:CF', '21', 'SADASD', 'ASDAD', 'ASDAD', '2017/3/16', 'Falla de Equipo', '0', 'ASDAD'),
	(36, '201604180214', '78:51:12:A3:21:AA', 21, '201604180475', '78:51:12:A3:21:AB', '21', 'DASFASFDS', 'DSFSAF', 'DSFSAF', '2017/3/16', 'Termino Contrato', '', 'ADFASFASFAD'),
	(37, '201604180474', '78:51:12:AB:BC:CD', 21, '201604180415', '78:51:12:DC:CB:BA', '21', 'DSSFSDFS', 'FSDFSFFSD', 'FSDFSFFSD', '2017/3/22', 'Termino Contrato', '', 'DFSFS'),
	(38, '201604180407', '78:A3:51:12:9B:27', 21, '201604180411', '78:A3:51:12:9B:93', '21', 'Maria Martinez', 'Pinturas S.A de C.V', 'Tijuana', '2017/3/30', 'Falla de Equipo', '', 'Sergio Chavez');
/*!40000 ALTER TABLE `reposiciones` ENABLE KEYS */;

-- Dumping structure for table produccion.result
CREATE TABLE IF NOT EXISTS `result` (
  `Id_Result` int(11) NOT NULL AUTO_INCREMENT,
  `Nom_Result` char(15) NOT NULL DEFAULT '0',
  PRIMARY KEY (`Id_Result`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.result: ~2 rows (approximately)
/*!40000 ALTER TABLE `result` DISABLE KEYS */;
INSERT INTO `result` (`Id_Result`, `Nom_Result`) VALUES
	(1, 'Pass'),
	(2, 'Fail');
/*!40000 ALTER TABLE `result` ENABLE KEYS */;

-- Dumping structure for procedure produccion.rFecha
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `rFecha`(
	IN `et` VARCHAR(50),
	IN `f` DATE
)
BEGIN

   select Num_Serie, Etapa, F_Etapa, Issue_E from prod_etapa where Etapa= et and F_Etapa= f;

END//
DELIMITER ;

-- Dumping structure for procedure produccion.rFechaE
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `rFechaE`(
	IN `et` VARCHAR(50),
	IN `f1` DATE,
	IN `f2` DATE


)
BEGIN
    	  select Num_Serie, Etapa, F_Etapa,Issue_E from prod_etapa where Etapa= et and F_Etapa between f1 and f2;
		         
 END//
DELIMITER ;

-- Dumping structure for procedure produccion.rFirmado
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `rFirmado`(
	IN `issues` VARCHAR(50)


)
    READS SQL DATA
BEGIN

  select Num_Serie, Etapa, F_Etapa, Issue_E from prod_etapa  where Issue_E = issues;

END//
DELIMITER ;

-- Dumping structure for procedure produccion.rLote
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `rLote`(
	IN `pack` INT,
	IN `serie` VARCHAR(50)



)
BEGIN

   Select Num_Serie, MAC_Address, Num_Lote from producto where Num_Lote= pack or  Num_Serie= serie;
END//
DELIMITER ;

-- Dumping structure for procedure produccion.rLUbicacion
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `rLUbicacion`(
	IN `ub` VARCHAR(50)
)
BEGIN
 select Num_Lote, Ubicacion from lote
 where Ubicacion = ub;
END//
DELIMITER ;

-- Dumping structure for procedure produccion.rReposiciones
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `rReposiciones`(
	IN `m` VARCHAR(50),
	IN `a` VARCHAR(50)
,
	IN `c` VARCHAR(50),
	IN `cte` VARCHAR(50)


)
BEGIN
 select SerieS, MACs,Canal, Cliente, CiudadO, F_Salida, Motivo, Autorizo from reposiciones where Motivo = m or Autorizo = a or Canal = c or Cliente = cte;
END//
DELIMITER ;

-- Dumping structure for procedure produccion.rSLote
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `rSLote`(
	IN `st` VARCHAR(50)

)
BEGIN
  select Num_Lote, Ubicacion, S_Lote from lote where S_Lote = st;
END//
DELIMITER ;

-- Dumping structure for table produccion.usuario
CREATE TABLE IF NOT EXISTS `usuario` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Nombre` varchar(30) NOT NULL DEFAULT '0',
  `Apellido` varchar(30) NOT NULL DEFAULT '0',
  `User` varchar(30) NOT NULL DEFAULT '0',
  `Password` varchar(30) NOT NULL DEFAULT '0',
  `Area` varchar(30) NOT NULL DEFAULT '0',
  `Puesto` varchar(30) NOT NULL DEFAULT '0',
  `Rol` varchar(50) NOT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

-- Dumping data for table produccion.usuario: ~15 rows (approximately)
/*!40000 ALTER TABLE `usuario` DISABLE KEYS */;
INSERT INTO `usuario` (`Id`, `Nombre`, `Apellido`, `User`, `Password`, `Area`, `Puesto`, `Rol`) VALUES
	(1, 'Maria', 'Rojas', 'Admin', '12345678a', 'Produccion', 'Ing. Produccion', 'Administrador'),
	(2, 'Mariana', 'Ortiz', 'mortizs', '12345ac1', 'asdbcd', 'asdfgds', 'Administrador'),
	(3, 'Jose', 'Cardona', 'jcardona', 'abc123', 'adadwerrqw', 'wqeqwrqwr', 'Observador'),
	(4, 'Nelida', 'Rodriguez', 'nrodriguez', 'ab123456', 'Produccion', 'Ing. Produccion', 'Administrador'),
	(6, 'Mireya', 'Rodriguez', 'mrodriguez', 'a123456ab', 'Produccion', 'Ing. Produccion', 'Administrador'),
	(7, 'Mariana', 'Contreras', 'mcontreras', '123456', 'infraestructura', 'Soporte', 'Administrador'),
	(8, 'carolina', 'ortiz', 'cortiz', '123456ab', 'infraestructura', 'soportetecnico', 'Administrador'),
	(9, 'Cesar', 'Contreras', 'ccontreras', '123456ab', 'Produccion', 'Ing. Produccion', 'Administrador'),
	(10, 'carmen', 'contreras', 'carcontreras', '123456ab', 'Infraestructura', 'Soporte Tecnico', 'Administrador'),
	(11, 'Guadalupe', 'Reyes', 'greyes', '123456ab', 'mercadotecnia', 'Medios Sociales', 'Observador'),
	(12, 'Martha', 'Gomez', 'mgomez', 'as123456', 'asdadffa', 'Soporte Tecnico', 'Observador'),
	(13, 'sadfasdf', 'adfasfas', 'zcxcxv', 'czxvzxv', 'zxcvzxv', 'zxcvzxvz', 'Observador'),
	(14, 'Nayeli', 'Rojas', 'nrojas', '123456', 'RecursosHumanos', 'Recursos Humanos', 'Administrador'),
	(15, 'asdfasf', 'sadfsadf', 'mortiz', 'asdfasfas', 'asdfasfas', 'asdfasf', 'Administrador'),
	(16, 'skldfnoasn', 'nisndioans', 'sdasadas', '123sdas', 'sisasd', 'sdasd', 'Administrador');
/*!40000 ALTER TABLE `usuario` ENABLE KEYS */;


-- Dumping database structure for prueba
CREATE DATABASE IF NOT EXISTS `prueba` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `prueba`;

-- Dumping structure for table prueba.lote
CREATE TABLE IF NOT EXISTS `lote` (
  `Id_Lote` int(11) NOT NULL AUTO_INCREMENT,
  `Num_Lote` int(11) NOT NULL,
  `Ubicacion` varchar(50) NOT NULL,
  `S_Lote` varchar(50) NOT NULL,
  PRIMARY KEY (`Id_Lote`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Dumping data for table prueba.lote: ~2 rows (approximately)
/*!40000 ALTER TABLE `lote` DISABLE KEYS */;
INSERT INTO `lote` (`Id_Lote`, `Num_Lote`, `Ubicacion`, `S_Lote`) VALUES
	(1, 19, 'Almacen', 'Pendiente'),
	(2, 20, 'Almacen', 'Pendiente');
/*!40000 ALTER TABLE `lote` ENABLE KEYS */;

-- Dumping structure for table prueba.producto
CREATE TABLE IF NOT EXISTS `producto` (
  `Id_Prod` int(11) NOT NULL AUTO_INCREMENT,
  `Num_Serie` int(11) NOT NULL,
  `MAC_Address` varchar(50) NOT NULL,
  `Id_Lote` int(11) NOT NULL,
  PRIMARY KEY (`Id_Prod`)
) ENGINE=InnoDB AUTO_INCREMENT=1905 DEFAULT CHARSET=utf8;

-- Dumping data for table prueba.producto: ~4 rows (approximately)
/*!40000 ALTER TABLE `producto` DISABLE KEYS */;
INSERT INTO `producto` (`Id_Prod`, `Num_Serie`, `MAC_Address`, `Id_Lote`) VALUES
	(1901, 146411313, '123163', 1),
	(1902, 1634131312, '46463464789', 19),
	(1903, 6464351, '464631313', 1),
	(1904, 4643131, '4646464', 2);
/*!40000 ALTER TABLE `producto` ENABLE KEYS */;

-- Dumping structure for procedure prueba.Store
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `Store`()
BEGIN
SELECT Num_Serie,MAC_Address,Num_Lote from producto inner join lote where producto.Id_Lote = lote.Id_Lote;
END//
DELIMITER ;

-- Dumping structure for table prueba.usuario
CREATE TABLE IF NOT EXISTS `usuario` (
  `User_Id` varchar(50) NOT NULL,
  `Contraseña` varchar(50) NOT NULL,
  `Area` varchar(50) NOT NULL,
  PRIMARY KEY (`User_Id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table prueba.usuario: ~0 rows (approximately)
/*!40000 ALTER TABLE `usuario` DISABLE KEYS */;
/*!40000 ALTER TABLE `usuario` ENABLE KEYS */;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
